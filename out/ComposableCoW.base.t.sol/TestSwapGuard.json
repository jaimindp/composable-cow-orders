{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_divisor",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "sellToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "buyToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "sellAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "validTo",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "appData",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "kind",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "partiallyFillable",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "sellTokenBalance",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "buyTokenBalance",
              "type": "bytes32"
            }
          ],
          "internalType": "struct GPv2Order.Data",
          "name": "order",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "contract IConditionalOrder",
              "name": "handler",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "staticInput",
              "type": "bytes"
            }
          ],
          "internalType": "struct IConditionalOrder.ConditionalOrderParams",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060405161030638038061030683398101604081905261002f91610037565b600055610050565b60006020828403121561004957600080fd5b5051919050565b6102a78061005f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b578063f9ae35a214610062575b600080fd5b61004e61004936600461012b565b610075565b604051901515815260200160405180910390f35b61004e610070366004610174565b61010e565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167ff9ae35a200000000000000000000000000000000000000000000000000000000148061010857507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b60008054610120906060880135610236565b159695505050505050565b60006020828403121561013d57600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461016d57600080fd5b9392505050565b60008060008060008587036101e081121561018e57600080fd5b6101808082121561019e57600080fd5b8796508601359450506101a085013567ffffffffffffffff808211156101c357600080fd5b908701906060828a0312156101d757600080fd5b9093506101c087013590808211156101ee57600080fd5b818801915088601f83011261020257600080fd5b81358181111561021157600080fd5b89602082850101111561022357600080fd5b9699959850939650602001949392505050565b60008261026c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50069056fea264697066735822122009177a5d5918fbcd56324c7b92f705b3256922176e8d1334f31ef9d37094896c64736f6c63430008130033",
    "sourceMap": "9155:439:156:-:0;;;9231:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9271:7;:18;9155:439;;14:184:170;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:170;;14:184;-1:-1:-1;14:184:170:o;:::-;9155:439:156;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b578063f9ae35a214610062575b600080fd5b61004e61004936600461012b565b610075565b604051901515815260200160405180910390f35b61004e610070366004610174565b61010e565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167ff9ae35a200000000000000000000000000000000000000000000000000000000148061010857507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b60008054610120906060880135610236565b159695505050505050565b60006020828403121561013d57600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461016d57600080fd5b9392505050565b60008060008060008587036101e081121561018e57600080fd5b6101808082121561019e57600080fd5b8796508601359450506101a085013567ffffffffffffffff808211156101c357600080fd5b908701906060828a0312156101d757600080fd5b9093506101c087013590808211156101ee57600080fd5b818801915088601f83011261020257600080fd5b81358181111561021157600080fd5b89602082850101111561022357600080fd5b9699959850939650602001949392505050565b60008261026c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50069056fea264697066735822122009177a5d5918fbcd56324c7b92f705b3256922176e8d1334f31ef9d37094896c64736f6c63430008130033",
    "sourceMap": "9155:439:156:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;317:204:138;;;;;;:::i;:::-;;:::i;:::-;;;516:14:170;;509:22;491:41;;479:2;464:18;317:204:138;;;;;;;9347:245:156;;;;;;:::i;:::-;;:::i;317:204:138:-;404:4;427:43;;;442:28;427:43;;:87;;-1:-1:-1;474:40:138;;;489:25;474:40;427:87;420:94;317:204;-1:-1:-1;;317:204:138:o;9347:245:156:-;9531:4;9573:7;;9554:26;;:16;;;;:26;:::i;:::-;:31;;9347:245;-1:-1:-1;;;;;;9347:245:156:o;14:332:170:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;199:117;335:5;14:332;-1:-1:-1;;;14:332:170:o;543:1108::-;708:6;716;724;732;740;784:9;775:7;771:23;814:3;810:2;806:12;803:32;;;831:1;828;821:12;803:32;854:3;877:2;873;869:11;866:31;;;893:1;890;883:12;866:31;916:9;;-1:-1:-1;957:18:170;;944:32;;-1:-1:-1;;1027:3:170;1012:19;;999:33;1051:18;1081:14;;;1078:34;;;1108:1;1105;1098:12;1078:34;1131:22;;;;1187:2;1169:16;;;1165:25;1162:45;;;1203:1;1200;1193:12;1162:45;1226:2;;-1:-1:-1;1281:3:170;1266:19;;1253:33;;1298:16;;;1295:36;;;1327:1;1324;1317:12;1295:36;1365:8;1354:9;1350:24;1340:34;;1412:7;1405:4;1401:2;1397:13;1393:27;1383:55;;1434:1;1431;1424:12;1383:55;1474:2;1461:16;1500:2;1492:6;1489:14;1486:34;;;1516:1;1513;1506:12;1486:34;1563:7;1556:4;1547:6;1543:2;1539:15;1535:26;1532:39;1529:59;;;1584:1;1581;1574:12;1529:59;543:1108;;;;-1:-1:-1;543:1108:170;;-1:-1:-1;1615:4:170;1607:13;;1639:6;543:1108;-1:-1:-1;;;543:1108:170:o;1656:266::-;1688:1;1714;1704:189;;1749:77;1746:1;1739:88;1850:4;1847:1;1840:15;1878:4;1875:1;1868:15;1704:189;-1:-1:-1;1907:9:170;;1656:266::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "supportsInterface(bytes4)": "01ffc9a7",
    "verify((address,address,address,uint256,uint256,uint32,bytes32,uint256,bytes32,bool,bytes32,bytes32),bytes32,(address,bytes32,bytes),bytes)": "f9ae35a2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_divisor\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"sellToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"appData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"kind\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"partiallyFillable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"sellTokenBalance\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"buyTokenBalance\",\"type\":\"bytes32\"}],\"internalType\":\"struct GPv2Order.Data\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"contract IConditionalOrder\",\"name\":\"handler\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"staticInput\",\"type\":\"bytes\"}],\"internalType\":\"struct IConditionalOrder.ConditionalOrderParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A test swap guard that only allows amounts that are divisible by a given divisor\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding EIP section https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/ComposableCoW.base.t.sol\":\"TestSwapGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/@openzeppelin/contracts/\",\":@openzeppelin/contracts/=lib/@openzeppelin/contracts/\",\":balancer/=lib/balancer/src/\",\":canonical-weth/=lib/canonical-weth/src/\",\":cowprotocol/=lib/cowprotocol/src/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":helpers/=lib/balancer/src/lib/helpers/\",\":math/=lib/balancer/src/lib/math/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/@openzeppelin/contracts/\",\":safe/=lib/safe/contracts/\"]},\"sources\":{\"lib/@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"lib/@openzeppelin/contracts/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x687142c633b33037c3137b6bfeef848a44eb1ef83fb5fdb59a3affdf28a46516\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d26b5d0495ffb4c36b1abdf003f43ab478c324752ce60847af8019bad5a3ad0\",\"dweb:/ipfs/QmQGcXZcq7eBrZUyxLbHFkBFWCyMwFonvJwLRSsL82dbWx\"]},\"lib/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"lib/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/balancer/src/lib/helpers/AssetHelpers.sol\":{\"keccak256\":\"0x8919c48601af68bdfd8fb1946fa0af1e54a863ba933a48bdc64b2852a749bd00\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5aab8fc0dcd62002d4c02f85d46bd6dc771b871a273347c1b6c3b32a2c131a76\",\"dweb:/ipfs/QmYWFnb7LEk85DS7JkMDDxENcJhWxiaoXCNAUQTvmZcPCH\"]},\"lib/balancer/src/lib/helpers/Authentication.sol\":{\"keccak256\":\"0x131f4b886220362d0127fdb51bfe983689fb554f38afa4f7c5ab93c46b6a08a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://089b6c089dfe4c7cd6da59c8cf72f43e7c7b695959d2bcd08596eab193903e9b\",\"dweb:/ipfs/QmbXRP9EMowRTaTTxtmmUUAo7ufUZBVhTMEj7FW8PofevF\"]},\"lib/balancer/src/lib/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xb6007e18aac8c801adb1f6ffa5218439c5dd4b8e8f5e6e368defea8f2aa11942\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9f5aa7386aa0ffaf4ad3ad5f635c59bf262eff0e57a69aa346728f555178ab32\",\"dweb:/ipfs/QmcWraVfXDJVEVRmK1h2kczeiaXQ9imTzhXYVjxo8gKJV9\"]},\"lib/balancer/src/lib/helpers/IAuthentication.sol\":{\"keccak256\":\"0xbcdbfe6a049f07b45974a539007e5bbe5898ccf41f82dde4dac9af21c2db4537\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://dee452370f4966364b60bf3bc74b179ed0c0e020eb52dd063ee7817efc3b3efb\",\"dweb:/ipfs/Qmd6EZLp4W3RqTWo3SYRRVneSofHYHCmLn23Rgot9EisUH\"]},\"lib/balancer/src/lib/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0xa19d02738aa1ffda742c86870731f3d115cdb5f54607d92eb05d61908ccb648b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://27dabb6e09b71acf4f42f10e411e2b380abd087c0a62144bbbe3cfcf4149842a\",\"dweb:/ipfs/QmSay9rw6M1UwNwrrJYaBSeUPEzsQWKh91WTPZVdAfn7Zq\"]},\"lib/balancer/src/lib/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xaa1012d53c713d3210b380234dc31fda5cb57ef5ddf62b3a4f93bc370b15eee2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://84fc4f52724bff8a058b6f6fe4ffa531b76fa4da70b8175883b3cd6f06b75ef3\",\"dweb:/ipfs/QmcjJBGCkzw1ohdygYGm1JwAyFnxGaJUFi7GDEdGh8wLnQ\"]},\"lib/balancer/src/lib/helpers/InputHelpers.sol\":{\"keccak256\":\"0x1a98f84372a0d2b7ebff4ec1eed54b6108a88d049763ddcab2769bbaa65e1d42\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7ab1056efa927440e5b13699dbcdacd3109fe6aa70cf80a232b143c044a1a77d\",\"dweb:/ipfs/QmV7nC83wHKwuBfr3JhCvt1A9oTNie5fffVh4QzSrxE8Tc\"]},\"lib/balancer/src/lib/helpers/SignaturesValidator.sol\":{\"keccak256\":\"0x8a1d969fc9c2247ba150366d1b6af2c51d80b66983044a6806668e3b07f2b00c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://873fae2853c941bc00737f9a2a9c02dd5a9ab5a8ff183ef6dbc1ea5f56c60d45\",\"dweb:/ipfs/QmQwkWKNbSmXBMqogYv4Xk28mj4JeMWfnG9dK1bEDP6AT9\"]},\"lib/balancer/src/lib/helpers/TemporarilyPausable.sol\":{\"keccak256\":\"0xc92fd13b4fc5ab23d2f726fab9ad755d1130f985b50f59ced9e5da4a0cbeef12\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://72301458f2efb086027328f316f69113cadc08128240692ea5342b2248225985\",\"dweb:/ipfs/QmRKvqueD5v4ZVZ35ctj5Nikhv1VjcF5BJsaPTFmRLfmsj\"]},\"lib/balancer/src/lib/math/FixedPoint.sol\":{\"keccak256\":\"0xa76130c94d6bb62072b28d193fbee5a87d3701a452f491c4a209d869a0528756\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9915f5909b86affb9cd06450e676dfed644543265516a21240a3568188ff5e5a\",\"dweb:/ipfs/QmYJZ7RRtGyUzwc8z4qtRyhyAaPDumA97SqBEXpLoRV4d8\"]},\"lib/balancer/src/lib/math/LogExpMath.sol\":{\"keccak256\":\"0x2b0f4d2c30da402a5fad1b073e5b012a02039069d62458aa3e044e2705a174cb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c3c683dba7eb91f04239e7d4c56228147d67ca8631f91ed40fe49a5a76563a0f\",\"dweb:/ipfs/QmTnFknptmqySHSGDntypy6fyyJYbpH1g5ktDUj2DVXj4T\"]},\"lib/balancer/src/lib/math/Math.sol\":{\"keccak256\":\"0x7828aea1e40ccff2e022d83f608e68a9b79c3493c74e685048dda141060b804d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d36e0de3fb8db6324b123d75e058e492e85c872e480450f25e8c0162779130e5\",\"dweb:/ipfs/QmXRKeyEkGjj8L5YwbWx2ct1hDTH5bxGhuPoUnuTL8QrLp\"]},\"lib/balancer/src/lib/openzeppelin/AccessControl.sol\":{\"keccak256\":\"0xd579e821f7c87cb584669bf39e2cffdf4c5dddbfc18fc7a5689fecc71a220af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2294d003285005d4d17f1b603d98ea8c9c0f95dfc7ba454598fb455bbfc0fc1a\",\"dweb:/ipfs/QmUnrky7oFu11UgWpd87JaisgzBXahCf3uv2u8a4DqiLyi\"]},\"lib/balancer/src/lib/openzeppelin/Address.sol\":{\"keccak256\":\"0xd18d27a553120116908ad6d58fcc4556bc6b96ab27c7af84f3aa2c2621ac022b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://451d010c7efa1d87285a4c6e68c2c6bfe6774aff7aada14d6805a169023c533e\",\"dweb:/ipfs/QmdGUThM5JXdwEkn4kRg1sVuhXPGMNDRh3hwskx2upjpJM\"]},\"lib/balancer/src/lib/openzeppelin/EIP712.sol\":{\"keccak256\":\"0xe5412c02a6926da25517bce53822f3231783635f4b74ec296944cd6631aa1717\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71f24670f9eb3ff0766ff10743abe855eb97df844da7fa481200fa8f0fbaa246\",\"dweb:/ipfs/QmYGqeCkfJ12QBKaYTmTSJhWBZ3q5rugqyDZbNZHEPnYoc\"]},\"lib/balancer/src/lib/openzeppelin/EnumerableMap.sol\":{\"keccak256\":\"0x971db51d8bd1d5ebb808ab46376a03a7430de50ea5b56eb15e3f4845d1035f27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51cfc148e417aacf7bf31e2d92db047e858ecccbbc3e8dd013253e4461490a47\",\"dweb:/ipfs/QmWwTXt5imULRv7srgKwF4Uo56QiZ7cARW7DFME1nDyoae\"]},\"lib/balancer/src/lib/openzeppelin/EnumerableSet.sol\":{\"keccak256\":\"0xf316c789176ce975f4d1da11275398fcf228b4f6101c40708bcd042e24c8a780\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8e4f39cf333bb1eb610af95680095e5db1ae71a0d19cac0f9be0598b204cd57\",\"dweb:/ipfs/QmNbr1LNzHuKNMY3TKEW3mst1XdbdFDabq41eW924FvWrK\"]},\"lib/balancer/src/lib/openzeppelin/ReentrancyGuard.sol\":{\"keccak256\":\"0xfee6a0b7071ee2b5f937b4b48a7574a6ac1b1cd7012124e12d696fef8bd69862\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0bd6b10b04a81a1bd0d7203414e7cb17b736f96266f25d27693d0812894273f6\",\"dweb:/ipfs/QmeouzDNfygnCmEytzed4HCHkRWQDjKCbSSQbRHC582F3C\"]},\"lib/balancer/src/lib/openzeppelin/SafeCast.sol\":{\"keccak256\":\"0x962b6e641fa3c305176e88ad54d00ebdfea448e0ab25b712828f5c78e9a917ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24e7a2dd6ede68aff01530ab90918a187e8bf3010584bd73dcdd0031c5eb032\",\"dweb:/ipfs/QmSAETq7UmZjyntWyxD2kJSnWSuBkYjUnAoT17tuS24EVk\"]},\"lib/balancer/src/lib/openzeppelin/SafeERC20.sol\":{\"keccak256\":\"0xe8df6e6a2745689359b990eb94ae60f188e8093b477d53adf67a35ac2635b3f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://734eb2a19b7eec6e5d7be4bcf8610040bae429cb0c9f65851b7a3dace79caa19\",\"dweb:/ipfs/QmQ78Jetsdy4iYTpR85VTcwtvRsSpRsjQBxfkL35KcgiQj\"]},\"lib/balancer/src/vault/AssetManagers.sol\":{\"keccak256\":\"0xa035d80740041812057542892092a1a4d820aacd24a901dd598b29b63b5e709d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://927323450bf446e252ff70b039ad2a228fa72326065107087161549850d8a03e\",\"dweb:/ipfs/QmZubY3E4ahd5vAFHdW2xUEdCLajfcJHJXcDmhzaNx6hWn\"]},\"lib/balancer/src/vault/AssetTransfersHandler.sol\":{\"keccak256\":\"0x4abf5b9f0981177a68a628b8ebcc5781dda876f02a7ca75c57092e6899113e45\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f1ef2a74f50565ae31f7f16c3667ef4eb806be030cbda275d162dc356f6c865d\",\"dweb:/ipfs/QmQiUe9PMkDKF68v4mhUK2mEFKV5SVAFJ8wbX1aYcQifFR\"]},\"lib/balancer/src/vault/Authorizer.sol\":{\"keccak256\":\"0xf186458b2feb04dbe781855d45bb49c19b723359f489848767da877218498527\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://55cf8df8a17e36aecc85bfc7de5bd45ee98cf466bdb7bd0fbf28194e6a7ad891\",\"dweb:/ipfs/QmanjQQkR4AehuVReWsq4iv5LP6kTng7XLLpPZ4bhn5RT9\"]},\"lib/balancer/src/vault/Fees.sol\":{\"keccak256\":\"0x1efa5220be97d81503c8f81595e2cb74ca807dff79c189e79691161c5b8a6654\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bd8f591578c77f263666d28a6d7951a25c9c626dfb310c784a9db60c262204de\",\"dweb:/ipfs/QmPBZ9PHruhMvdJjzeQfruvEtHeiqhud32C4PZFiJKb8dY\"]},\"lib/balancer/src/vault/FlashLoans.sol\":{\"keccak256\":\"0x26fb5818caeb8980cbbab2cccb51f41fea5e5e28ef1516ab5d792427661e2f59\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ce3bc3abda989089faf10f3215abf5daa1cdceb11c80bfdb486d02c8656817b0\",\"dweb:/ipfs/Qmaq3wovoZr22zSfQGWNp3E1gsVHVwkRiAg15EnTtCML3S\"]},\"lib/balancer/src/vault/PoolBalances.sol\":{\"keccak256\":\"0xd6c2b56e661fe9f97fc007d51731ceed59df3771cba26161a815204906afa8ec\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6ae722679cbe89b9ba763b121f25f7cd0be607b6a7ed3f682b5e44d6408238d5\",\"dweb:/ipfs/QmbZmAEzEHGpVnPfFTR8DZT4M1tn6JSKDTYw4a6v5mDY2b\"]},\"lib/balancer/src/vault/PoolRegistry.sol\":{\"keccak256\":\"0x5d8404487a96d357fb0ccf649f776f3cb5deb5d5194b3b140f105aed310e58b5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d0dc8ac0d4c777c0f8818ccd965c293e19233db9f4821ac07078564c31917f61\",\"dweb:/ipfs/QmYeVv7fTZ4uFbPzLD4wJHXGYFdBVzVDQ8DkPhtafeAPLo\"]},\"lib/balancer/src/vault/PoolTokens.sol\":{\"keccak256\":\"0xeea9563c1ce522ab5fba46cc4384ed5899c0025e08482e8ee0f5a891d7c43d33\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://59943db10a9016b85a3acdda0c95d3c27ed9de9572e39112da70b0ab8812ff18\",\"dweb:/ipfs/QmXNRbqyZxUUFad5wQjP6HcqggpAtXUJX9JQNPLu7A1vAW\"]},\"lib/balancer/src/vault/ProtocolFeesCollector.sol\":{\"keccak256\":\"0x1dd306e5b05e5eda3d5a4c5abdd4ebc6083849c1a43d2545b47b0a7a1982d78e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b2019f578c340abb860b74cc2aab3d45210f3569dfb4f355bb3b202d15a72dd1\",\"dweb:/ipfs/QmdnTNNk1CDsimdtvmp7Wa2gjtJ2sa46XvqmcrdQDQXjyy\"]},\"lib/balancer/src/vault/Swaps.sol\":{\"keccak256\":\"0xc98ad2e27bcfd93272ce35b5be8b80f65876142e3a23af7dbe2cc18de3fe03f3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2e34f80abec5db0b6e3abba2ce3958bcaffe7fd53ea4d9af947400afdcff103a\",\"dweb:/ipfs/QmV2WTXMYdSDVx1HMEzMqSYak6F2g8iJqhTzPSNAQmEgpC\"]},\"lib/balancer/src/vault/UserBalance.sol\":{\"keccak256\":\"0x6c8c2b5a4f2cb412b643e47cad02aa65c8208ca3709d87a91983e44ea8e47b5d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c6f3d9cea8579ffd715a02c16fdc6586faffb58958b107ebb0e05fe834da9145\",\"dweb:/ipfs/QmcY8CgXLYZFxUXkE8qMvhRhJu8fKBfX6yLhLTcHd9HJzv\"]},\"lib/balancer/src/vault/Vault.sol\":{\"keccak256\":\"0x8e26e3970f533eef5c24bb9c581e3f340b81f1f096217843fe3a67f22c7a6d58\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d55f23ed8b0e1cd52d517e640d856ae529308072de03cbf05797ec524ddeff50\",\"dweb:/ipfs/QmTsJudtVpPCyVVs1r1x5mgF1PuuH2FSuGQh3eFGjtJ4sx\"]},\"lib/balancer/src/vault/VaultAuthorization.sol\":{\"keccak256\":\"0xd0ef70a4180e71995a20c487c45f35da88ccd1e2efeb8a34978276a7258682b1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0fabd47a0b4c899deb78527327e404dfc69236221f5d9e19f68242976e68c1bb\",\"dweb:/ipfs/QmYad6Jw5u8prpMYh4kDhKcLehjofThGegvLHsXQ6Y76bz\"]},\"lib/balancer/src/vault/balances/BalanceAllocation.sol\":{\"keccak256\":\"0x7bbd692caa596ea22160a01d7adee125010322af46deb9a73d0aedbe5dcef349\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2f3434a71646ccaddbf8b5c7773b44dad9c2f68ecd24b3f1dc36dddf61ece0a0\",\"dweb:/ipfs/QmSoeDgGcgAJki2nnj4xUcLZEk4fZphvcRh9K5s4ZJQBny\"]},\"lib/balancer/src/vault/balances/GeneralPoolsBalance.sol\":{\"keccak256\":\"0xf93cc0a65759b2c3ca3395bbaae92a9a26b0f67bedb5ea0d635818b4d3553597\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://efcc89408bc4ef8416921c54f4eb6739d987996fe87c341403fa7e3b7e4e3c6e\",\"dweb:/ipfs/QmXHG2nV6JZ8qNKYNTSufcq9BT2JXi2j5qTzdRu63z9mBh\"]},\"lib/balancer/src/vault/balances/MinimalSwapInfoPoolsBalance.sol\":{\"keccak256\":\"0x9af5e92ef5dea7c8ec8b081bc6eb84be3cff841973a8ee3e414c959b7cad8c5a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d1b06ccc6aa13cf8d331f1685df07ee44d6bd93f5341d0165cb42ff2bc6ff8e8\",\"dweb:/ipfs/QmcQe6GRBpLhVacZu58XVebP49tBajFvfA5x2rqHnhnCaH\"]},\"lib/balancer/src/vault/balances/TwoTokenPoolsBalance.sol\":{\"keccak256\":\"0x4cdae83e97be68f5f65257c9f9e716a7e43b9632f1c39bfc9cd02c2ae707db26\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e466b98ded97f485ae838c07f45fe54c0a385bda092e83b309f723557c0cbbb9\",\"dweb:/ipfs/QmTMRkKoKnqTfiJjteeEzhcXwdayU2QoKSFgbb6nJR4oB4\"]},\"lib/balancer/src/vault/interfaces/IAsset.sol\":{\"keccak256\":\"0x48875a5c08b3c90dd69d4dc0a0d28aca69609eedbf42772fe1f66e3097a53a5c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a4b3d8dc951be1732a8dd1f6379db2ad054b05ad384d67036eb831001f5c17e4\",\"dweb:/ipfs/Qmb5kx5C9srQjW4rRkDpikmwo57crvzL4K5o22uFXGVLo4\"]},\"lib/balancer/src/vault/interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x8179280bc53b5313ad036b1966695a466c0594788e5ece1028e2e29997d1bafa\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://12145a3e1289ff9e2b197ca09b545fc6168022b9e9a250b3835d62c6717adaa2\",\"dweb:/ipfs/QmZVuw6Yxv4D28HPC5UDmKbuEyqvzZkEJLwCxqsHzySoUB\"]},\"lib/balancer/src/vault/interfaces/IBasePool.sol\":{\"keccak256\":\"0x5c8b9e7a69732b8d718b15abf8ab7479f1661dc397ad0b68574ba79e77628a7d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://429f0a529798adee4261f454f8fe601551a7c007c8b4cbfb2962ba99a51f9ccd\",\"dweb:/ipfs/QmRDcGbJMPRyV735QC6cP332TsZ7SKgNbisACMw1jfMzuW\"]},\"lib/balancer/src/vault/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xf039be9ad3b731700cc69efe53c8a8d8b447f25799f68c7195592a09e9247b5f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bfd48af1e1460f3a174b52ffb3398c37cf42abd6c6a58e6b7d9d50d9094819ce\",\"dweb:/ipfs/QmbRTDDnYGwpNd76wRNLUfQBc52TQ67npeMGjN4M8j97dP\"]},\"lib/balancer/src/vault/interfaces/IGeneralPool.sol\":{\"keccak256\":\"0x450c3ed5a9bc6116697b9b424de93d00f23e870fdee9c0bda009cc7ef9268abc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://98fb2bd1c1f94dc1dfd70adad46df1fedd9697aee089b048696444641154d315\",\"dweb:/ipfs/QmU41tYKnbfqYqwvQxFj8JVpaVnYYsHfTL9oPNmE1peqkT\"]},\"lib/balancer/src/vault/interfaces/IMinimalSwapInfoPool.sol\":{\"keccak256\":\"0x5119d39c32df88286cc5391b81a7ad1208e46825b32dd49e68900342c5f0c741\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1400c06d1b8c0a6075f0d03e5bc1b02336f952f94eb4753726cbb206a0741372\",\"dweb:/ipfs/Qmcu8MRnpV39xyxzHAvAdGJXHp9yKxCvGcixbtci6YseA7\"]},\"lib/balancer/src/vault/interfaces/IPoolSwapStructs.sol\":{\"keccak256\":\"0xc4c72b44bec181e3b3a360d54c1dcac2104b20ca56e9b939210f9673e58d550e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6e22aa83552c18a3659ec0f8c765c21e8d9125a634f0cf9b4ef6ec26afc61b05\",\"dweb:/ipfs/QmSfGVR4F2bwyBu4y78aVRQfGB4Pd1GDgVkC1HYUG3icxp\"]},\"lib/balancer/src/vault/interfaces/IVault.sol\":{\"keccak256\":\"0x6f5e6a58d0f11b952840ef3a8d022dc3df3e75d73928e2979c248fd80e416b9c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c56287185d0daa3a4bc96832c81463931bdf937042d265836844539e14470619\",\"dweb:/ipfs/QmV9GiMZLb3L7HRFPf8hciWxsDqRRYrDxmiB1RCt1u8Vsq\"]},\"lib/canonical-weth/src/WETH9.sol\":{\"keccak256\":\"0xe9d7e2895eca07b5f45c5ba51d577cfde6bd7505a0beb49af9eea266931d0f04\",\"urls\":[\"bzz-raw://6b2f9d01a4f8dd133b4da18e2c7a294be37408d27b75d6aaafdbf8000a394a76\",\"dweb:/ipfs/QmdZ482WjQzFmAbvFr5P5eHgHcGK11ohUirWqNdcb5m4sk\"]},\"lib/canonical-weth/src/interfaces/IWETH.sol\":{\"keccak256\":\"0x7c3bbe9f0d93c652822ac3741ffa870516ef01183c4f2408a05bf4ba806907a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fd0908e7d72f7bbfbe9b8a9520ba8b035b9fac2edbd5c83c80e0c605263b9c05\",\"dweb:/ipfs/QmWKYntvGqbi3nSUWTYapz9Rk9MhrLkiFXY2iN8Fw87sQL\"]},\"lib/cowprotocol/src/contracts/GPv2AllowListAuthentication.sol\":{\"keccak256\":\"0xaa05adb9743f3510d3148c26d488f4dab24ea064d685e7c916b756759d3e0af0\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://921ec52950fc8cad371274e08a2ca84e0ec3562361f4f7253b505d009b9f013d\",\"dweb:/ipfs/QmUcJACN5CRVMFWofhRTgpoe3wZvBepdqYtYHT4zBXX6LP\"]},\"lib/cowprotocol/src/contracts/GPv2Settlement.sol\":{\"keccak256\":\"0xc28bbf8245c27a4e0318ddb98affa388a78f5afdb00bbcf84897659ee7f08e71\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://7e1200b13634efc822f5fb32fc71490bf244cd39b4d98fcb58c4208c620c5dd7\",\"dweb:/ipfs/QmcUizcEMpMkQ7Kw1sadmcUCaztDhtBavaSCJTp5JSMkVF\"]},\"lib/cowprotocol/src/contracts/GPv2VaultRelayer.sol\":{\"keccak256\":\"0xb785d0cc8a18cad4bd7bdc46ba4f995b17e6a3f95c8cbefcc1be6618bfab1595\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://655f249d6af04d75e907376157e393d205ee6be73007f6d75d9bb1325a9efc28\",\"dweb:/ipfs/QmanQfzHUnyrGvknJ9EgkLLQ2Nfd1A6RnfFjXaStp6vgYr\"]},\"lib/cowprotocol/src/contracts/interfaces/GPv2Authentication.sol\":{\"keccak256\":\"0x13eafd3d4043356364572ff28f213ea39faeb4b21b53a900b35fa765a5e0347f\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://71bbcdb728824b72046281d5ca6adc6da2d0806cf251b0662dfc8b06dec9845d\",\"dweb:/ipfs/Qme59yqn4QBBsVe9miUvyD1wVNNFvauXgsPBXT47Ahbizf\"]},\"lib/cowprotocol/src/contracts/interfaces/GPv2EIP1271.sol\":{\"keccak256\":\"0xea0afb5f00ece4de83adb6cf76629344dae3171db3040e50ed704e0650342ade\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://4d9d40de14b1bd8ce70a2f94aa43957e77d7c71b58973e5dcc7d5765ded6cae7\",\"dweb:/ipfs/QmaYLbc84vUtKjdvHjwkYVvnr2hP54Q1B7Jm5KW4iuxt4j\"]},\"lib/cowprotocol/src/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x205fedd49ab79dd6d2824a056d61ec8bdd6bd02ea9b50e398ea4353095c5325b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4470ff225bda4345d08c27f7d2e41b079be66e51c2376f4170978aba85bef906\",\"dweb:/ipfs/QmUxq55vtTEDU63ttAUGUsEksH4gLq8dJHkQEC7Zy6gdT1\"]},\"lib/cowprotocol/src/contracts/libraries/GPv2EIP1967.sol\":{\"keccak256\":\"0x9aec47a6c664a2ff139db0ca1418c9132128830c775005d667d85dafb3e8491f\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://cc5c8ddb4849fd080692a0495890f4f72297c42435a2e53ec8fbe35614a3661a\",\"dweb:/ipfs/QmevZYnJ7b3Pn5cJgmn1t1VwT6Sb45wrEFhHRA3tKjzd61\"]},\"lib/cowprotocol/src/contracts/libraries/GPv2Interaction.sol\":{\"keccak256\":\"0xb950f05f76ac8044b82314ea5510941fdbc0f0e76e7f159023d435652b429528\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c081155e1b18c060aaab781b4887744413efffdfc55ce190db45c321444f165f\",\"dweb:/ipfs/QmbK3Qu7ZgwBfx2Es5EQcvG6q2srkHjzfNK2ziQ4ojxLSF\"]},\"lib/cowprotocol/src/contracts/libraries/GPv2Order.sol\":{\"keccak256\":\"0xffd0cc3de3209aa38045d57def570ccbde028a39a54b00c696dbe19f4f6d7f9f\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://5714a47cae551d3364bfc6a753d92822b29d277298e55942a2814ed1e2afd87d\",\"dweb:/ipfs/QmS2G8ftdhk11qoSYHX8twZK5vFArhcnVVe6gy5UGTvXmg\"]},\"lib/cowprotocol/src/contracts/libraries/GPv2SafeERC20.sol\":{\"keccak256\":\"0x746fa180cf0c8f866d124958afdabb7430bc79539335f8e25ea89c212378d03b\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://eb94c53fd20b77c15cf44fcdb4939dba3e6e370661d114f73d59b2737ccf4e39\",\"dweb:/ipfs/QmeWYK6wZJ4WKT35yhYkhp1ixwcP348Dr5nS36fnx5FLVD\"]},\"lib/cowprotocol/src/contracts/libraries/GPv2Trade.sol\":{\"keccak256\":\"0x416f67497b82e72e364c94f9322e89a3f993690751f061e55f9b33c135dc6c5a\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://246c6840d43acd6b64135ad7bf99e2a9c87dc9a7c43d14fd43097e8321a424db\",\"dweb:/ipfs/QmXmV7qxM7hmEc5Z5L2crsMzYb9t4GPes8KM5oLXsgxVR5\"]},\"lib/cowprotocol/src/contracts/libraries/GPv2Transfer.sol\":{\"keccak256\":\"0x3fbac207882d1e12ce41b112c1d878e3b234842904c11e006059ab642740f84b\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://eba7b5484ed100a8b4d8af0d62bcc3f30f622065d21de4913ea6a1be024f718e\",\"dweb:/ipfs/QmYxbR3cUybCwyCmzdEyxtjnrf8zb6jxBRVycEVpANXnmf\"]},\"lib/cowprotocol/src/contracts/libraries/SafeCast.sol\":{\"keccak256\":\"0x5804f013c055fefd71f82a86e51070e43bc17ec47fef18a501ad5fbccb20c9fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39d85416d210ab05604c4d65aa61b69b220d6b3ae0e0077586104914e129c693\",\"dweb:/ipfs/QmdNpvn2jtCJLJ8jTDgQFGCAkKVAxg4FJWaLUhWxFZphPP\"]},\"lib/cowprotocol/src/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x5be2c9bf446b9cf76f2c8ce6f3a4e350b588cf794bd274d1d1f18f9907924710\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14a94812f09c5a2213a1af1ab7be15ff0d9000376d93205a19b7eec1e00e6874\",\"dweb:/ipfs/QmPD6Rh7MmyuaBTksnz2idXsqzXUtPaHariiUPFnrCoJu7\"]},\"lib/cowprotocol/src/contracts/mixins/GPv2Signing.sol\":{\"keccak256\":\"0x32351a830456c755d4f4c24180f5d54afc3141e7f1cedba575407ea7a96abdc0\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://e55fc7d29fb7d740181bc790f33308d810950854d357ee17e5c410cc2c273d92\",\"dweb:/ipfs/QmbBhUM8YFHYyEonG5Xa6WsFXkvGXpWceC7zTJeCUnSSe1\"]},\"lib/cowprotocol/src/contracts/mixins/Initializable.sol\":{\"keccak256\":\"0x0d276edcca6013d50d3ee7d3136e9b3a1ccaf26d481435e76c2331a43b99b8c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e795a7365456e5f071e26469542c4a5e301d3040015d3a565ececcc5ad4fadf6\",\"dweb:/ipfs/QmNreE682mqhovoTuNGfMDMiRr1Sfg1gWVNsquddsE4G9V\"]},\"lib/cowprotocol/src/contracts/mixins/ReentrancyGuard.sol\":{\"keccak256\":\"0xa18086f1819346a9c89daf6abab56df2818fabcf87e8e606e5fedb207ff2d7a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://168b99215387727d51f66314e60ad5c90d8e2d7d8c1557433af1a3b1d1c3931e\",\"dweb:/ipfs/QmaCsMr7dzRS827c5JXwyVgT7wuePwYTNH76w49dcqALN2\"]},\"lib/cowprotocol/src/contracts/mixins/StorageAccessible.sol\":{\"keccak256\":\"0xebf1b3d1f101deac9c85b6c04b32a59c3fb5bc92445a205c33fa4f6c3e2694b8\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://4bc9f0cc4b2949a8301eccac1b4dab27ab104ab11a662be2682818e0d8a6990b\",\"dweb:/ipfs/QmZACELQ2C9RSyoNSuBEiHi17RvCwp3X8p9vo2oSZ9eqhe\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749\",\"dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17\",\"dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab\",\"dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef\",\"dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/murky/src/Merkle.sol\":{\"keccak256\":\"0x70e50a6d61ea806b5ba0c8ff76fadfa3e90e6dfecb6900b1c0492eac0309660f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6cc1b02a6d11e029fe24d5d638ad891a3a2552aaef9d3a0918274b1496fcd74\",\"dweb:/ipfs/QmWsU7yXsyKATkfYb8g1jbPTbgGsCg9rk7bJ3ypCYxQixB\"]},\"lib/murky/src/common/MurkyBase.sol\":{\"keccak256\":\"0x5287741b2b215c9a11cc8482b419abde0625dfc3949d539c72ee498108842894\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://259e803b0811e404bba09237bce4ef42f2ff27dacaca770d1eb7c1afddbf762b\",\"dweb:/ipfs/QmWfbsHa1siBxDEqFmbnzUuZqyitFZHmDXo2vc4cVn4uJe\"]},\"lib/safe/contracts/Safe.sol\":{\"keccak256\":\"0xbab2f7bec33283e349342e7b23f5191c678c64fe02065bac4f4f44fb3f5d2638\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f95884e85691d49ba3efb9b2a160466fed17377bfa92fc8bf5923f3c61e99119\",\"dweb:/ipfs/QmQjhP9RnB3Cj3DNpWLzWqqvRdKBya6Efx6xzmRrwLqjm9\"]},\"lib/safe/contracts/base/Executor.sol\":{\"keccak256\":\"0xf0be832e7529e92000544170a5529d73666a9b5e836b30c6f2ed6ef7d7d8c94a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://710022b40c9f78a5b55b97f6ce600e4834df2ddd36bf714974d953883c82d58c\",\"dweb:/ipfs/QmbdJNKH5opevm7HxQKQAe6W7dQTgSHKa4nKvbUNGRcQQp\"]},\"lib/safe/contracts/base/FallbackManager.sol\":{\"keccak256\":\"0x646b3088f15af8b4f71ac5eeffaa24ce0c1abed5f494f90368208b09e35d5165\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://7975be46d228510c70659b18076aecb3b0e7331b4d3a162444304145143bdc6e\",\"dweb:/ipfs/QmRRbZrWUnoky6pVo8zMUzCTsshR4sZ2FjR13s8vyAb8dV\"]},\"lib/safe/contracts/base/GuardManager.sol\":{\"keccak256\":\"0xedfc7c830ab35e52d1208986b253f3422c2f0ca68054c10819fb348fcc6ccf5d\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3ff8a4194d1160d2e23142937bc9d7eac7b6b553b1ee226390a0df07ebac1b64\",\"dweb:/ipfs/QmSw8Y7z4TQrUTEosdWqcug7TUv9Tg1kxqMKHd7RuTnyzx\"]},\"lib/safe/contracts/base/ModuleManager.sol\":{\"keccak256\":\"0xd71b0d56dce386fa6f67c51061face071b2c7b03ec535d68717e2538ec47113a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://30812896d9f57cae84a432c67fbb3007d566071ec203b2992f1c0f762722df0d\",\"dweb:/ipfs/QmRyJ3JbsUwDQxQDTrqDDX4qNtVu7XiW8cD8WP5kgNJGGz\"]},\"lib/safe/contracts/base/OwnerManager.sol\":{\"keccak256\":\"0xec9799093eb7a73461cd5e563198751ee222f956f754ea622a03fe953e515b2c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://5729c58b14e7b656c71dd3377e9519c0d34ef8c04851a9a21c3d62393e4fae7a\",\"dweb:/ipfs/QmRRtfFpNqvdANny9TYBr8rA3HbT1egUCpb2uXALMHkVxK\"]},\"lib/safe/contracts/common/Enum.sol\":{\"keccak256\":\"0x4ff3008926a118e9f36e6747facc39dd13168e0d00f516888ae966ec20766453\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://385929800d1c0f92eb165fcf37a9e28b395b17d8b74f74755654d3a096a0fc34\",\"dweb:/ipfs/QmagieLuN2jrp2oJHFyZuyz65Sh1CcupnXSEKypGFS5Gvo\"]},\"lib/safe/contracts/common/NativeCurrencyPaymentFallback.sol\":{\"keccak256\":\"0x3ddcd4130c67326033dcf773d2d87d7147e3a8386993ea3ab3f1c38da406adba\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://740a729397b6a0d903f4738a50e856d4e5039555024937b148d97529525dbfa9\",\"dweb:/ipfs/QmQJuNVvHbkeJ6jjd75D8FsZBPXH6neoGBZdQgtsA82E7g\"]},\"lib/safe/contracts/common/SecuredTokenTransfer.sol\":{\"keccak256\":\"0x1eb8c3601538b73dd6a823ac4fca49bb8adc97d1302a936622156636c971eb05\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://c26495b1fe9229ea17f90b70f295030880d629b9ea3016ea20b634983865f7b3\",\"dweb:/ipfs/QmTc1UmKcynkKn8DeviLMuy6scxNvAVSdLoX4ndUtdEL9N\"]},\"lib/safe/contracts/common/SelfAuthorized.sol\":{\"keccak256\":\"0xfb0e176bb208e047a234fe757e2acd13787e27879570b8544547ac787feb5f13\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8e9a317f0c3c02ab1d6c38039bff2b3e0c97f4dc9d229d3d9149c1af1c5023b3\",\"dweb:/ipfs/QmNcZjNChsuXF34T6f3Zu7i3tnqvKN4NyWBWZ4tXLH9kMu\"]},\"lib/safe/contracts/common/SignatureDecoder.sol\":{\"keccak256\":\"0x2a3baf0efa1585ddf2276505c6d34fa16f01cafff1288e40110d5e67fb459c7c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://00cdded3068b9051ee0a966f40926fbc57dbe7ef8bf4285db3740f9d50468c80\",\"dweb:/ipfs/QmcP5hKmaRqBe7TpgoXtncZqsNKKdCCKxZgXoxEL4Nj5F4\"]},\"lib/safe/contracts/common/Singleton.sol\":{\"keccak256\":\"0xcab7c6e5fb6d7295a9343f72fec26a2f632ddfe220a6f267b5c5a1eb2f9bce50\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://dd1c31d5787ef590a60f6b0dbc74d09e6fe4d3ad2f0529940d662bf315521cde\",\"dweb:/ipfs/QmSAS5DYrGksJe4cPQ4wLrveXa1CjxAuEiohcLpPG5h2bo\"]},\"lib/safe/contracts/common/StorageAccessible.sol\":{\"keccak256\":\"0x2c5412a8f014db332322a6b24ee3cedce15dca17a721ae49fdef368568d4391e\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e775f267d3e60ebe452d9533f46a0eb1f1dc4593d1bcb553e86cea205a5f361e\",\"dweb:/ipfs/QmQdYDHGQsiMx1AADWRhX7tduU9ycTzrT5q3zBWvphXzKZ\"]},\"lib/safe/contracts/external/SafeMath.sol\":{\"keccak256\":\"0x5f856674d9be11344c5899deb43364e19baa75bc881cada4c159938270b2bd89\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://351c66e5fe92c0a51f79d133521545dabdd3f756312a7b1428c1fc813c512a1c\",\"dweb:/ipfs/QmdnrRmgef8SdamEU6fVEqFD5RQwXeDFTfQuZEfX2vxC4x\"]},\"lib/safe/contracts/handler/CompatibilityFallbackHandler.sol\":{\"keccak256\":\"0x3eee5c142041e92895d45f8e9acb9ac2203b0ac39418e8d2971e78bf0775bcf7\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://6ca95ba88f388a206e14ea0ac2c4a2bb0b60b83a619d1dd3d61772588394fa07\",\"dweb:/ipfs/QmbhhRhBP4n9TVLohTV4GtESeRsumrk4JduLG7DwbBrtxH\"]},\"lib/safe/contracts/handler/ExtensibleFallbackHandler.sol\":{\"keccak256\":\"0x7e511290dae21c9b1710c9250320d9b98ffd71c9501af354814485b58e1b64e9\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3e55ba23bde90d2cdd07baa7172ea41bdc1d638bc7b6eb5dce03189d86412515\",\"dweb:/ipfs/QmbxH73sqooeQL8ehsP2FDoXhLBoPs3wr3nod6ZgJwVcFV\"]},\"lib/safe/contracts/handler/HandlerContext.sol\":{\"keccak256\":\"0x3e105ebac003af9c8d34e3eed517ff0355d5f487e17478c85df0f225b04846f5\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://657bec347d746453883c461a3d9a2275bf2b99625dcaef0960e1c0276c3d56c4\",\"dweb:/ipfs/QmUGj8Tzs1CsmUf63LbTMK81EEGtYYnWKLGdHHtoYCd9CF\"]},\"lib/safe/contracts/handler/TokenCallbackHandler.sol\":{\"keccak256\":\"0xc8fb9e60f5e561c7e4992a396e928344c278c2fbec8af65aebec44281542e7cb\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e197c9a628bdce9a1df8da8ba07733ce0e8b5496a28a22a370dec979104c79da\",\"dweb:/ipfs/QmUx8YhmT22YZYEXp2bVNR91hSb9w5qjAkzGiFy6DRNpdu\"]},\"lib/safe/contracts/handler/extensible/Base.sol\":{\"keccak256\":\"0xe5b71121b0020728158ee60756982e74809f9d77cb294a6d65930bff09d84d15\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://fd7fd2702b31fc8569a9986a476dd9fe9aa76624d0da6d832547f624426925f9\",\"dweb:/ipfs/QmWjYGtW38Fnwvm8qFvoJYhz2nTuySGkHouwRF3eksd6Nh\"]},\"lib/safe/contracts/handler/extensible/ERC165Handler.sol\":{\"keccak256\":\"0x6e19ba1deb09a34cca28891bfefd853697b808dfb8a9cddd4051d3058d3eb718\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0b1059e752bd142160a4fbe8ee08377a50902d31b8b909df002480d191af0cf4\",\"dweb:/ipfs/QmbuUmvgoodsZGgqR793duEWF5t7h6USAXfpr2N1VvBmeP\"]},\"lib/safe/contracts/handler/extensible/FallbackHandler.sol\":{\"keccak256\":\"0xbe7db6cbdb034c9aee1eae12200ab2e94fa4743ae08dbba2f1a001c4b62f3e0b\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://4fbba0ea04349873b38f7c7104d0a88ffd6e7ec399a3fdd0e1297ce12eebb19e\",\"dweb:/ipfs/QmYiDukcX2y7ratxsMX6hLMKzGQTD67CKLpuiSpgm1HGue\"]},\"lib/safe/contracts/handler/extensible/MarshalLib.sol\":{\"keccak256\":\"0x531476118b7948b06a0c7094badd6f1ae33ae2ddca815110030e87ee62c4a895\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f21ad2619b5bcbc977c5943d2f668e8bfb9ef6968db1193415e046171a5a150a\",\"dweb:/ipfs/QmYZeu3vr6eRWjeYp8GvWSVRLm9baFbTyEGgAy2hMAqbLX\"]},\"lib/safe/contracts/handler/extensible/SignatureVerifierMuxer.sol\":{\"keccak256\":\"0xc60a1d55ff0cf532a44bd864683719e3d6e1fa6d20d4c77812e21c33afecf304\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://298c7efe668a4ca8d3b712770973931d604c84304aececd621f0350d7d293b68\",\"dweb:/ipfs/QmVcNdQ7ZsnmDgSX8TFRLHk4HZUXH86u2akAM5q3g1PFfZ\"]},\"lib/safe/contracts/handler/extensible/TokenCallbacks.sol\":{\"keccak256\":\"0xfb0f8f01a7191ab358f196a7e055441ede00f36805f12c579a742a5cd3c4f8d7\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0d485ea9fc430a89953ffe2d2c7032b5a330f086bbb784e81eb6b00a692f6438\",\"dweb:/ipfs/QmNofKrkU9VTtGMN9Rc6js2jyUscSFxce8kjBz5rZL4RSJ\"]},\"lib/safe/contracts/interfaces/ERC1155TokenReceiver.sol\":{\"keccak256\":\"0x87e62665c041cade64e753ecdccf931cb100ab6e4bcc98769c1e6474be9db493\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://59ca1157dcfe19c72b9d1244a6ae5ec70fee9793d4d8af523b70f22ae567d55c\",\"dweb:/ipfs/QmfE3kv73QuQWAWQND927LWVHVLCp19m1mLUvxVYJDEFZM\"]},\"lib/safe/contracts/interfaces/ERC721TokenReceiver.sol\":{\"keccak256\":\"0x96c4c5457fede2d4c6012011dfda36f8e8ffdb7388468f2dddb35661538bf479\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://99a54737bc23722f79ec9cf9de63ba35b556a61df453eb332f3cac783503f26c\",\"dweb:/ipfs/QmbLW5C2RhoLbwDWEPtTKpyYE5apT9B3q4U11PZG3wSM1n\"]},\"lib/safe/contracts/interfaces/ERC777TokensRecipient.sol\":{\"keccak256\":\"0x32ca7f1610659f35e52f5a989e1d844b7847ad57fab06e0cae5bc027248536ac\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://9082896ec697e320087b1a682b69a5cdf71b33a2f7a956e2fb6054f9f9d56d06\",\"dweb:/ipfs/QmUu7iNkQNvvqBPbbxuhqiQpYPYYnfsyPEsf4AMQFANXFZ\"]},\"lib/safe/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x779ed3893a8812e383670b755f65c7727e9343dadaa4d7a4aa7f4aa35d859fdb\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://bb2039e1459ace1e68761e873632fc339866332f9f5ecb7452a0bc3a3b847e89\",\"dweb:/ipfs/QmYXvDQXJnDkXFvsvKLyZXaAv4x42qvtbtmwHftP4RKX38\"]},\"lib/safe/contracts/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0x2459cb3ed73ecb80e1e7a6508d09a58cc59570b049f77042f669dedfcc5f6457\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3c4a1371948b11f78171bc4ae4fd169a1eec11e5c4b273eb2c54bc030a1aae25\",\"dweb:/ipfs/QmPuztatXZYVS65n8YbCyccJFZYPP6zQfBQ8tTY27pB978\"]},\"lib/safe/contracts/libraries/MultiSend.sol\":{\"keccak256\":\"0x030bc8f4195cc8cba16efacba3da6870188af2d4b44d739de5d25e01e1473f9f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e5a332517a4c7f249ba69f98c093cb61ffe9e1c059699c327c6e2548ac9c7bd3\",\"dweb:/ipfs/QmZHu8bW9cG7EyAzhq7VxrTx6AZnQ5CUL6bSwvM5aUwhQF\"]},\"lib/safe/contracts/libraries/SafeStorage.sol\":{\"keccak256\":\"0xae0c704f3e4ec6b1436bbbd10b153feaa665ac36e556ccc4f2155e4c02f5c46a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f2c67b22791022356f5ca85533ecdda740aa8d5c9ed263d0c2761f2560dd1b87\",\"dweb:/ipfs/QmYf6gm89StvSTgZGR83UgSmUgJGjhGbBRRNvmxwywfiMc\"]},\"lib/safe/contracts/libraries/SignMessageLib.sol\":{\"keccak256\":\"0x012c0c71e1bd8a1f82c0668151d5ff9dae07ab37098cd4eafd2e5099764891c3\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://cdc484c399f00913f29280f8c86e2f8b886dd42de95d9ea0c572847b47a4e4dd\",\"dweb:/ipfs/QmaUDZHn56ECGbkAWiBXxsvJ2dYBZe745h34svZ7NcSssC\"]},\"lib/safe/contracts/proxies/IProxyCreationCallback.sol\":{\"keccak256\":\"0xf5410c842c1bbff96a2047b31f5437a9dc5183d004ab1fc9f952220f11379602\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0ac1fa0c7d6fc683384a3ce0b328c66adcc53b6a3e59d3b67c62404dd57c3099\",\"dweb:/ipfs/QmcVvxtcjZqyQwQcU4cPU4SZZ2LEahsmVWgJWGh5n8EHa7\"]},\"lib/safe/contracts/proxies/SafeProxy.sol\":{\"keccak256\":\"0x5dccbe86285c1d4c4b2fed0ae8007620c3186d22411f43feecfbf8a028e5c7e2\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a1a02d01a92895110505e141d05b0924ea457a25b89a161f0aeedf6b5cb41aec\",\"dweb:/ipfs/QmYWEsFbWwtrVvEF9MNQtf4X3Qt13dAE8o44tEyAS9jmKP\"]},\"lib/safe/contracts/proxies/SafeProxyFactory.sol\":{\"keccak256\":\"0xdc68ce6d07d02723fcdde9f115c976d78bc599667b4f9d08e6cda50f51949533\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0389c45311e383f0a27a928594341da67f061bf88795aafdbfb5e8449416fc26\",\"dweb:/ipfs/QmZXmXReN6uro3RAbh661G6LqfMEMeaLKRVoeJr5nx1tnh\"]},\"src/BaseConditionalOrder.sol\":{\"keccak256\":\"0x510558386b92b1d5961d8158ae6e3288a1d520c03123d109042a5ec3290b9588\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e071465250cbc11d946f422f4ff774d757291cac00f4c69fbac1d1e34cdae402\",\"dweb:/ipfs/QmUF2qNwJhvs3GeWmsWnL6y21eL6mb3QEW7EPYY7NZc25v\"]},\"src/ComposableCoW.sol\":{\"keccak256\":\"0x565c6fabc8a1e185acfb4539baeb7e3cabb004b54da2c777cbdbb3c98dbd6a52\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2b876b6b4a69f69b7f9445e67a0e60dd7a65f028d54ba9c4c8c983a00ee23642\",\"dweb:/ipfs/Qmf95tsR515WFv2yBKp4NzhFc9xvfZRtS194Lq7SY2r7zC\"]},\"src/ERC1271Forwarder.sol\":{\"keccak256\":\"0x83a89cb999a3c696191cc1dfad1a5b836da32271a7ef56917e8e26fe424b4ac8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fd3de29eafff43395792fcc3604d5f13d51cbdbd847d9456317567f88b380090\",\"dweb:/ipfs/QmbGckj65uXkF9SaSPvjKZXx9jZWYwtwbDdD8V6vqL4sye\"]},\"src/guards/BaseSwapGuard.sol\":{\"keccak256\":\"0xd7b2a2629504bf5d331c4fa21f5b5e11584c11bb1e51ba687b37eed459f2bacb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5555cfec57b3b95f15bb7d5b364baf0998f97cefd9f3744d804d5c7cbd6d6ccc\",\"dweb:/ipfs/QmWojLCbP41KcaHaNWv667qKgFBW9K797tzUskfpBdiA6Y\"]},\"src/guards/ReceiverLock.sol\":{\"keccak256\":\"0x6dd5033473ca3264bbef0d703d29f6c10488d36b69fe1d924f071e412369f8c3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://954572256b96d72a47ba02657b426474d12541ad0942618f28dc732bfc8737f9\",\"dweb:/ipfs/Qmdi8pxjLbxDWufBs4JS2PpkoHfDje447PNfnBQZy52i2g\"]},\"src/interfaces/IConditionalOrder.sol\":{\"keccak256\":\"0x52c9a2b5d5cc7345fe4b4c039af88c5621bc7c6059534cc7c76b77833aafae7b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1660e1510b82216e38b669f16b69f4a37b012b00655d0fc6794e4d77d2182699\",\"dweb:/ipfs/QmNiZ7rMT74sKT9d6SUEnKXiWjaYLL8nAzSdLBXBAzYNmZ\"]},\"src/interfaces/ISwapGuard.sol\":{\"keccak256\":\"0x60abdef709d22cb95e4b1d4680cb70d5286cfb5aa71ec65868cc44164ef8790f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7593245e22ffc533a073891affdbb003fa56eaa5ef7f0202a673b52968ad7ed5\",\"dweb:/ipfs/QmRhAvNzbHp8qfrw7eHZP6EDWw42tXMXSV3KuyhyxFy3Nx\"]},\"src/interfaces/IValueFactory.sol\":{\"keccak256\":\"0x3304ef8a0a1727258ac8278bf5426daeac37ece4653eaaff87b15143814a8122\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9934d278069dd9474065777833a81e65af227b85d350b6c1f012b812101be9de\",\"dweb:/ipfs/QmcMBdvY7wLs92FCyutDGQGtHnYryjnaykREvDNBNM8Yih\"]},\"src/types/ConditionalOrdersUtilsLib.sol\":{\"keccak256\":\"0x38e4ce4fc58c018f510ee45d78ae49253e8aa70fdf559d83ebb6c838c6b47aae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a38ccd5b8ce2895a77b7474b1ac36ebfccc975b3839f6d3bfef72700f8f6f777\",\"dweb:/ipfs/QmSfs5zZ4U14NkZYSqAFUBcuKGjyfMM5Dp2sbj14FmVYPf\"]},\"src/types/GoodAfterTime.sol\":{\"keccak256\":\"0x5c6c0aa4d3eec87053b8b1b80957cc64efcffa2fcb68a35f1c7f8332a2884643\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ae24374d4c5a47713e45d1ef31697708619af6325db73267088ebcd026ac2bc8\",\"dweb:/ipfs/QmciGxpggSCkkAuavUQhmUisi29sohSDVvkZ4a4YBgrSDm\"]},\"src/types/twap/TWAP.sol\":{\"keccak256\":\"0x009eb71fc8e7f782e6d0d65f87188c530106ba4f1f8d5f6bf3a165e34710e611\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1634e714b4f7c7217f407b253b7eb3be06585213b3d2c69ddc495183cbe97a0f\",\"dweb:/ipfs/QmUjV8ivqgVfmVRDbJpKUGzxkFEGHZKCtAopYrYeyvyWKR\"]},\"src/types/twap/libraries/TWAPOrder.sol\":{\"keccak256\":\"0x5f17b26cd0f9d5cdc6451515852dd9d1d7f7b24aeab8c6d375fa68c20243f2e3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fafbf95d8a428145e490fd378cda74e9d4ebc2aa566faa19a7a04c6080dec166\",\"dweb:/ipfs/QmU9exeSmHJcmCriXD9oQ9c8cAtWHtnM9AYQNbeJyr8HSb\"]},\"src/types/twap/libraries/TWAPOrderMathLib.sol\":{\"keccak256\":\"0x9cb5263a1b8689b6ff59b9bcd14de0d031d8ed7efef56080f32b80c6f15e8d68\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d0411cab6f65fc3ab6415f9009d6a1ba0eda0348c66c09a9937fb261cc4c18a9\",\"dweb:/ipfs/QmSdo9dtkteSATZbd8SJcE4M3bLiFZjebHhSsPmV8NZhfG\"]},\"src/vendored/CoWSettlement.sol\":{\"keccak256\":\"0x4e4e317b24017cd87eb11d16368b8c06ec19306d31946c330a86f9f136df38d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34b9b2fc2c89e60497457cd812da9c53718c15ddfbf70f6e11832d22092c1840\",\"dweb:/ipfs/QmYFzaynWZfdpmFRf2dZrQ32Ep53AtQDd5fTE3a89xVkaR\"]},\"src/vendored/Milkman.sol\":{\"keccak256\":\"0x7795717dc0007aea88681ea4a2a84a32db865d97b59513ff77d00c879fb15b66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90628089a4a76a7e8ef0319425f15d974543383c5f875638fba315d24c4bc753\",\"dweb:/ipfs/Qmb7yJyxQJvmx6uQ1z9ptzJ1X7W58LPFH8pTicDfyNzyZQ\"]},\"test/Base.t.sol\":{\"keccak256\":\"0x78797f634316b9ce37bf9beb94059a4bc6e50904ffde0ca200d03307df1cb3b5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://85e52033c3e008d997e042f9d3b991fd70c84062cfd026456e916b76a3a8a1e7\",\"dweb:/ipfs/QmNzPATpfEE6zjDuvsfCJGkyC38WG5ikhwR3FRw8HiWLMW\"]},\"test/ComposableCoW.base.t.sol\":{\"keccak256\":\"0x0221e914be81f396e786202ac4931e9666ccd42ce9c9da50dbb4be648414ea27\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1630e1ee69a26aed1cdd8229fd6622b631790af6c8f1908da814ca446510e8ad\",\"dweb:/ipfs/QmVXGddGfEbxTgr9nRbnB7RZ57os3vmFbCo75zv1ALPJSv\"]},\"test/helpers/CoWProtocol.t.sol\":{\"keccak256\":\"0x7874033133e2c08fecfaf6ef298819574c9ff486bdc95281f39c68adf7968ed8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2fc4f27186500ca09fb26f9a929238de8bb9a0cf2673fde20c00060bbfa5ec9b\",\"dweb:/ipfs/QmR4nsGvkmiHkFh7uoVxrmPdGLMedkHXJrcJ5g2HvwVBY8\"]},\"test/helpers/Safe.t.sol\":{\"keccak256\":\"0xd86abebc65577511beb1ddd3d0309c1e317ff66cb2d9e04c5dee6314aade1329\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://849077d670c0d7e37d416ca7dc50abc5413e08655c84a585d1e720df4ace951a\",\"dweb:/ipfs/QmdNYYbqhy3Ky5j9ky76k3yy8sBjMZb2tErtvwYj6nBNdZ\"]},\"test/helpers/Tokens.t.sol\":{\"keccak256\":\"0xf83e7af950879ef2e9a9439baac229d54d4e2c0010de0c31fe50e2819d80cbf5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://76970644dbc6fbc90e2f7cd1c188d5e01627549f8d1c44dfed732f666b3da825\",\"dweb:/ipfs/QmQHzKBLoHNshpKmX2cBFvwC1LBpKeRPdpyDmNt7Yp5TN4\"]},\"test/libraries/ComposableCoWLib.t.sol\":{\"keccak256\":\"0xb2181249ce7534d28d53b75f2a8a3740c6483c0a724c6fc50c57a6fe6cf0a909\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8375f3182ed1f694adac87bfded1a139069e3d94c5c2d3a2185f0e18ff6fdd85\",\"dweb:/ipfs/QmaucPxncoTpjwHF13yXc1D2p1abuoctww1syqkVxVS9uq\"]},\"test/libraries/SafeLib.t.sol\":{\"keccak256\":\"0x58495cf250d0de3ebef0b7516a61207b7a08942d25187a889ee46931a5047a35\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ea524df2b48cae29a60080490d3ee42f369e064ac28dd78dcf00b47aeec76d52\",\"dweb:/ipfs/QmXzdHC78e6EVTGJSDxtKsjHqaFDGLJyNALCKUYdQDDBG4\"]},\"test/libraries/TestAccountLib.t.sol\":{\"keccak256\":\"0x09d3b4eabab8125d3cc1abaa86bfebe04545972c2a12c62a6ed9bedabef07c96\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://af9a65f26bafb1c90ee17d74992859d0a45c5baf02771878660cfab6c063175c\",\"dweb:/ipfs/QmVWH8gcWTGsEd1goFwTobwhcFkoGeuqjFG2N7fKFEkeng\"]},\"test/vendored/GPv2TradeEncoder.sol\":{\"keccak256\":\"0x16e3fb0aa82122c4defea77a9678f936a3ed0e719dbe4785b902f1dfdd45d12f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://104d08d69f24fb5780359c1b38f7501b8c6f78c4e528b8e07cd49bb1fac382c9\",\"dweb:/ipfs/QmQtRfvwyKx6fdwxp7YQa9XRRvZ5q2gm5GDbtST4wCy3qM\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_divisor",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct GPv2Order.Data",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "sellToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "buyToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "sellAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "buyAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "validTo",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "appData",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "feeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "kind",
                  "type": "bytes32"
                },
                {
                  "internalType": "bool",
                  "name": "partiallyFillable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "sellTokenBalance",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "buyTokenBalance",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "struct IConditionalOrder.ConditionalOrderParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IConditionalOrder",
                  "name": "handler",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "staticInput",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding EIP section https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified to learn more about how these ids are created. This function call must use less than 30 000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/@openzeppelin/contracts/",
        "@openzeppelin/contracts/=lib/@openzeppelin/contracts/",
        "balancer/=lib/balancer/src/",
        "canonical-weth/=lib/canonical-weth/src/",
        "cowprotocol/=lib/cowprotocol/src/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "helpers/=lib/balancer/src/lib/helpers/",
        "math/=lib/balancer/src/lib/math/",
        "murky/=lib/murky/src/",
        "openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/",
        "openzeppelin/=lib/@openzeppelin/contracts/",
        "safe/=lib/safe/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/ComposableCoW.base.t.sol": "TestSwapGuard"
      },
      "libraries": {}
    },
    "sources": {
      "lib/@openzeppelin/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "lib/@openzeppelin/contracts/interfaces/IERC20Metadata.sol": {
        "keccak256": "0x687142c633b33037c3137b6bfeef848a44eb1ef83fb5fdb59a3affdf28a46516",
        "urls": [
          "bzz-raw://0d26b5d0495ffb4c36b1abdf003f43ab478c324752ce60847af8019bad5a3ad0",
          "dweb:/ipfs/QmQGcXZcq7eBrZUyxLbHFkBFWCyMwFonvJwLRSsL82dbWx"
        ],
        "license": "MIT"
      },
      "lib/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac",
        "urls": [
          "bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04",
          "dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG"
        ],
        "license": "MIT"
      },
      "lib/@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/helpers/AssetHelpers.sol": {
        "keccak256": "0x8919c48601af68bdfd8fb1946fa0af1e54a863ba933a48bdc64b2852a749bd00",
        "urls": [
          "bzz-raw://5aab8fc0dcd62002d4c02f85d46bd6dc771b871a273347c1b6c3b32a2c131a76",
          "dweb:/ipfs/QmYWFnb7LEk85DS7JkMDDxENcJhWxiaoXCNAUQTvmZcPCH"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/Authentication.sol": {
        "keccak256": "0x131f4b886220362d0127fdb51bfe983689fb554f38afa4f7c5ab93c46b6a08a3",
        "urls": [
          "bzz-raw://089b6c089dfe4c7cd6da59c8cf72f43e7c7b695959d2bcd08596eab193903e9b",
          "dweb:/ipfs/QmbXRP9EMowRTaTTxtmmUUAo7ufUZBVhTMEj7FW8PofevF"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/BalancerErrors.sol": {
        "keccak256": "0xb6007e18aac8c801adb1f6ffa5218439c5dd4b8e8f5e6e368defea8f2aa11942",
        "urls": [
          "bzz-raw://9f5aa7386aa0ffaf4ad3ad5f635c59bf262eff0e57a69aa346728f555178ab32",
          "dweb:/ipfs/QmcWraVfXDJVEVRmK1h2kczeiaXQ9imTzhXYVjxo8gKJV9"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/IAuthentication.sol": {
        "keccak256": "0xbcdbfe6a049f07b45974a539007e5bbe5898ccf41f82dde4dac9af21c2db4537",
        "urls": [
          "bzz-raw://dee452370f4966364b60bf3bc74b179ed0c0e020eb52dd063ee7817efc3b3efb",
          "dweb:/ipfs/Qmd6EZLp4W3RqTWo3SYRRVneSofHYHCmLn23Rgot9EisUH"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/ISignaturesValidator.sol": {
        "keccak256": "0xa19d02738aa1ffda742c86870731f3d115cdb5f54607d92eb05d61908ccb648b",
        "urls": [
          "bzz-raw://27dabb6e09b71acf4f42f10e411e2b380abd087c0a62144bbbe3cfcf4149842a",
          "dweb:/ipfs/QmSay9rw6M1UwNwrrJYaBSeUPEzsQWKh91WTPZVdAfn7Zq"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/ITemporarilyPausable.sol": {
        "keccak256": "0xaa1012d53c713d3210b380234dc31fda5cb57ef5ddf62b3a4f93bc370b15eee2",
        "urls": [
          "bzz-raw://84fc4f52724bff8a058b6f6fe4ffa531b76fa4da70b8175883b3cd6f06b75ef3",
          "dweb:/ipfs/QmcjJBGCkzw1ohdygYGm1JwAyFnxGaJUFi7GDEdGh8wLnQ"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/InputHelpers.sol": {
        "keccak256": "0x1a98f84372a0d2b7ebff4ec1eed54b6108a88d049763ddcab2769bbaa65e1d42",
        "urls": [
          "bzz-raw://7ab1056efa927440e5b13699dbcdacd3109fe6aa70cf80a232b143c044a1a77d",
          "dweb:/ipfs/QmV7nC83wHKwuBfr3JhCvt1A9oTNie5fffVh4QzSrxE8Tc"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/SignaturesValidator.sol": {
        "keccak256": "0x8a1d969fc9c2247ba150366d1b6af2c51d80b66983044a6806668e3b07f2b00c",
        "urls": [
          "bzz-raw://873fae2853c941bc00737f9a2a9c02dd5a9ab5a8ff183ef6dbc1ea5f56c60d45",
          "dweb:/ipfs/QmQwkWKNbSmXBMqogYv4Xk28mj4JeMWfnG9dK1bEDP6AT9"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/TemporarilyPausable.sol": {
        "keccak256": "0xc92fd13b4fc5ab23d2f726fab9ad755d1130f985b50f59ced9e5da4a0cbeef12",
        "urls": [
          "bzz-raw://72301458f2efb086027328f316f69113cadc08128240692ea5342b2248225985",
          "dweb:/ipfs/QmRKvqueD5v4ZVZ35ctj5Nikhv1VjcF5BJsaPTFmRLfmsj"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/math/FixedPoint.sol": {
        "keccak256": "0xa76130c94d6bb62072b28d193fbee5a87d3701a452f491c4a209d869a0528756",
        "urls": [
          "bzz-raw://9915f5909b86affb9cd06450e676dfed644543265516a21240a3568188ff5e5a",
          "dweb:/ipfs/QmYJZ7RRtGyUzwc8z4qtRyhyAaPDumA97SqBEXpLoRV4d8"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/math/LogExpMath.sol": {
        "keccak256": "0x2b0f4d2c30da402a5fad1b073e5b012a02039069d62458aa3e044e2705a174cb",
        "urls": [
          "bzz-raw://c3c683dba7eb91f04239e7d4c56228147d67ca8631f91ed40fe49a5a76563a0f",
          "dweb:/ipfs/QmTnFknptmqySHSGDntypy6fyyJYbpH1g5ktDUj2DVXj4T"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/math/Math.sol": {
        "keccak256": "0x7828aea1e40ccff2e022d83f608e68a9b79c3493c74e685048dda141060b804d",
        "urls": [
          "bzz-raw://d36e0de3fb8db6324b123d75e058e492e85c872e480450f25e8c0162779130e5",
          "dweb:/ipfs/QmXRKeyEkGjj8L5YwbWx2ct1hDTH5bxGhuPoUnuTL8QrLp"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/AccessControl.sol": {
        "keccak256": "0xd579e821f7c87cb584669bf39e2cffdf4c5dddbfc18fc7a5689fecc71a220af5",
        "urls": [
          "bzz-raw://2294d003285005d4d17f1b603d98ea8c9c0f95dfc7ba454598fb455bbfc0fc1a",
          "dweb:/ipfs/QmUnrky7oFu11UgWpd87JaisgzBXahCf3uv2u8a4DqiLyi"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/Address.sol": {
        "keccak256": "0xd18d27a553120116908ad6d58fcc4556bc6b96ab27c7af84f3aa2c2621ac022b",
        "urls": [
          "bzz-raw://451d010c7efa1d87285a4c6e68c2c6bfe6774aff7aada14d6805a169023c533e",
          "dweb:/ipfs/QmdGUThM5JXdwEkn4kRg1sVuhXPGMNDRh3hwskx2upjpJM"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/EIP712.sol": {
        "keccak256": "0xe5412c02a6926da25517bce53822f3231783635f4b74ec296944cd6631aa1717",
        "urls": [
          "bzz-raw://71f24670f9eb3ff0766ff10743abe855eb97df844da7fa481200fa8f0fbaa246",
          "dweb:/ipfs/QmYGqeCkfJ12QBKaYTmTSJhWBZ3q5rugqyDZbNZHEPnYoc"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/EnumerableMap.sol": {
        "keccak256": "0x971db51d8bd1d5ebb808ab46376a03a7430de50ea5b56eb15e3f4845d1035f27",
        "urls": [
          "bzz-raw://51cfc148e417aacf7bf31e2d92db047e858ecccbbc3e8dd013253e4461490a47",
          "dweb:/ipfs/QmWwTXt5imULRv7srgKwF4Uo56QiZ7cARW7DFME1nDyoae"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/EnumerableSet.sol": {
        "keccak256": "0xf316c789176ce975f4d1da11275398fcf228b4f6101c40708bcd042e24c8a780",
        "urls": [
          "bzz-raw://b8e4f39cf333bb1eb610af95680095e5db1ae71a0d19cac0f9be0598b204cd57",
          "dweb:/ipfs/QmNbr1LNzHuKNMY3TKEW3mst1XdbdFDabq41eW924FvWrK"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/ReentrancyGuard.sol": {
        "keccak256": "0xfee6a0b7071ee2b5f937b4b48a7574a6ac1b1cd7012124e12d696fef8bd69862",
        "urls": [
          "bzz-raw://0bd6b10b04a81a1bd0d7203414e7cb17b736f96266f25d27693d0812894273f6",
          "dweb:/ipfs/QmeouzDNfygnCmEytzed4HCHkRWQDjKCbSSQbRHC582F3C"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/SafeCast.sol": {
        "keccak256": "0x962b6e641fa3c305176e88ad54d00ebdfea448e0ab25b712828f5c78e9a917ec",
        "urls": [
          "bzz-raw://b24e7a2dd6ede68aff01530ab90918a187e8bf3010584bd73dcdd0031c5eb032",
          "dweb:/ipfs/QmSAETq7UmZjyntWyxD2kJSnWSuBkYjUnAoT17tuS24EVk"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/SafeERC20.sol": {
        "keccak256": "0xe8df6e6a2745689359b990eb94ae60f188e8093b477d53adf67a35ac2635b3f8",
        "urls": [
          "bzz-raw://734eb2a19b7eec6e5d7be4bcf8610040bae429cb0c9f65851b7a3dace79caa19",
          "dweb:/ipfs/QmQ78Jetsdy4iYTpR85VTcwtvRsSpRsjQBxfkL35KcgiQj"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/vault/AssetManagers.sol": {
        "keccak256": "0xa035d80740041812057542892092a1a4d820aacd24a901dd598b29b63b5e709d",
        "urls": [
          "bzz-raw://927323450bf446e252ff70b039ad2a228fa72326065107087161549850d8a03e",
          "dweb:/ipfs/QmZubY3E4ahd5vAFHdW2xUEdCLajfcJHJXcDmhzaNx6hWn"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/AssetTransfersHandler.sol": {
        "keccak256": "0x4abf5b9f0981177a68a628b8ebcc5781dda876f02a7ca75c57092e6899113e45",
        "urls": [
          "bzz-raw://f1ef2a74f50565ae31f7f16c3667ef4eb806be030cbda275d162dc356f6c865d",
          "dweb:/ipfs/QmQiUe9PMkDKF68v4mhUK2mEFKV5SVAFJ8wbX1aYcQifFR"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/Authorizer.sol": {
        "keccak256": "0xf186458b2feb04dbe781855d45bb49c19b723359f489848767da877218498527",
        "urls": [
          "bzz-raw://55cf8df8a17e36aecc85bfc7de5bd45ee98cf466bdb7bd0fbf28194e6a7ad891",
          "dweb:/ipfs/QmanjQQkR4AehuVReWsq4iv5LP6kTng7XLLpPZ4bhn5RT9"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/Fees.sol": {
        "keccak256": "0x1efa5220be97d81503c8f81595e2cb74ca807dff79c189e79691161c5b8a6654",
        "urls": [
          "bzz-raw://bd8f591578c77f263666d28a6d7951a25c9c626dfb310c784a9db60c262204de",
          "dweb:/ipfs/QmPBZ9PHruhMvdJjzeQfruvEtHeiqhud32C4PZFiJKb8dY"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/FlashLoans.sol": {
        "keccak256": "0x26fb5818caeb8980cbbab2cccb51f41fea5e5e28ef1516ab5d792427661e2f59",
        "urls": [
          "bzz-raw://ce3bc3abda989089faf10f3215abf5daa1cdceb11c80bfdb486d02c8656817b0",
          "dweb:/ipfs/Qmaq3wovoZr22zSfQGWNp3E1gsVHVwkRiAg15EnTtCML3S"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/PoolBalances.sol": {
        "keccak256": "0xd6c2b56e661fe9f97fc007d51731ceed59df3771cba26161a815204906afa8ec",
        "urls": [
          "bzz-raw://6ae722679cbe89b9ba763b121f25f7cd0be607b6a7ed3f682b5e44d6408238d5",
          "dweb:/ipfs/QmbZmAEzEHGpVnPfFTR8DZT4M1tn6JSKDTYw4a6v5mDY2b"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/PoolRegistry.sol": {
        "keccak256": "0x5d8404487a96d357fb0ccf649f776f3cb5deb5d5194b3b140f105aed310e58b5",
        "urls": [
          "bzz-raw://d0dc8ac0d4c777c0f8818ccd965c293e19233db9f4821ac07078564c31917f61",
          "dweb:/ipfs/QmYeVv7fTZ4uFbPzLD4wJHXGYFdBVzVDQ8DkPhtafeAPLo"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/PoolTokens.sol": {
        "keccak256": "0xeea9563c1ce522ab5fba46cc4384ed5899c0025e08482e8ee0f5a891d7c43d33",
        "urls": [
          "bzz-raw://59943db10a9016b85a3acdda0c95d3c27ed9de9572e39112da70b0ab8812ff18",
          "dweb:/ipfs/QmXNRbqyZxUUFad5wQjP6HcqggpAtXUJX9JQNPLu7A1vAW"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/ProtocolFeesCollector.sol": {
        "keccak256": "0x1dd306e5b05e5eda3d5a4c5abdd4ebc6083849c1a43d2545b47b0a7a1982d78e",
        "urls": [
          "bzz-raw://b2019f578c340abb860b74cc2aab3d45210f3569dfb4f355bb3b202d15a72dd1",
          "dweb:/ipfs/QmdnTNNk1CDsimdtvmp7Wa2gjtJ2sa46XvqmcrdQDQXjyy"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/Swaps.sol": {
        "keccak256": "0xc98ad2e27bcfd93272ce35b5be8b80f65876142e3a23af7dbe2cc18de3fe03f3",
        "urls": [
          "bzz-raw://2e34f80abec5db0b6e3abba2ce3958bcaffe7fd53ea4d9af947400afdcff103a",
          "dweb:/ipfs/QmV2WTXMYdSDVx1HMEzMqSYak6F2g8iJqhTzPSNAQmEgpC"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/UserBalance.sol": {
        "keccak256": "0x6c8c2b5a4f2cb412b643e47cad02aa65c8208ca3709d87a91983e44ea8e47b5d",
        "urls": [
          "bzz-raw://c6f3d9cea8579ffd715a02c16fdc6586faffb58958b107ebb0e05fe834da9145",
          "dweb:/ipfs/QmcY8CgXLYZFxUXkE8qMvhRhJu8fKBfX6yLhLTcHd9HJzv"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/Vault.sol": {
        "keccak256": "0x8e26e3970f533eef5c24bb9c581e3f340b81f1f096217843fe3a67f22c7a6d58",
        "urls": [
          "bzz-raw://d55f23ed8b0e1cd52d517e640d856ae529308072de03cbf05797ec524ddeff50",
          "dweb:/ipfs/QmTsJudtVpPCyVVs1r1x5mgF1PuuH2FSuGQh3eFGjtJ4sx"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/VaultAuthorization.sol": {
        "keccak256": "0xd0ef70a4180e71995a20c487c45f35da88ccd1e2efeb8a34978276a7258682b1",
        "urls": [
          "bzz-raw://0fabd47a0b4c899deb78527327e404dfc69236221f5d9e19f68242976e68c1bb",
          "dweb:/ipfs/QmYad6Jw5u8prpMYh4kDhKcLehjofThGegvLHsXQ6Y76bz"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/balances/BalanceAllocation.sol": {
        "keccak256": "0x7bbd692caa596ea22160a01d7adee125010322af46deb9a73d0aedbe5dcef349",
        "urls": [
          "bzz-raw://2f3434a71646ccaddbf8b5c7773b44dad9c2f68ecd24b3f1dc36dddf61ece0a0",
          "dweb:/ipfs/QmSoeDgGcgAJki2nnj4xUcLZEk4fZphvcRh9K5s4ZJQBny"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/balances/GeneralPoolsBalance.sol": {
        "keccak256": "0xf93cc0a65759b2c3ca3395bbaae92a9a26b0f67bedb5ea0d635818b4d3553597",
        "urls": [
          "bzz-raw://efcc89408bc4ef8416921c54f4eb6739d987996fe87c341403fa7e3b7e4e3c6e",
          "dweb:/ipfs/QmXHG2nV6JZ8qNKYNTSufcq9BT2JXi2j5qTzdRu63z9mBh"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/balances/MinimalSwapInfoPoolsBalance.sol": {
        "keccak256": "0x9af5e92ef5dea7c8ec8b081bc6eb84be3cff841973a8ee3e414c959b7cad8c5a",
        "urls": [
          "bzz-raw://d1b06ccc6aa13cf8d331f1685df07ee44d6bd93f5341d0165cb42ff2bc6ff8e8",
          "dweb:/ipfs/QmcQe6GRBpLhVacZu58XVebP49tBajFvfA5x2rqHnhnCaH"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/balances/TwoTokenPoolsBalance.sol": {
        "keccak256": "0x4cdae83e97be68f5f65257c9f9e716a7e43b9632f1c39bfc9cd02c2ae707db26",
        "urls": [
          "bzz-raw://e466b98ded97f485ae838c07f45fe54c0a385bda092e83b309f723557c0cbbb9",
          "dweb:/ipfs/QmTMRkKoKnqTfiJjteeEzhcXwdayU2QoKSFgbb6nJR4oB4"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IAsset.sol": {
        "keccak256": "0x48875a5c08b3c90dd69d4dc0a0d28aca69609eedbf42772fe1f66e3097a53a5c",
        "urls": [
          "bzz-raw://a4b3d8dc951be1732a8dd1f6379db2ad054b05ad384d67036eb831001f5c17e4",
          "dweb:/ipfs/Qmb5kx5C9srQjW4rRkDpikmwo57crvzL4K5o22uFXGVLo4"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IAuthorizer.sol": {
        "keccak256": "0x8179280bc53b5313ad036b1966695a466c0594788e5ece1028e2e29997d1bafa",
        "urls": [
          "bzz-raw://12145a3e1289ff9e2b197ca09b545fc6168022b9e9a250b3835d62c6717adaa2",
          "dweb:/ipfs/QmZVuw6Yxv4D28HPC5UDmKbuEyqvzZkEJLwCxqsHzySoUB"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IBasePool.sol": {
        "keccak256": "0x5c8b9e7a69732b8d718b15abf8ab7479f1661dc397ad0b68574ba79e77628a7d",
        "urls": [
          "bzz-raw://429f0a529798adee4261f454f8fe601551a7c007c8b4cbfb2962ba99a51f9ccd",
          "dweb:/ipfs/QmRDcGbJMPRyV735QC6cP332TsZ7SKgNbisACMw1jfMzuW"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IFlashLoanRecipient.sol": {
        "keccak256": "0xf039be9ad3b731700cc69efe53c8a8d8b447f25799f68c7195592a09e9247b5f",
        "urls": [
          "bzz-raw://bfd48af1e1460f3a174b52ffb3398c37cf42abd6c6a58e6b7d9d50d9094819ce",
          "dweb:/ipfs/QmbRTDDnYGwpNd76wRNLUfQBc52TQ67npeMGjN4M8j97dP"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IGeneralPool.sol": {
        "keccak256": "0x450c3ed5a9bc6116697b9b424de93d00f23e870fdee9c0bda009cc7ef9268abc",
        "urls": [
          "bzz-raw://98fb2bd1c1f94dc1dfd70adad46df1fedd9697aee089b048696444641154d315",
          "dweb:/ipfs/QmU41tYKnbfqYqwvQxFj8JVpaVnYYsHfTL9oPNmE1peqkT"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IMinimalSwapInfoPool.sol": {
        "keccak256": "0x5119d39c32df88286cc5391b81a7ad1208e46825b32dd49e68900342c5f0c741",
        "urls": [
          "bzz-raw://1400c06d1b8c0a6075f0d03e5bc1b02336f952f94eb4753726cbb206a0741372",
          "dweb:/ipfs/Qmcu8MRnpV39xyxzHAvAdGJXHp9yKxCvGcixbtci6YseA7"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IPoolSwapStructs.sol": {
        "keccak256": "0xc4c72b44bec181e3b3a360d54c1dcac2104b20ca56e9b939210f9673e58d550e",
        "urls": [
          "bzz-raw://6e22aa83552c18a3659ec0f8c765c21e8d9125a634f0cf9b4ef6ec26afc61b05",
          "dweb:/ipfs/QmSfGVR4F2bwyBu4y78aVRQfGB4Pd1GDgVkC1HYUG3icxp"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IVault.sol": {
        "keccak256": "0x6f5e6a58d0f11b952840ef3a8d022dc3df3e75d73928e2979c248fd80e416b9c",
        "urls": [
          "bzz-raw://c56287185d0daa3a4bc96832c81463931bdf937042d265836844539e14470619",
          "dweb:/ipfs/QmV9GiMZLb3L7HRFPf8hciWxsDqRRYrDxmiB1RCt1u8Vsq"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/canonical-weth/src/WETH9.sol": {
        "keccak256": "0xe9d7e2895eca07b5f45c5ba51d577cfde6bd7505a0beb49af9eea266931d0f04",
        "urls": [
          "bzz-raw://6b2f9d01a4f8dd133b4da18e2c7a294be37408d27b75d6aaafdbf8000a394a76",
          "dweb:/ipfs/QmdZ482WjQzFmAbvFr5P5eHgHcGK11ohUirWqNdcb5m4sk"
        ],
        "license": null
      },
      "lib/canonical-weth/src/interfaces/IWETH.sol": {
        "keccak256": "0x7c3bbe9f0d93c652822ac3741ffa870516ef01183c4f2408a05bf4ba806907a3",
        "urls": [
          "bzz-raw://fd0908e7d72f7bbfbe9b8a9520ba8b035b9fac2edbd5c83c80e0c605263b9c05",
          "dweb:/ipfs/QmWKYntvGqbi3nSUWTYapz9Rk9MhrLkiFXY2iN8Fw87sQL"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/GPv2AllowListAuthentication.sol": {
        "keccak256": "0xaa05adb9743f3510d3148c26d488f4dab24ea064d685e7c916b756759d3e0af0",
        "urls": [
          "bzz-raw://921ec52950fc8cad371274e08a2ca84e0ec3562361f4f7253b505d009b9f013d",
          "dweb:/ipfs/QmUcJACN5CRVMFWofhRTgpoe3wZvBepdqYtYHT4zBXX6LP"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/GPv2Settlement.sol": {
        "keccak256": "0xc28bbf8245c27a4e0318ddb98affa388a78f5afdb00bbcf84897659ee7f08e71",
        "urls": [
          "bzz-raw://7e1200b13634efc822f5fb32fc71490bf244cd39b4d98fcb58c4208c620c5dd7",
          "dweb:/ipfs/QmcUizcEMpMkQ7Kw1sadmcUCaztDhtBavaSCJTp5JSMkVF"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/GPv2VaultRelayer.sol": {
        "keccak256": "0xb785d0cc8a18cad4bd7bdc46ba4f995b17e6a3f95c8cbefcc1be6618bfab1595",
        "urls": [
          "bzz-raw://655f249d6af04d75e907376157e393d205ee6be73007f6d75d9bb1325a9efc28",
          "dweb:/ipfs/QmanQfzHUnyrGvknJ9EgkLLQ2Nfd1A6RnfFjXaStp6vgYr"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/interfaces/GPv2Authentication.sol": {
        "keccak256": "0x13eafd3d4043356364572ff28f213ea39faeb4b21b53a900b35fa765a5e0347f",
        "urls": [
          "bzz-raw://71bbcdb728824b72046281d5ca6adc6da2d0806cf251b0662dfc8b06dec9845d",
          "dweb:/ipfs/Qme59yqn4QBBsVe9miUvyD1wVNNFvauXgsPBXT47Ahbizf"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/interfaces/GPv2EIP1271.sol": {
        "keccak256": "0xea0afb5f00ece4de83adb6cf76629344dae3171db3040e50ed704e0650342ade",
        "urls": [
          "bzz-raw://4d9d40de14b1bd8ce70a2f94aa43957e77d7c71b58973e5dcc7d5765ded6cae7",
          "dweb:/ipfs/QmaYLbc84vUtKjdvHjwkYVvnr2hP54Q1B7Jm5KW4iuxt4j"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/interfaces/IVault.sol": {
        "keccak256": "0x205fedd49ab79dd6d2824a056d61ec8bdd6bd02ea9b50e398ea4353095c5325b",
        "urls": [
          "bzz-raw://4470ff225bda4345d08c27f7d2e41b079be66e51c2376f4170978aba85bef906",
          "dweb:/ipfs/QmUxq55vtTEDU63ttAUGUsEksH4gLq8dJHkQEC7Zy6gdT1"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/libraries/GPv2EIP1967.sol": {
        "keccak256": "0x9aec47a6c664a2ff139db0ca1418c9132128830c775005d667d85dafb3e8491f",
        "urls": [
          "bzz-raw://cc5c8ddb4849fd080692a0495890f4f72297c42435a2e53ec8fbe35614a3661a",
          "dweb:/ipfs/QmevZYnJ7b3Pn5cJgmn1t1VwT6Sb45wrEFhHRA3tKjzd61"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/libraries/GPv2Interaction.sol": {
        "keccak256": "0xb950f05f76ac8044b82314ea5510941fdbc0f0e76e7f159023d435652b429528",
        "urls": [
          "bzz-raw://c081155e1b18c060aaab781b4887744413efffdfc55ce190db45c321444f165f",
          "dweb:/ipfs/QmbK3Qu7ZgwBfx2Es5EQcvG6q2srkHjzfNK2ziQ4ojxLSF"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/libraries/GPv2Order.sol": {
        "keccak256": "0xffd0cc3de3209aa38045d57def570ccbde028a39a54b00c696dbe19f4f6d7f9f",
        "urls": [
          "bzz-raw://5714a47cae551d3364bfc6a753d92822b29d277298e55942a2814ed1e2afd87d",
          "dweb:/ipfs/QmS2G8ftdhk11qoSYHX8twZK5vFArhcnVVe6gy5UGTvXmg"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/libraries/GPv2SafeERC20.sol": {
        "keccak256": "0x746fa180cf0c8f866d124958afdabb7430bc79539335f8e25ea89c212378d03b",
        "urls": [
          "bzz-raw://eb94c53fd20b77c15cf44fcdb4939dba3e6e370661d114f73d59b2737ccf4e39",
          "dweb:/ipfs/QmeWYK6wZJ4WKT35yhYkhp1ixwcP348Dr5nS36fnx5FLVD"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/libraries/GPv2Trade.sol": {
        "keccak256": "0x416f67497b82e72e364c94f9322e89a3f993690751f061e55f9b33c135dc6c5a",
        "urls": [
          "bzz-raw://246c6840d43acd6b64135ad7bf99e2a9c87dc9a7c43d14fd43097e8321a424db",
          "dweb:/ipfs/QmXmV7qxM7hmEc5Z5L2crsMzYb9t4GPes8KM5oLXsgxVR5"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/libraries/GPv2Transfer.sol": {
        "keccak256": "0x3fbac207882d1e12ce41b112c1d878e3b234842904c11e006059ab642740f84b",
        "urls": [
          "bzz-raw://eba7b5484ed100a8b4d8af0d62bcc3f30f622065d21de4913ea6a1be024f718e",
          "dweb:/ipfs/QmYxbR3cUybCwyCmzdEyxtjnrf8zb6jxBRVycEVpANXnmf"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/libraries/SafeCast.sol": {
        "keccak256": "0x5804f013c055fefd71f82a86e51070e43bc17ec47fef18a501ad5fbccb20c9fd",
        "urls": [
          "bzz-raw://39d85416d210ab05604c4d65aa61b69b220d6b3ae0e0077586104914e129c693",
          "dweb:/ipfs/QmdNpvn2jtCJLJ8jTDgQFGCAkKVAxg4FJWaLUhWxFZphPP"
        ],
        "license": "MIT"
      },
      "lib/cowprotocol/src/contracts/libraries/SafeMath.sol": {
        "keccak256": "0x5be2c9bf446b9cf76f2c8ce6f3a4e350b588cf794bd274d1d1f18f9907924710",
        "urls": [
          "bzz-raw://14a94812f09c5a2213a1af1ab7be15ff0d9000376d93205a19b7eec1e00e6874",
          "dweb:/ipfs/QmPD6Rh7MmyuaBTksnz2idXsqzXUtPaHariiUPFnrCoJu7"
        ],
        "license": "MIT"
      },
      "lib/cowprotocol/src/contracts/mixins/GPv2Signing.sol": {
        "keccak256": "0x32351a830456c755d4f4c24180f5d54afc3141e7f1cedba575407ea7a96abdc0",
        "urls": [
          "bzz-raw://e55fc7d29fb7d740181bc790f33308d810950854d357ee17e5c410cc2c273d92",
          "dweb:/ipfs/QmbBhUM8YFHYyEonG5Xa6WsFXkvGXpWceC7zTJeCUnSSe1"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/mixins/Initializable.sol": {
        "keccak256": "0x0d276edcca6013d50d3ee7d3136e9b3a1ccaf26d481435e76c2331a43b99b8c7",
        "urls": [
          "bzz-raw://e795a7365456e5f071e26469542c4a5e301d3040015d3a565ececcc5ad4fadf6",
          "dweb:/ipfs/QmNreE682mqhovoTuNGfMDMiRr1Sfg1gWVNsquddsE4G9V"
        ],
        "license": "MIT"
      },
      "lib/cowprotocol/src/contracts/mixins/ReentrancyGuard.sol": {
        "keccak256": "0xa18086f1819346a9c89daf6abab56df2818fabcf87e8e606e5fedb207ff2d7a0",
        "urls": [
          "bzz-raw://168b99215387727d51f66314e60ad5c90d8e2d7d8c1557433af1a3b1d1c3931e",
          "dweb:/ipfs/QmaCsMr7dzRS827c5JXwyVgT7wuePwYTNH76w49dcqALN2"
        ],
        "license": "MIT"
      },
      "lib/cowprotocol/src/contracts/mixins/StorageAccessible.sol": {
        "keccak256": "0xebf1b3d1f101deac9c85b6c04b32a59c3fb5bc92445a205c33fa4f6c3e2694b8",
        "urls": [
          "bzz-raw://4bc9f0cc4b2949a8301eccac1b4dab27ab104ab11a662be2682818e0d8a6990b",
          "dweb:/ipfs/QmZACELQ2C9RSyoNSuBEiHi17RvCwp3X8p9vo2oSZ9eqhe"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154",
        "urls": [
          "bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749",
          "dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b",
        "urls": [
          "bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17",
          "dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99",
        "urls": [
          "bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab",
          "dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96",
        "urls": [
          "bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef",
          "dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/murky/src/Merkle.sol": {
        "keccak256": "0x70e50a6d61ea806b5ba0c8ff76fadfa3e90e6dfecb6900b1c0492eac0309660f",
        "urls": [
          "bzz-raw://b6cc1b02a6d11e029fe24d5d638ad891a3a2552aaef9d3a0918274b1496fcd74",
          "dweb:/ipfs/QmWsU7yXsyKATkfYb8g1jbPTbgGsCg9rk7bJ3ypCYxQixB"
        ],
        "license": "MIT"
      },
      "lib/murky/src/common/MurkyBase.sol": {
        "keccak256": "0x5287741b2b215c9a11cc8482b419abde0625dfc3949d539c72ee498108842894",
        "urls": [
          "bzz-raw://259e803b0811e404bba09237bce4ef42f2ff27dacaca770d1eb7c1afddbf762b",
          "dweb:/ipfs/QmWfbsHa1siBxDEqFmbnzUuZqyitFZHmDXo2vc4cVn4uJe"
        ],
        "license": "MIT"
      },
      "lib/safe/contracts/Safe.sol": {
        "keccak256": "0xbab2f7bec33283e349342e7b23f5191c678c64fe02065bac4f4f44fb3f5d2638",
        "urls": [
          "bzz-raw://f95884e85691d49ba3efb9b2a160466fed17377bfa92fc8bf5923f3c61e99119",
          "dweb:/ipfs/QmQjhP9RnB3Cj3DNpWLzWqqvRdKBya6Efx6xzmRrwLqjm9"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/base/Executor.sol": {
        "keccak256": "0xf0be832e7529e92000544170a5529d73666a9b5e836b30c6f2ed6ef7d7d8c94a",
        "urls": [
          "bzz-raw://710022b40c9f78a5b55b97f6ce600e4834df2ddd36bf714974d953883c82d58c",
          "dweb:/ipfs/QmbdJNKH5opevm7HxQKQAe6W7dQTgSHKa4nKvbUNGRcQQp"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/base/FallbackManager.sol": {
        "keccak256": "0x646b3088f15af8b4f71ac5eeffaa24ce0c1abed5f494f90368208b09e35d5165",
        "urls": [
          "bzz-raw://7975be46d228510c70659b18076aecb3b0e7331b4d3a162444304145143bdc6e",
          "dweb:/ipfs/QmRRbZrWUnoky6pVo8zMUzCTsshR4sZ2FjR13s8vyAb8dV"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/base/GuardManager.sol": {
        "keccak256": "0xedfc7c830ab35e52d1208986b253f3422c2f0ca68054c10819fb348fcc6ccf5d",
        "urls": [
          "bzz-raw://3ff8a4194d1160d2e23142937bc9d7eac7b6b553b1ee226390a0df07ebac1b64",
          "dweb:/ipfs/QmSw8Y7z4TQrUTEosdWqcug7TUv9Tg1kxqMKHd7RuTnyzx"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/base/ModuleManager.sol": {
        "keccak256": "0xd71b0d56dce386fa6f67c51061face071b2c7b03ec535d68717e2538ec47113a",
        "urls": [
          "bzz-raw://30812896d9f57cae84a432c67fbb3007d566071ec203b2992f1c0f762722df0d",
          "dweb:/ipfs/QmRyJ3JbsUwDQxQDTrqDDX4qNtVu7XiW8cD8WP5kgNJGGz"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/base/OwnerManager.sol": {
        "keccak256": "0xec9799093eb7a73461cd5e563198751ee222f956f754ea622a03fe953e515b2c",
        "urls": [
          "bzz-raw://5729c58b14e7b656c71dd3377e9519c0d34ef8c04851a9a21c3d62393e4fae7a",
          "dweb:/ipfs/QmRRtfFpNqvdANny9TYBr8rA3HbT1egUCpb2uXALMHkVxK"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/Enum.sol": {
        "keccak256": "0x4ff3008926a118e9f36e6747facc39dd13168e0d00f516888ae966ec20766453",
        "urls": [
          "bzz-raw://385929800d1c0f92eb165fcf37a9e28b395b17d8b74f74755654d3a096a0fc34",
          "dweb:/ipfs/QmagieLuN2jrp2oJHFyZuyz65Sh1CcupnXSEKypGFS5Gvo"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/NativeCurrencyPaymentFallback.sol": {
        "keccak256": "0x3ddcd4130c67326033dcf773d2d87d7147e3a8386993ea3ab3f1c38da406adba",
        "urls": [
          "bzz-raw://740a729397b6a0d903f4738a50e856d4e5039555024937b148d97529525dbfa9",
          "dweb:/ipfs/QmQJuNVvHbkeJ6jjd75D8FsZBPXH6neoGBZdQgtsA82E7g"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/SecuredTokenTransfer.sol": {
        "keccak256": "0x1eb8c3601538b73dd6a823ac4fca49bb8adc97d1302a936622156636c971eb05",
        "urls": [
          "bzz-raw://c26495b1fe9229ea17f90b70f295030880d629b9ea3016ea20b634983865f7b3",
          "dweb:/ipfs/QmTc1UmKcynkKn8DeviLMuy6scxNvAVSdLoX4ndUtdEL9N"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/SelfAuthorized.sol": {
        "keccak256": "0xfb0e176bb208e047a234fe757e2acd13787e27879570b8544547ac787feb5f13",
        "urls": [
          "bzz-raw://8e9a317f0c3c02ab1d6c38039bff2b3e0c97f4dc9d229d3d9149c1af1c5023b3",
          "dweb:/ipfs/QmNcZjNChsuXF34T6f3Zu7i3tnqvKN4NyWBWZ4tXLH9kMu"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/SignatureDecoder.sol": {
        "keccak256": "0x2a3baf0efa1585ddf2276505c6d34fa16f01cafff1288e40110d5e67fb459c7c",
        "urls": [
          "bzz-raw://00cdded3068b9051ee0a966f40926fbc57dbe7ef8bf4285db3740f9d50468c80",
          "dweb:/ipfs/QmcP5hKmaRqBe7TpgoXtncZqsNKKdCCKxZgXoxEL4Nj5F4"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/Singleton.sol": {
        "keccak256": "0xcab7c6e5fb6d7295a9343f72fec26a2f632ddfe220a6f267b5c5a1eb2f9bce50",
        "urls": [
          "bzz-raw://dd1c31d5787ef590a60f6b0dbc74d09e6fe4d3ad2f0529940d662bf315521cde",
          "dweb:/ipfs/QmSAS5DYrGksJe4cPQ4wLrveXa1CjxAuEiohcLpPG5h2bo"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/StorageAccessible.sol": {
        "keccak256": "0x2c5412a8f014db332322a6b24ee3cedce15dca17a721ae49fdef368568d4391e",
        "urls": [
          "bzz-raw://e775f267d3e60ebe452d9533f46a0eb1f1dc4593d1bcb553e86cea205a5f361e",
          "dweb:/ipfs/QmQdYDHGQsiMx1AADWRhX7tduU9ycTzrT5q3zBWvphXzKZ"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/external/SafeMath.sol": {
        "keccak256": "0x5f856674d9be11344c5899deb43364e19baa75bc881cada4c159938270b2bd89",
        "urls": [
          "bzz-raw://351c66e5fe92c0a51f79d133521545dabdd3f756312a7b1428c1fc813c512a1c",
          "dweb:/ipfs/QmdnrRmgef8SdamEU6fVEqFD5RQwXeDFTfQuZEfX2vxC4x"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/CompatibilityFallbackHandler.sol": {
        "keccak256": "0x3eee5c142041e92895d45f8e9acb9ac2203b0ac39418e8d2971e78bf0775bcf7",
        "urls": [
          "bzz-raw://6ca95ba88f388a206e14ea0ac2c4a2bb0b60b83a619d1dd3d61772588394fa07",
          "dweb:/ipfs/QmbhhRhBP4n9TVLohTV4GtESeRsumrk4JduLG7DwbBrtxH"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/ExtensibleFallbackHandler.sol": {
        "keccak256": "0x7e511290dae21c9b1710c9250320d9b98ffd71c9501af354814485b58e1b64e9",
        "urls": [
          "bzz-raw://3e55ba23bde90d2cdd07baa7172ea41bdc1d638bc7b6eb5dce03189d86412515",
          "dweb:/ipfs/QmbxH73sqooeQL8ehsP2FDoXhLBoPs3wr3nod6ZgJwVcFV"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/HandlerContext.sol": {
        "keccak256": "0x3e105ebac003af9c8d34e3eed517ff0355d5f487e17478c85df0f225b04846f5",
        "urls": [
          "bzz-raw://657bec347d746453883c461a3d9a2275bf2b99625dcaef0960e1c0276c3d56c4",
          "dweb:/ipfs/QmUGj8Tzs1CsmUf63LbTMK81EEGtYYnWKLGdHHtoYCd9CF"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/TokenCallbackHandler.sol": {
        "keccak256": "0xc8fb9e60f5e561c7e4992a396e928344c278c2fbec8af65aebec44281542e7cb",
        "urls": [
          "bzz-raw://e197c9a628bdce9a1df8da8ba07733ce0e8b5496a28a22a370dec979104c79da",
          "dweb:/ipfs/QmUx8YhmT22YZYEXp2bVNR91hSb9w5qjAkzGiFy6DRNpdu"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/extensible/Base.sol": {
        "keccak256": "0xe5b71121b0020728158ee60756982e74809f9d77cb294a6d65930bff09d84d15",
        "urls": [
          "bzz-raw://fd7fd2702b31fc8569a9986a476dd9fe9aa76624d0da6d832547f624426925f9",
          "dweb:/ipfs/QmWjYGtW38Fnwvm8qFvoJYhz2nTuySGkHouwRF3eksd6Nh"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/extensible/ERC165Handler.sol": {
        "keccak256": "0x6e19ba1deb09a34cca28891bfefd853697b808dfb8a9cddd4051d3058d3eb718",
        "urls": [
          "bzz-raw://0b1059e752bd142160a4fbe8ee08377a50902d31b8b909df002480d191af0cf4",
          "dweb:/ipfs/QmbuUmvgoodsZGgqR793duEWF5t7h6USAXfpr2N1VvBmeP"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/extensible/FallbackHandler.sol": {
        "keccak256": "0xbe7db6cbdb034c9aee1eae12200ab2e94fa4743ae08dbba2f1a001c4b62f3e0b",
        "urls": [
          "bzz-raw://4fbba0ea04349873b38f7c7104d0a88ffd6e7ec399a3fdd0e1297ce12eebb19e",
          "dweb:/ipfs/QmYiDukcX2y7ratxsMX6hLMKzGQTD67CKLpuiSpgm1HGue"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/extensible/MarshalLib.sol": {
        "keccak256": "0x531476118b7948b06a0c7094badd6f1ae33ae2ddca815110030e87ee62c4a895",
        "urls": [
          "bzz-raw://f21ad2619b5bcbc977c5943d2f668e8bfb9ef6968db1193415e046171a5a150a",
          "dweb:/ipfs/QmYZeu3vr6eRWjeYp8GvWSVRLm9baFbTyEGgAy2hMAqbLX"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/extensible/SignatureVerifierMuxer.sol": {
        "keccak256": "0xc60a1d55ff0cf532a44bd864683719e3d6e1fa6d20d4c77812e21c33afecf304",
        "urls": [
          "bzz-raw://298c7efe668a4ca8d3b712770973931d604c84304aececd621f0350d7d293b68",
          "dweb:/ipfs/QmVcNdQ7ZsnmDgSX8TFRLHk4HZUXH86u2akAM5q3g1PFfZ"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/extensible/TokenCallbacks.sol": {
        "keccak256": "0xfb0f8f01a7191ab358f196a7e055441ede00f36805f12c579a742a5cd3c4f8d7",
        "urls": [
          "bzz-raw://0d485ea9fc430a89953ffe2d2c7032b5a330f086bbb784e81eb6b00a692f6438",
          "dweb:/ipfs/QmNofKrkU9VTtGMN9Rc6js2jyUscSFxce8kjBz5rZL4RSJ"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/interfaces/ERC1155TokenReceiver.sol": {
        "keccak256": "0x87e62665c041cade64e753ecdccf931cb100ab6e4bcc98769c1e6474be9db493",
        "urls": [
          "bzz-raw://59ca1157dcfe19c72b9d1244a6ae5ec70fee9793d4d8af523b70f22ae567d55c",
          "dweb:/ipfs/QmfE3kv73QuQWAWQND927LWVHVLCp19m1mLUvxVYJDEFZM"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/interfaces/ERC721TokenReceiver.sol": {
        "keccak256": "0x96c4c5457fede2d4c6012011dfda36f8e8ffdb7388468f2dddb35661538bf479",
        "urls": [
          "bzz-raw://99a54737bc23722f79ec9cf9de63ba35b556a61df453eb332f3cac783503f26c",
          "dweb:/ipfs/QmbLW5C2RhoLbwDWEPtTKpyYE5apT9B3q4U11PZG3wSM1n"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/interfaces/ERC777TokensRecipient.sol": {
        "keccak256": "0x32ca7f1610659f35e52f5a989e1d844b7847ad57fab06e0cae5bc027248536ac",
        "urls": [
          "bzz-raw://9082896ec697e320087b1a682b69a5cdf71b33a2f7a956e2fb6054f9f9d56d06",
          "dweb:/ipfs/QmUu7iNkQNvvqBPbbxuhqiQpYPYYnfsyPEsf4AMQFANXFZ"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x779ed3893a8812e383670b755f65c7727e9343dadaa4d7a4aa7f4aa35d859fdb",
        "urls": [
          "bzz-raw://bb2039e1459ace1e68761e873632fc339866332f9f5ecb7452a0bc3a3b847e89",
          "dweb:/ipfs/QmYXvDQXJnDkXFvsvKLyZXaAv4x42qvtbtmwHftP4RKX38"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/interfaces/ISignatureValidator.sol": {
        "keccak256": "0x2459cb3ed73ecb80e1e7a6508d09a58cc59570b049f77042f669dedfcc5f6457",
        "urls": [
          "bzz-raw://3c4a1371948b11f78171bc4ae4fd169a1eec11e5c4b273eb2c54bc030a1aae25",
          "dweb:/ipfs/QmPuztatXZYVS65n8YbCyccJFZYPP6zQfBQ8tTY27pB978"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/libraries/MultiSend.sol": {
        "keccak256": "0x030bc8f4195cc8cba16efacba3da6870188af2d4b44d739de5d25e01e1473f9f",
        "urls": [
          "bzz-raw://e5a332517a4c7f249ba69f98c093cb61ffe9e1c059699c327c6e2548ac9c7bd3",
          "dweb:/ipfs/QmZHu8bW9cG7EyAzhq7VxrTx6AZnQ5CUL6bSwvM5aUwhQF"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/libraries/SafeStorage.sol": {
        "keccak256": "0xae0c704f3e4ec6b1436bbbd10b153feaa665ac36e556ccc4f2155e4c02f5c46a",
        "urls": [
          "bzz-raw://f2c67b22791022356f5ca85533ecdda740aa8d5c9ed263d0c2761f2560dd1b87",
          "dweb:/ipfs/QmYf6gm89StvSTgZGR83UgSmUgJGjhGbBRRNvmxwywfiMc"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/libraries/SignMessageLib.sol": {
        "keccak256": "0x012c0c71e1bd8a1f82c0668151d5ff9dae07ab37098cd4eafd2e5099764891c3",
        "urls": [
          "bzz-raw://cdc484c399f00913f29280f8c86e2f8b886dd42de95d9ea0c572847b47a4e4dd",
          "dweb:/ipfs/QmaUDZHn56ECGbkAWiBXxsvJ2dYBZe745h34svZ7NcSssC"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/proxies/IProxyCreationCallback.sol": {
        "keccak256": "0xf5410c842c1bbff96a2047b31f5437a9dc5183d004ab1fc9f952220f11379602",
        "urls": [
          "bzz-raw://0ac1fa0c7d6fc683384a3ce0b328c66adcc53b6a3e59d3b67c62404dd57c3099",
          "dweb:/ipfs/QmcVvxtcjZqyQwQcU4cPU4SZZ2LEahsmVWgJWGh5n8EHa7"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/proxies/SafeProxy.sol": {
        "keccak256": "0x5dccbe86285c1d4c4b2fed0ae8007620c3186d22411f43feecfbf8a028e5c7e2",
        "urls": [
          "bzz-raw://a1a02d01a92895110505e141d05b0924ea457a25b89a161f0aeedf6b5cb41aec",
          "dweb:/ipfs/QmYWEsFbWwtrVvEF9MNQtf4X3Qt13dAE8o44tEyAS9jmKP"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/proxies/SafeProxyFactory.sol": {
        "keccak256": "0xdc68ce6d07d02723fcdde9f115c976d78bc599667b4f9d08e6cda50f51949533",
        "urls": [
          "bzz-raw://0389c45311e383f0a27a928594341da67f061bf88795aafdbfb5e8449416fc26",
          "dweb:/ipfs/QmZXmXReN6uro3RAbh661G6LqfMEMeaLKRVoeJr5nx1tnh"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/BaseConditionalOrder.sol": {
        "keccak256": "0x510558386b92b1d5961d8158ae6e3288a1d520c03123d109042a5ec3290b9588",
        "urls": [
          "bzz-raw://e071465250cbc11d946f422f4ff774d757291cac00f4c69fbac1d1e34cdae402",
          "dweb:/ipfs/QmUF2qNwJhvs3GeWmsWnL6y21eL6mb3QEW7EPYY7NZc25v"
        ],
        "license": "MIT"
      },
      "src/ComposableCoW.sol": {
        "keccak256": "0x565c6fabc8a1e185acfb4539baeb7e3cabb004b54da2c777cbdbb3c98dbd6a52",
        "urls": [
          "bzz-raw://2b876b6b4a69f69b7f9445e67a0e60dd7a65f028d54ba9c4c8c983a00ee23642",
          "dweb:/ipfs/Qmf95tsR515WFv2yBKp4NzhFc9xvfZRtS194Lq7SY2r7zC"
        ],
        "license": "GPL-3.0"
      },
      "src/ERC1271Forwarder.sol": {
        "keccak256": "0x83a89cb999a3c696191cc1dfad1a5b836da32271a7ef56917e8e26fe424b4ac8",
        "urls": [
          "bzz-raw://fd3de29eafff43395792fcc3604d5f13d51cbdbd847d9456317567f88b380090",
          "dweb:/ipfs/QmbGckj65uXkF9SaSPvjKZXx9jZWYwtwbDdD8V6vqL4sye"
        ],
        "license": "GPL-3.0"
      },
      "src/guards/BaseSwapGuard.sol": {
        "keccak256": "0xd7b2a2629504bf5d331c4fa21f5b5e11584c11bb1e51ba687b37eed459f2bacb",
        "urls": [
          "bzz-raw://5555cfec57b3b95f15bb7d5b364baf0998f97cefd9f3744d804d5c7cbd6d6ccc",
          "dweb:/ipfs/QmWojLCbP41KcaHaNWv667qKgFBW9K797tzUskfpBdiA6Y"
        ],
        "license": "GPL-3.0"
      },
      "src/guards/ReceiverLock.sol": {
        "keccak256": "0x6dd5033473ca3264bbef0d703d29f6c10488d36b69fe1d924f071e412369f8c3",
        "urls": [
          "bzz-raw://954572256b96d72a47ba02657b426474d12541ad0942618f28dc732bfc8737f9",
          "dweb:/ipfs/Qmdi8pxjLbxDWufBs4JS2PpkoHfDje447PNfnBQZy52i2g"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IConditionalOrder.sol": {
        "keccak256": "0x52c9a2b5d5cc7345fe4b4c039af88c5621bc7c6059534cc7c76b77833aafae7b",
        "urls": [
          "bzz-raw://1660e1510b82216e38b669f16b69f4a37b012b00655d0fc6794e4d77d2182699",
          "dweb:/ipfs/QmNiZ7rMT74sKT9d6SUEnKXiWjaYLL8nAzSdLBXBAzYNmZ"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISwapGuard.sol": {
        "keccak256": "0x60abdef709d22cb95e4b1d4680cb70d5286cfb5aa71ec65868cc44164ef8790f",
        "urls": [
          "bzz-raw://7593245e22ffc533a073891affdbb003fa56eaa5ef7f0202a673b52968ad7ed5",
          "dweb:/ipfs/QmRhAvNzbHp8qfrw7eHZP6EDWw42tXMXSV3KuyhyxFy3Nx"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IValueFactory.sol": {
        "keccak256": "0x3304ef8a0a1727258ac8278bf5426daeac37ece4653eaaff87b15143814a8122",
        "urls": [
          "bzz-raw://9934d278069dd9474065777833a81e65af227b85d350b6c1f012b812101be9de",
          "dweb:/ipfs/QmcMBdvY7wLs92FCyutDGQGtHnYryjnaykREvDNBNM8Yih"
        ],
        "license": "GPL-3.0"
      },
      "src/types/ConditionalOrdersUtilsLib.sol": {
        "keccak256": "0x38e4ce4fc58c018f510ee45d78ae49253e8aa70fdf559d83ebb6c838c6b47aae",
        "urls": [
          "bzz-raw://a38ccd5b8ce2895a77b7474b1ac36ebfccc975b3839f6d3bfef72700f8f6f777",
          "dweb:/ipfs/QmSfs5zZ4U14NkZYSqAFUBcuKGjyfMM5Dp2sbj14FmVYPf"
        ],
        "license": "MIT"
      },
      "src/types/GoodAfterTime.sol": {
        "keccak256": "0x5c6c0aa4d3eec87053b8b1b80957cc64efcffa2fcb68a35f1c7f8332a2884643",
        "urls": [
          "bzz-raw://ae24374d4c5a47713e45d1ef31697708619af6325db73267088ebcd026ac2bc8",
          "dweb:/ipfs/QmciGxpggSCkkAuavUQhmUisi29sohSDVvkZ4a4YBgrSDm"
        ],
        "license": "GPL-3.0"
      },
      "src/types/twap/TWAP.sol": {
        "keccak256": "0x009eb71fc8e7f782e6d0d65f87188c530106ba4f1f8d5f6bf3a165e34710e611",
        "urls": [
          "bzz-raw://1634e714b4f7c7217f407b253b7eb3be06585213b3d2c69ddc495183cbe97a0f",
          "dweb:/ipfs/QmUjV8ivqgVfmVRDbJpKUGzxkFEGHZKCtAopYrYeyvyWKR"
        ],
        "license": "GPL-3.0"
      },
      "src/types/twap/libraries/TWAPOrder.sol": {
        "keccak256": "0x5f17b26cd0f9d5cdc6451515852dd9d1d7f7b24aeab8c6d375fa68c20243f2e3",
        "urls": [
          "bzz-raw://fafbf95d8a428145e490fd378cda74e9d4ebc2aa566faa19a7a04c6080dec166",
          "dweb:/ipfs/QmU9exeSmHJcmCriXD9oQ9c8cAtWHtnM9AYQNbeJyr8HSb"
        ],
        "license": "GPL-3.0"
      },
      "src/types/twap/libraries/TWAPOrderMathLib.sol": {
        "keccak256": "0x9cb5263a1b8689b6ff59b9bcd14de0d031d8ed7efef56080f32b80c6f15e8d68",
        "urls": [
          "bzz-raw://d0411cab6f65fc3ab6415f9009d6a1ba0eda0348c66c09a9937fb261cc4c18a9",
          "dweb:/ipfs/QmSdo9dtkteSATZbd8SJcE4M3bLiFZjebHhSsPmV8NZhfG"
        ],
        "license": "GPL-3.0"
      },
      "src/vendored/CoWSettlement.sol": {
        "keccak256": "0x4e4e317b24017cd87eb11d16368b8c06ec19306d31946c330a86f9f136df38d7",
        "urls": [
          "bzz-raw://34b9b2fc2c89e60497457cd812da9c53718c15ddfbf70f6e11832d22092c1840",
          "dweb:/ipfs/QmYFzaynWZfdpmFRf2dZrQ32Ep53AtQDd5fTE3a89xVkaR"
        ],
        "license": "MIT"
      },
      "src/vendored/Milkman.sol": {
        "keccak256": "0x7795717dc0007aea88681ea4a2a84a32db865d97b59513ff77d00c879fb15b66",
        "urls": [
          "bzz-raw://90628089a4a76a7e8ef0319425f15d974543383c5f875638fba315d24c4bc753",
          "dweb:/ipfs/Qmb7yJyxQJvmx6uQ1z9ptzJ1X7W58LPFH8pTicDfyNzyZQ"
        ],
        "license": "MIT"
      },
      "test/Base.t.sol": {
        "keccak256": "0x78797f634316b9ce37bf9beb94059a4bc6e50904ffde0ca200d03307df1cb3b5",
        "urls": [
          "bzz-raw://85e52033c3e008d997e042f9d3b991fd70c84062cfd026456e916b76a3a8a1e7",
          "dweb:/ipfs/QmNzPATpfEE6zjDuvsfCJGkyC38WG5ikhwR3FRw8HiWLMW"
        ],
        "license": "GPL-3.0"
      },
      "test/ComposableCoW.base.t.sol": {
        "keccak256": "0x0221e914be81f396e786202ac4931e9666ccd42ce9c9da50dbb4be648414ea27",
        "urls": [
          "bzz-raw://1630e1ee69a26aed1cdd8229fd6622b631790af6c8f1908da814ca446510e8ad",
          "dweb:/ipfs/QmVXGddGfEbxTgr9nRbnB7RZ57os3vmFbCo75zv1ALPJSv"
        ],
        "license": "GPL-3.0"
      },
      "test/helpers/CoWProtocol.t.sol": {
        "keccak256": "0x7874033133e2c08fecfaf6ef298819574c9ff486bdc95281f39c68adf7968ed8",
        "urls": [
          "bzz-raw://2fc4f27186500ca09fb26f9a929238de8bb9a0cf2673fde20c00060bbfa5ec9b",
          "dweb:/ipfs/QmR4nsGvkmiHkFh7uoVxrmPdGLMedkHXJrcJ5g2HvwVBY8"
        ],
        "license": "GPL-3.0"
      },
      "test/helpers/Safe.t.sol": {
        "keccak256": "0xd86abebc65577511beb1ddd3d0309c1e317ff66cb2d9e04c5dee6314aade1329",
        "urls": [
          "bzz-raw://849077d670c0d7e37d416ca7dc50abc5413e08655c84a585d1e720df4ace951a",
          "dweb:/ipfs/QmdNYYbqhy3Ky5j9ky76k3yy8sBjMZb2tErtvwYj6nBNdZ"
        ],
        "license": "GPL-3.0"
      },
      "test/helpers/Tokens.t.sol": {
        "keccak256": "0xf83e7af950879ef2e9a9439baac229d54d4e2c0010de0c31fe50e2819d80cbf5",
        "urls": [
          "bzz-raw://76970644dbc6fbc90e2f7cd1c188d5e01627549f8d1c44dfed732f666b3da825",
          "dweb:/ipfs/QmQHzKBLoHNshpKmX2cBFvwC1LBpKeRPdpyDmNt7Yp5TN4"
        ],
        "license": "GPL-3.0"
      },
      "test/libraries/ComposableCoWLib.t.sol": {
        "keccak256": "0xb2181249ce7534d28d53b75f2a8a3740c6483c0a724c6fc50c57a6fe6cf0a909",
        "urls": [
          "bzz-raw://8375f3182ed1f694adac87bfded1a139069e3d94c5c2d3a2185f0e18ff6fdd85",
          "dweb:/ipfs/QmaucPxncoTpjwHF13yXc1D2p1abuoctww1syqkVxVS9uq"
        ],
        "license": "GPL-3.0"
      },
      "test/libraries/SafeLib.t.sol": {
        "keccak256": "0x58495cf250d0de3ebef0b7516a61207b7a08942d25187a889ee46931a5047a35",
        "urls": [
          "bzz-raw://ea524df2b48cae29a60080490d3ee42f369e064ac28dd78dcf00b47aeec76d52",
          "dweb:/ipfs/QmXzdHC78e6EVTGJSDxtKsjHqaFDGLJyNALCKUYdQDDBG4"
        ],
        "license": "GPL-3.0"
      },
      "test/libraries/TestAccountLib.t.sol": {
        "keccak256": "0x09d3b4eabab8125d3cc1abaa86bfebe04545972c2a12c62a6ed9bedabef07c96",
        "urls": [
          "bzz-raw://af9a65f26bafb1c90ee17d74992859d0a45c5baf02771878660cfab6c063175c",
          "dweb:/ipfs/QmVWH8gcWTGsEd1goFwTobwhcFkoGeuqjFG2N7fKFEkeng"
        ],
        "license": "GPL-3.0"
      },
      "test/vendored/GPv2TradeEncoder.sol": {
        "keccak256": "0x16e3fb0aa82122c4defea77a9678f936a3ed0e719dbe4785b902f1dfdd45d12f",
        "urls": [
          "bzz-raw://104d08d69f24fb5780359c1b38f7501b8c6f78c4e528b8e07cd49bb1fac382c9",
          "dweb:/ipfs/QmQtRfvwyKx6fdwxp7YQa9XRRvZ5q2gm5GDbtST4wCy3qM"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/ComposableCoW.base.t.sol",
    "id": 57210,
    "exportedSymbols": {
      "Base": [
        56302
      ],
      "BaseComposableCoWTest": [
        57076
      ],
      "BaseConditionalOrder": [
        53571
      ],
      "BaseGuard": [
        49013
      ],
      "BaseSwapGuard": [
        54384
      ],
      "CoWSettlement": [
        56042
      ],
      "ComposableCoW": [
        54247
      ],
      "ComposableCoWLib": [
        65885
      ],
      "DSTest": [
        20760
      ],
      "EIP712": [
        52037
      ],
      "ERC1155TokenReceiver": [
        52147
      ],
      "ERC1271": [
        51612
      ],
      "ERC1271Forwarder": [
        54353
      ],
      "ERC165Handler": [
        51370
      ],
      "ERC721TokenReceiver": [
        52165
      ],
      "Enum": [
        50021
      ],
      "Executor": [
        48884
      ],
      "ExtensibleBase": [
        51012
      ],
      "ExtensibleFallbackHandler": [
        50607
      ],
      "FallbackHandler": [
        51492
      ],
      "FallbackManager": [
        48946
      ],
      "GPv2Interaction": [
        17090
      ],
      "GPv2Order": [
        17246
      ],
      "GoodAfterTime": [
        54881
      ],
      "Guard": [
        48987
      ],
      "GuardManager": [
        49075
      ],
      "HandlerContext": [
        50638
      ],
      "IConditionalOrder": [
        54507
      ],
      "IConditionalOrderGenerator": [
        54538
      ],
      "IERC165": [
        52197
      ],
      "IERC165Handler": [
        51051
      ],
      "IERC20": [
        670
      ],
      "IERC20Metadata": [
        695
      ],
      "IFallbackHandler": [
        51381
      ],
      "IFallbackMethod": [
        50786
      ],
      "INVALID_HASH": [
        53472
      ],
      "ISafeSignatureVerifier": [
        51635
      ],
      "ISignatureValidator": [
        52216
      ],
      "ISignatureValidatorConstants": [
        52203
      ],
      "ISignatureVerifierMuxer": [
        51655
      ],
      "IStaticFallbackMethod": [
        50801
      ],
      "ISwapGuard": [
        54566
      ],
      "IValueFactory": [
        54578
      ],
      "MarshalLib": [
        51598
      ],
      "Merkle": [
        47419
      ],
      "MerkleProof": [
        1245
      ],
      "MirrorConditionalOrder": [
        57209
      ],
      "ModuleManager": [
        49501
      ],
      "NativeCurrencyPaymentFallback": [
        50043
      ],
      "OwnerManager": [
        50014
      ],
      "ReceiverLock": [
        54417
      ],
      "Safe": [
        48851
      ],
      "SafeLib": [
        66138
      ],
      "SafeMath": [
        50277
      ],
      "SecuredTokenTransfer": [
        50070
      ],
      "SelfAuthorized": [
        50096
      ],
      "SignatureDecoder": [
        50116
      ],
      "SignatureVerifierMuxer": [
        52004
      ],
      "Singleton": [
        50122
      ],
      "StdAssertions": [
        22271
      ],
      "StdChains": [
        22965
      ],
      "StdCheats": [
        25216
      ],
      "StdInvariant": [
        25506
      ],
      "StdStorage": [
        26256
      ],
      "StdStyle": [
        28900
      ],
      "StdUtils": [
        29707
      ],
      "StorageAccessible": [
        50171
      ],
      "TWAP": [
        55609
      ],
      "TWAPOrder": [
        55878
      ],
      "Test": [
        29756
      ],
      "TestAccount": [
        66146
      ],
      "TestAccountLib": [
        66312
      ],
      "TestBase": [
        20820
      ],
      "TestConditionalOrderGenerator": [
        57167
      ],
      "TestContextSpecifyValue": [
        57096
      ],
      "TestNonSafeWallet": [
        57182
      ],
      "TestSwapGuard": [
        57135
      ],
      "TokenCallbacks": [
        52110
      ],
      "Vm": [
        31076
      ],
      "console": [
        39140
      ],
      "console2": [
        47236
      ],
      "stdError": [
        25282
      ],
      "stdJson": [
        26082
      ],
      "stdMath": [
        26224
      ],
      "stdStorage": [
        27689
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:10741:156",
    "nodes": [
      {
        "id": 56304,
        "nodeType": "PragmaDirective",
        "src": "36:31:156",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 56305,
        "nodeType": "ImportDirective",
        "src": "69:28:156",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57210,
        "sourceUnit": 29757,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 56308,
        "nodeType": "ImportDirective",
        "src": "99:83:156",
        "nodes": [],
        "absolutePath": "lib/@openzeppelin/contracts/interfaces/IERC20Metadata.sol",
        "file": "@openzeppelin/interfaces/IERC20Metadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57210,
        "sourceUnit": 6,
        "symbolAliases": [
          {
            "foreign": {
              "id": 56306,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 670,
              "src": "107:6:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 56307,
              "name": "IERC20Metadata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 695,
              "src": "115:14:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 56310,
        "nodeType": "ImportDirective",
        "src": "183:40:156",
        "nodes": [],
        "absolutePath": "lib/murky/src/Merkle.sol",
        "file": "murky/Merkle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57210,
        "sourceUnit": 47420,
        "symbolAliases": [
          {
            "foreign": {
              "id": 56309,
              "name": "Merkle",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47419,
              "src": "191:6:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 56311,
        "nodeType": "ImportDirective",
        "src": "225:23:156",
        "nodes": [],
        "absolutePath": "lib/safe/contracts/Safe.sol",
        "file": "safe/Safe.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57210,
        "sourceUnit": 48852,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 56313,
        "nodeType": "ImportDirective",
        "src": "271:34:156",
        "nodes": [],
        "absolutePath": "test/Base.t.sol",
        "file": "./Base.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57210,
        "sourceUnit": 56303,
        "symbolAliases": [
          {
            "foreign": {
              "id": 56312,
              "name": "Base",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56302,
              "src": "279:4:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 56316,
        "nodeType": "ImportDirective",
        "src": "306:77:156",
        "nodes": [],
        "absolutePath": "test/libraries/TestAccountLib.t.sol",
        "file": "./libraries/TestAccountLib.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57210,
        "sourceUnit": 66313,
        "symbolAliases": [
          {
            "foreign": {
              "id": 56314,
              "name": "TestAccount",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66146,
              "src": "314:11:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 56315,
              "name": "TestAccountLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66312,
              "src": "327:14:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 56318,
        "nodeType": "ImportDirective",
        "src": "384:50:156",
        "nodes": [],
        "absolutePath": "test/libraries/SafeLib.t.sol",
        "file": "./libraries/SafeLib.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57210,
        "sourceUnit": 66139,
        "symbolAliases": [
          {
            "foreign": {
              "id": 56317,
              "name": "SafeLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66138,
              "src": "392:7:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 56320,
        "nodeType": "ImportDirective",
        "src": "435:68:156",
        "nodes": [],
        "absolutePath": "test/libraries/ComposableCoWLib.t.sol",
        "file": "./libraries/ComposableCoWLib.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57210,
        "sourceUnit": 65886,
        "symbolAliases": [
          {
            "foreign": {
              "id": 56319,
              "name": "ComposableCoWLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65885,
              "src": "443:16:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 56321,
        "nodeType": "ImportDirective",
        "src": "505:41:156",
        "nodes": [],
        "absolutePath": "src/BaseConditionalOrder.sol",
        "file": "../src/BaseConditionalOrder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57210,
        "sourceUnit": 53572,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 56323,
        "nodeType": "ImportDirective",
        "src": "547:62:156",
        "nodes": [],
        "absolutePath": "src/guards/BaseSwapGuard.sol",
        "file": "../src/guards/BaseSwapGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57210,
        "sourceUnit": 54385,
        "symbolAliases": [
          {
            "foreign": {
              "id": 56322,
              "name": "BaseSwapGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54384,
              "src": "555:13:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 56326,
        "nodeType": "ImportDirective",
        "src": "611:59:156",
        "nodes": [],
        "absolutePath": "src/types/twap/TWAP.sol",
        "file": "../src/types/twap/TWAP.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57210,
        "sourceUnit": 55610,
        "symbolAliases": [
          {
            "foreign": {
              "id": 56324,
              "name": "TWAP",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55609,
              "src": "619:4:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 56325,
              "name": "TWAPOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55878,
              "src": "625:9:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 56328,
        "nodeType": "ImportDirective",
        "src": "671:61:156",
        "nodes": [],
        "absolutePath": "src/types/GoodAfterTime.sol",
        "file": "../src/types/GoodAfterTime.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57210,
        "sourceUnit": 54882,
        "symbolAliases": [
          {
            "foreign": {
              "id": 56327,
              "name": "GoodAfterTime",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54881,
              "src": "679:13:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 56330,
        "nodeType": "ImportDirective",
        "src": "733:61:156",
        "nodes": [],
        "absolutePath": "src/ERC1271Forwarder.sol",
        "file": "../src/ERC1271Forwarder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57210,
        "sourceUnit": 54354,
        "symbolAliases": [
          {
            "foreign": {
              "id": 56329,
              "name": "ERC1271Forwarder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54353,
              "src": "741:16:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 56332,
        "nodeType": "ImportDirective",
        "src": "795:60:156",
        "nodes": [],
        "absolutePath": "src/guards/ReceiverLock.sol",
        "file": "../src/guards/ReceiverLock.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57210,
        "sourceUnit": 54418,
        "symbolAliases": [
          {
            "foreign": {
              "id": 56331,
              "name": "ReceiverLock",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54417,
              "src": "803:12:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 56334,
        "nodeType": "ImportDirective",
        "src": "857:66:156",
        "nodes": [],
        "absolutePath": "src/interfaces/IValueFactory.sol",
        "file": "../src/interfaces/IValueFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57210,
        "sourceUnit": 54579,
        "symbolAliases": [
          {
            "foreign": {
              "id": 56333,
              "name": "IValueFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54578,
              "src": "865:13:156",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 56335,
        "nodeType": "ImportDirective",
        "src": "925:34:156",
        "nodes": [],
        "absolutePath": "src/ComposableCoW.sol",
        "file": "../src/ComposableCoW.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57210,
        "sourceUnit": 54248,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 57076,
        "nodeType": "ContractDefinition",
        "src": "961:7905:156",
        "nodes": [
          {
            "id": 56343,
            "nodeType": "UsingForDirective",
            "src": "1014:68:156",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 56340,
              "name": "ComposableCoWLib",
              "nameLocations": [
                "1020:16:156"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 65885,
              "src": "1020:16:156"
            },
            "typeName": {
              "id": 56342,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 56341,
                "name": "IConditionalOrder.ConditionalOrderParams",
                "nameLocations": [
                  "1041:17:156",
                  "1059:22:156"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 54485,
                "src": "1041:40:156"
              },
              "referencedDeclaration": 54485,
              "src": "1041:40:156",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_storage_ptr",
                "typeString": "struct IConditionalOrder.ConditionalOrderParams"
              }
            }
          },
          {
            "id": 56347,
            "nodeType": "UsingForDirective",
            "src": "1087:23:156",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 56344,
              "name": "SafeLib",
              "nameLocations": [
                "1093:7:156"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 66138,
              "src": "1093:7:156"
            },
            "typeName": {
              "id": 56346,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 56345,
                "name": "Safe",
                "nameLocations": [
                  "1105:4:156"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 48851,
                "src": "1105:4:156"
              },
              "referencedDeclaration": 48851,
              "src": "1105:4:156",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Safe_$48851",
                "typeString": "contract Safe"
              }
            }
          },
          {
            "id": 56356,
            "nodeType": "EventDefinition",
            "src": "1116:84:156",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "58662f46b4a87d0f96d929b24c37fe25c55d52c0025d0b2bec3936534cc31e57",
            "name": "MerkleRootSet",
            "nameLocation": "1122:13:156",
            "parameters": {
              "id": 56355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56349,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1152:5:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56356,
                  "src": "1136:21:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56348,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1136:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56351,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "1167:4:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56356,
                  "src": "1159:12:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 56350,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1159:7:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56354,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "1193:5:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56356,
                  "src": "1173:25:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$53609_memory_ptr",
                    "typeString": "struct ComposableCoW.Proof"
                  },
                  "typeName": {
                    "id": 56353,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56352,
                      "name": "ComposableCoW.Proof",
                      "nameLocations": [
                        "1173:13:156",
                        "1187:5:156"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 53609,
                      "src": "1173:19:156"
                    },
                    "referencedDeclaration": 53609,
                    "src": "1173:19:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$53609_storage_ptr",
                      "typeString": "struct ComposableCoW.Proof"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1135:64:156"
            }
          },
          {
            "id": 56363,
            "nodeType": "EventDefinition",
            "src": "1205:102:156",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "2cceac5555b0ca45a3744ced542f54b56ad2eb45e521962372eef212a2cbf361",
            "name": "ConditionalOrderCreated",
            "nameLocation": "1211:23:156",
            "parameters": {
              "id": 56362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56358,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1251:5:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56363,
                  "src": "1235:21:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1235:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56361,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "1299:6:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56363,
                  "src": "1258:47:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                    "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                  },
                  "typeName": {
                    "id": 56360,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56359,
                      "name": "IConditionalOrder.ConditionalOrderParams",
                      "nameLocations": [
                        "1258:17:156",
                        "1276:22:156"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54485,
                      "src": "1258:40:156"
                    },
                    "referencedDeclaration": 54485,
                    "src": "1258:40:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_storage_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1234:72:156"
            }
          },
          {
            "id": 56370,
            "nodeType": "EventDefinition",
            "src": "1312:64:156",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "41f583e2d25b3921afe66987b63b0b5e4cf2acbbbed4a477fd19a22180f3f859",
            "name": "SwapGuardSet",
            "nameLocation": "1318:12:156",
            "parameters": {
              "id": 56369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56365,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1347:5:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56370,
                  "src": "1331:21:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1331:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56368,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "swapGuard",
                  "nameLocation": "1365:9:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56370,
                  "src": "1354:20:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                    "typeString": "contract ISwapGuard"
                  },
                  "typeName": {
                    "id": 56367,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56366,
                      "name": "ISwapGuard",
                      "nameLocations": [
                        "1354:10:156"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54566,
                      "src": "1354:10:156"
                    },
                    "referencedDeclaration": 54566,
                    "src": "1354:10:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                      "typeString": "contract ISwapGuard"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1330:45:156"
            }
          },
          {
            "id": 56373,
            "nodeType": "VariableDeclaration",
            "src": "1382:27:156",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "composableCow",
            "nameLocation": "1396:13:156",
            "scope": 57076,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ComposableCoW_$54247",
              "typeString": "contract ComposableCoW"
            },
            "typeName": {
              "id": 56372,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 56371,
                "name": "ComposableCoW",
                "nameLocations": [
                  "1382:13:156"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 54247,
                "src": "1382:13:156"
              },
              "referencedDeclaration": 54247,
              "src": "1382:13:156",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                "typeString": "contract ComposableCoW"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 56376,
            "nodeType": "VariableDeclaration",
            "src": "1416:41:156",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "passThrough",
            "nameLocation": "1446:11:156",
            "scope": 57076,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestConditionalOrderGenerator_$57167",
              "typeString": "contract TestConditionalOrderGenerator"
            },
            "typeName": {
              "id": 56375,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 56374,
                "name": "TestConditionalOrderGenerator",
                "nameLocations": [
                  "1416:29:156"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 57167,
                "src": "1416:29:156"
              },
              "referencedDeclaration": 57167,
              "src": "1416:29:156",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestConditionalOrderGenerator_$57167",
                "typeString": "contract TestConditionalOrderGenerator"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 56379,
            "nodeType": "VariableDeclaration",
            "src": "1463:40:156",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "testContextValue",
            "nameLocation": "1487:16:156",
            "scope": 57076,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestContextSpecifyValue_$57096",
              "typeString": "contract TestContextSpecifyValue"
            },
            "typeName": {
              "id": 56378,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 56377,
                "name": "TestContextSpecifyValue",
                "nameLocations": [
                  "1463:23:156"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 57096,
                "src": "1463:23:156"
              },
              "referencedDeclaration": 57096,
              "src": "1463:23:156",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestContextSpecifyValue_$57096",
                "typeString": "contract TestContextSpecifyValue"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 56382,
            "nodeType": "VariableDeclaration",
            "src": "1509:29:156",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mirror",
            "nameLocation": "1532:6:156",
            "scope": 57076,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MirrorConditionalOrder_$57209",
              "typeString": "contract MirrorConditionalOrder"
            },
            "typeName": {
              "id": 56381,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 56380,
                "name": "MirrorConditionalOrder",
                "nameLocations": [
                  "1509:22:156"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 57209,
                "src": "1509:22:156"
              },
              "referencedDeclaration": 57209,
              "src": "1509:22:156",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MirrorConditionalOrder_$57209",
                "typeString": "contract MirrorConditionalOrder"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 56385,
            "nodeType": "VariableDeclaration",
            "src": "1544:9:156",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "twap",
            "nameLocation": "1549:4:156",
            "scope": 57076,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TWAP_$55609",
              "typeString": "contract TWAP"
            },
            "typeName": {
              "id": 56384,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 56383,
                "name": "TWAP",
                "nameLocations": [
                  "1544:4:156"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 55609,
                "src": "1544:4:156"
              },
              "referencedDeclaration": 55609,
              "src": "1544:4:156",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TWAP_$55609",
                "typeString": "contract TWAP"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 56390,
            "nodeType": "VariableDeclaration",
            "src": "1560:74:156",
            "nodes": [],
            "constant": false,
            "functionSelector": "151bcd2c",
            "mutability": "mutable",
            "name": "leaves",
            "nameLocation": "1628:6:156",
            "scope": 57076,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ConditionalOrderParams_$54485_storage_$",
              "typeString": "mapping(bytes32 => struct IConditionalOrder.ConditionalOrderParams)"
            },
            "typeName": {
              "id": 56389,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 56386,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1568:7:156",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1560:60:156",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ConditionalOrderParams_$54485_storage_$",
                "typeString": "mapping(bytes32 => struct IConditionalOrder.ConditionalOrderParams)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 56388,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 56387,
                  "name": "IConditionalOrder.ConditionalOrderParams",
                  "nameLocations": [
                    "1579:17:156",
                    "1597:22:156"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54485,
                  "src": "1579:40:156"
                },
                "referencedDeclaration": 54485,
                "src": "1579:40:156",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_storage_ptr",
                  "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 56469,
            "nodeType": "FunctionDefinition",
            "src": "1641:955:156",
            "nodes": [],
            "body": {
              "id": 56468,
              "nodeType": "Block",
              "src": "1688:908:156",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 56395,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1720:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BaseComposableCoWTest_$57076_$",
                          "typeString": "type(contract super BaseComposableCoWTest)"
                        }
                      },
                      "id": 56397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1726:5:156",
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56259,
                      "src": "1720:11:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 56398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1720:13:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56399,
                  "nodeType": "ExpressionStatement",
                  "src": "1720:13:156"
                },
                {
                  "expression": {
                    "id": 56409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 56400,
                      "name": "composableCow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56373,
                      "src": "1777:13:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                        "typeString": "contract ComposableCoW"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 56406,
                              "name": "settlement",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64958,
                              "src": "1819:10:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GPv2Settlement_$16749",
                                "typeString": "contract GPv2Settlement"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_GPv2Settlement_$16749",
                                "typeString": "contract GPv2Settlement"
                              }
                            ],
                            "id": 56405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1811:7:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 56404,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1811:7:156",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 56407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1811:19:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 56403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1793:17:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_ComposableCoW_$54247_$",
                          "typeString": "function (address) returns (contract ComposableCoW)"
                        },
                        "typeName": {
                          "id": 56402,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 56401,
                            "name": "ComposableCoW",
                            "nameLocations": [
                              "1797:13:156"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 54247,
                            "src": "1797:13:156"
                          },
                          "referencedDeclaration": 54247,
                          "src": "1797:13:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                            "typeString": "contract ComposableCoW"
                          }
                        }
                      },
                      "id": 56408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1793:38:156",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                        "typeString": "contract ComposableCoW"
                      }
                    },
                    "src": "1777:54:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                      "typeString": "contract ComposableCoW"
                    }
                  },
                  "id": 56410,
                  "nodeType": "ExpressionStatement",
                  "src": "1777:54:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 56416,
                            "name": "safe1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56097,
                            "src": "2040:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          ],
                          "id": 56415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2032:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 56414,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2032:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 56417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2032:14:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 56418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2060:1:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 56421,
                                "name": "eHandler",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65395,
                                "src": "2115:8:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ExtensibleFallbackHandler_$50607",
                                  "typeString": "contract ExtensibleFallbackHandler"
                                }
                              },
                              "id": 56422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2124:17:156",
                              "memberName": "setDomainVerifier",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51807,
                              "src": "2115:26:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_contract$_ISafeSignatureVerifier_$51635_$returns$__$",
                                "typeString": "function (bytes32,contract ISafeSignatureVerifier) external"
                              }
                            },
                            "id": 56423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2142:8:156",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "2115:35:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 56424,
                                "name": "settlement",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64958,
                                "src": "2152:10:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GPv2Settlement_$16749",
                                  "typeString": "contract GPv2Settlement"
                                }
                              },
                              "id": 56425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2163:15:156",
                              "memberName": "domainSeparator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18277,
                              "src": "2152:26:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                                "typeString": "function () view external returns (bytes32)"
                              }
                            },
                            "id": 56426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2152:28:156",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 56429,
                                "name": "composableCow",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56373,
                                "src": "2190:13:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                                  "typeString": "contract ComposableCoW"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                                  "typeString": "contract ComposableCoW"
                                }
                              ],
                              "id": 56428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2182:7:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 56427,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2182:7:156",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 56430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2182:22:156",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 56419,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2075:3:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 56420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2079:18:156",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "2075:22:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 56431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2075:143:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 56432,
                            "name": "Enum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50021,
                            "src": "2232:4:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Enum_$50021_$",
                              "typeString": "type(contract Enum)"
                            }
                          },
                          "id": 56433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2237:9:156",
                          "memberName": "Operation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50020,
                          "src": "2232:14:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Operation_$50020_$",
                            "typeString": "type(enum Enum.Operation)"
                          }
                        },
                        "id": 56434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2247:4:156",
                        "memberName": "Call",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50018,
                        "src": "2232:19:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Operation_$50020",
                          "typeString": "enum Enum.Operation"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 56435,
                          "name": "signers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            56301
                          ],
                          "referencedDeclaration": 56301,
                          "src": "2265:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_struct$_TestAccount_$66146_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function () view returns (struct TestAccount memory[] memory)"
                          }
                        },
                        "id": 56436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2265:9:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TestAccount_$66146_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct TestAccount memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_enum$_Operation_$50020",
                          "typeString": "enum Enum.Operation"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_TestAccount_$66146_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct TestAccount memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 56411,
                        "name": "safe1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56097,
                        "src": "2005:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Safe_$48851",
                          "typeString": "contract Safe"
                        }
                      },
                      "id": 56413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2011:7:156",
                      "memberName": "execute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66077,
                      "src": "2005:13:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_Safe_$48851_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$50020_$_t_array$_t_struct$_TestAccount_$66146_memory_ptr_$dyn_memory_ptr_$returns$__$attached_to$_t_contract$_Safe_$48851_$",
                        "typeString": "function (contract Safe,address,uint256,bytes memory,enum Enum.Operation,struct TestAccount memory[] memory)"
                      }
                    },
                    "id": 56437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2005:279:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56438,
                  "nodeType": "ExpressionStatement",
                  "src": "2005:279:156"
                },
                {
                  "expression": {
                    "id": 56444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 56439,
                      "name": "testContextValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56379,
                      "src": "2340:16:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestContextSpecifyValue_$57096",
                        "typeString": "contract TestContextSpecifyValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 56442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2359:27:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TestContextSpecifyValue_$57096_$",
                          "typeString": "function () returns (contract TestContextSpecifyValue)"
                        },
                        "typeName": {
                          "id": 56441,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 56440,
                            "name": "TestContextSpecifyValue",
                            "nameLocations": [
                              "2363:23:156"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 57096,
                            "src": "2363:23:156"
                          },
                          "referencedDeclaration": 57096,
                          "src": "2363:23:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestContextSpecifyValue_$57096",
                            "typeString": "contract TestContextSpecifyValue"
                          }
                        }
                      },
                      "id": 56443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2359:29:156",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestContextSpecifyValue_$57096",
                        "typeString": "contract TestContextSpecifyValue"
                      }
                    },
                    "src": "2340:48:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestContextSpecifyValue_$57096",
                      "typeString": "contract TestContextSpecifyValue"
                    }
                  },
                  "id": 56445,
                  "nodeType": "ExpressionStatement",
                  "src": "2340:48:156"
                },
                {
                  "expression": {
                    "id": 56451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 56446,
                      "name": "passThrough",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56376,
                      "src": "2452:11:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestConditionalOrderGenerator_$57167",
                        "typeString": "contract TestConditionalOrderGenerator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 56449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2466:33:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TestConditionalOrderGenerator_$57167_$",
                          "typeString": "function () returns (contract TestConditionalOrderGenerator)"
                        },
                        "typeName": {
                          "id": 56448,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 56447,
                            "name": "TestConditionalOrderGenerator",
                            "nameLocations": [
                              "2470:29:156"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 57167,
                            "src": "2470:29:156"
                          },
                          "referencedDeclaration": 57167,
                          "src": "2470:29:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestConditionalOrderGenerator_$57167",
                            "typeString": "contract TestConditionalOrderGenerator"
                          }
                        }
                      },
                      "id": 56450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2466:35:156",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestConditionalOrderGenerator_$57167",
                        "typeString": "contract TestConditionalOrderGenerator"
                      }
                    },
                    "src": "2452:49:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestConditionalOrderGenerator_$57167",
                      "typeString": "contract TestConditionalOrderGenerator"
                    }
                  },
                  "id": 56452,
                  "nodeType": "ExpressionStatement",
                  "src": "2452:49:156"
                },
                {
                  "expression": {
                    "id": 56458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 56453,
                      "name": "mirror",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56382,
                      "src": "2511:6:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MirrorConditionalOrder_$57209",
                        "typeString": "contract MirrorConditionalOrder"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 56456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2520:26:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MirrorConditionalOrder_$57209_$",
                          "typeString": "function () returns (contract MirrorConditionalOrder)"
                        },
                        "typeName": {
                          "id": 56455,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 56454,
                            "name": "MirrorConditionalOrder",
                            "nameLocations": [
                              "2524:22:156"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 57209,
                            "src": "2524:22:156"
                          },
                          "referencedDeclaration": 57209,
                          "src": "2524:22:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MirrorConditionalOrder_$57209",
                            "typeString": "contract MirrorConditionalOrder"
                          }
                        }
                      },
                      "id": 56457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2520:28:156",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MirrorConditionalOrder_$57209",
                        "typeString": "contract MirrorConditionalOrder"
                      }
                    },
                    "src": "2511:37:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MirrorConditionalOrder_$57209",
                      "typeString": "contract MirrorConditionalOrder"
                    }
                  },
                  "id": 56459,
                  "nodeType": "ExpressionStatement",
                  "src": "2511:37:156"
                },
                {
                  "expression": {
                    "id": 56466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 56460,
                      "name": "twap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56385,
                      "src": "2559:4:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TWAP_$55609",
                        "typeString": "contract TWAP"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 56464,
                          "name": "composableCow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56373,
                          "src": "2575:13:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                            "typeString": "contract ComposableCoW"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                            "typeString": "contract ComposableCoW"
                          }
                        ],
                        "id": 56463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2566:8:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ComposableCoW_$54247_$returns$_t_contract$_TWAP_$55609_$",
                          "typeString": "function (contract ComposableCoW) returns (contract TWAP)"
                        },
                        "typeName": {
                          "id": 56462,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 56461,
                            "name": "TWAP",
                            "nameLocations": [
                              "2570:4:156"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 55609,
                            "src": "2570:4:156"
                          },
                          "referencedDeclaration": 55609,
                          "src": "2570:4:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TWAP_$55609",
                            "typeString": "contract TWAP"
                          }
                        }
                      },
                      "id": 56465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2566:23:156",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TWAP_$55609",
                        "typeString": "contract TWAP"
                      }
                    },
                    "src": "2559:30:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TWAP_$55609",
                      "typeString": "contract TWAP"
                    }
                  },
                  "id": 56467,
                  "nodeType": "ExpressionStatement",
                  "src": "2559:30:156"
                }
              ]
            },
            "baseFunctions": [
              56259
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1650:5:156",
            "overrides": {
              "id": 56393,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 56392,
                  "name": "Base",
                  "nameLocations": [
                    "1682:4:156"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 56302,
                  "src": "1682:4:156"
                }
              ],
              "src": "1673:14:156"
            },
            "parameters": {
              "id": 56391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1655:2:156"
            },
            "returnParameters": {
              "id": 56394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1688:0:156"
            },
            "scope": 57076,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 56491,
            "nodeType": "FunctionDefinition",
            "src": "2718:190:156",
            "nodes": [],
            "body": {
              "id": 56490,
              "nodeType": "Block",
              "src": "2787:121:156",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 56478,
                                "name": "safe1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56097,
                                "src": "2839:5:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Safe_$48851",
                                  "typeString": "contract Safe"
                                }
                              },
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 56479,
                                    "name": "settlement",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 64958,
                                    "src": "2846:10:156",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_GPv2Settlement_$16749",
                                      "typeString": "contract GPv2Settlement"
                                    }
                                  },
                                  "id": 56480,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2857:15:156",
                                  "memberName": "domainSeparator",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 18277,
                                  "src": "2846:26:156",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                                    "typeString": "function () view external returns (bytes32)"
                                  }
                                },
                                "id": 56481,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2846:28:156",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Safe_$48851",
                                  "typeString": "contract Safe"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 56476,
                                "name": "eHandler",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65395,
                                "src": "2814:8:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ExtensibleFallbackHandler_$50607",
                                  "typeString": "contract ExtensibleFallbackHandler"
                                }
                              },
                              "id": 56477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2823:15:156",
                              "memberName": "domainVerifiers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51677,
                              "src": "2814:24:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_contract$_Safe_$48851_$_t_bytes32_$returns$_t_contract$_ISafeSignatureVerifier_$51635_$",
                                "typeString": "function (contract Safe,bytes32) view external returns (contract ISafeSignatureVerifier)"
                              }
                            },
                            "id": 56482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2814:61:156",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISafeSignatureVerifier_$51635",
                              "typeString": "contract ISafeSignatureVerifier"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISafeSignatureVerifier_$51635",
                              "typeString": "contract ISafeSignatureVerifier"
                            }
                          ],
                          "id": 56475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2806:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 56474,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2806:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 56483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2806:70:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 56486,
                            "name": "composableCow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56373,
                            "src": "2886:13:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                              "typeString": "contract ComposableCoW"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                              "typeString": "contract ComposableCoW"
                            }
                          ],
                          "id": 56485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2878:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 56484,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2878:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 56487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2878:22:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 56473,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        20988,
                        21013,
                        21026,
                        21042,
                        21084,
                        21126,
                        21168,
                        21205,
                        21242,
                        21279,
                        19294,
                        19319,
                        19349,
                        19374,
                        19433,
                        19458,
                        19488,
                        19513,
                        20613,
                        20648
                      ],
                      "referencedDeclaration": 19294,
                      "src": "2797:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 56488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2797:104:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56489,
                  "nodeType": "ExpressionStatement",
                  "src": "2797:104:156"
                }
              ]
            },
            "documentation": {
              "id": 56470,
              "nodeType": "StructuredDocumentation",
              "src": "2602:111:156",
              "text": "@dev Ensure `ComposableCoW` contract is the `ISafeSignatureVerifier` for `safe1` on the `settlement` domain"
            },
            "functionSelector": "b716db66",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SetUpState_ComposableCoWDomainVerifier_is_set",
            "nameLocation": "2727:50:156",
            "parameters": {
              "id": 56471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2777:2:156"
            },
            "returnParameters": {
              "id": 56472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2787:0:156"
            },
            "scope": 57076,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 56505,
            "nodeType": "FunctionDefinition",
            "src": "2998:158:156",
            "nodes": [],
            "body": {
              "id": 56504,
              "nodeType": "Block",
              "src": "3068:88:156",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 56496,
                            "name": "composableCow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56373,
                            "src": "3087:13:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                              "typeString": "contract ComposableCoW"
                            }
                          },
                          "id": 56497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3101:15:156",
                          "memberName": "domainSeparator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53634,
                          "src": "3087:29:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                            "typeString": "function () view external returns (bytes32)"
                          }
                        },
                        "id": 56498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3087:31:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 56499,
                            "name": "settlement",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64958,
                            "src": "3120:10:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GPv2Settlement_$16749",
                              "typeString": "contract GPv2Settlement"
                            }
                          },
                          "id": 56500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3131:15:156",
                          "memberName": "domainSeparator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18277,
                          "src": "3120:26:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                            "typeString": "function () view external returns (bytes32)"
                          }
                        },
                        "id": 56501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3120:28:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 56495,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        20988,
                        21013,
                        21026,
                        21042,
                        21084,
                        21126,
                        21168,
                        21205,
                        21242,
                        21279,
                        19294,
                        19319,
                        19349,
                        19374,
                        19433,
                        19458,
                        19488,
                        19513,
                        20613,
                        20648
                      ],
                      "referencedDeclaration": 19349,
                      "src": "3078:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 56502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3078:71:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56503,
                  "nodeType": "ExpressionStatement",
                  "src": "3078:71:156"
                }
              ]
            },
            "documentation": {
              "id": 56492,
              "nodeType": "StructuredDocumentation",
              "src": "2914:79:156",
              "text": "@dev Ensure `ComposableCoW` and `Settlement` have the same domain separator"
            },
            "functionSelector": "329696ac",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SetUpState_ComposableCoWDomainSeparator_is_set",
            "nameLocation": "3007:51:156",
            "parameters": {
              "id": 56493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3058:2:156"
            },
            "returnParameters": {
              "id": 56494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3068:0:156"
            },
            "scope": 57076,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 56553,
            "nodeType": "FunctionDefinition",
            "src": "3239:313:156",
            "nodes": [],
            "body": {
              "id": 56552,
              "nodeType": "Block",
              "src": "3329:223:156",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 56519,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56508,
                        "src": "3348:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 56516,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "3339:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 56518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3342:5:156",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30769,
                      "src": "3339:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 56520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3339:15:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56521,
                  "nodeType": "ExpressionStatement",
                  "src": "3339:15:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 56525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3378:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 56526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3384:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 56527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3390:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 56528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3396:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 56522,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "3364:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 56524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3367:10:156",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30837,
                      "src": "3364:13:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool) external"
                      }
                    },
                    "id": 56529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3364:37:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56530,
                  "nodeType": "ExpressionStatement",
                  "src": "3364:37:156"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 56532,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56508,
                        "src": "3430:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 56533,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56510,
                        "src": "3437:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 56534,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56513,
                        "src": "3443:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proof_$53609_memory_ptr",
                          "typeString": "struct ComposableCoW.Proof memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_struct$_Proof_$53609_memory_ptr",
                          "typeString": "struct ComposableCoW.Proof memory"
                        }
                      ],
                      "id": 56531,
                      "name": "MerkleRootSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56356,
                      "src": "3416:13:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_struct$_Proof_$53609_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,struct ComposableCoW.Proof memory)"
                      }
                    },
                    "id": 56535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3416:33:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56536,
                  "nodeType": "EmitStatement",
                  "src": "3411:38:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 56540,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56510,
                        "src": "3481:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 56541,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56513,
                        "src": "3487:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proof_$53609_memory_ptr",
                          "typeString": "struct ComposableCoW.Proof memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_struct$_Proof_$53609_memory_ptr",
                          "typeString": "struct ComposableCoW.Proof memory"
                        }
                      ],
                      "expression": {
                        "id": 56537,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56373,
                        "src": "3459:13:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 56539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3473:7:156",
                      "memberName": "setRoot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53696,
                      "src": "3459:21:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_struct$_Proof_$53609_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,struct ComposableCoW.Proof memory) external"
                      }
                    },
                    "id": 56542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3459:34:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56543,
                  "nodeType": "ExpressionStatement",
                  "src": "3459:34:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 56547,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56508,
                            "src": "3532:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 56545,
                            "name": "composableCow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56373,
                            "src": "3512:13:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                              "typeString": "contract ComposableCoW"
                            }
                          },
                          "id": 56546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3526:5:156",
                          "memberName": "roots",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53639,
                          "src": "3512:19:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bytes32_$",
                            "typeString": "function (address) view external returns (bytes32)"
                          }
                        },
                        "id": 56548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3512:26:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 56549,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56510,
                        "src": "3540:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 56544,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        20988,
                        21013,
                        21026,
                        21042,
                        21084,
                        21126,
                        21168,
                        21205,
                        21242,
                        21279,
                        19294,
                        19319,
                        19349,
                        19374,
                        19433,
                        19458,
                        19488,
                        19513,
                        20613,
                        20648
                      ],
                      "referencedDeclaration": 19349,
                      "src": "3503:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 56550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3503:42:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56551,
                  "nodeType": "ExpressionStatement",
                  "src": "3503:42:156"
                }
              ]
            },
            "documentation": {
              "id": 56506,
              "nodeType": "StructuredDocumentation",
              "src": "3186:48:156",
              "text": "@dev Sets the root and checks events / state"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setRoot",
            "nameLocation": "3248:8:156",
            "parameters": {
              "id": 56514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56508,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3265:5:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56553,
                  "src": "3257:13:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3257:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56510,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "3280:4:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56553,
                  "src": "3272:12:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 56509,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3272:7:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56513,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "3313:5:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56553,
                  "src": "3286:32:156",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$53609_memory_ptr",
                    "typeString": "struct ComposableCoW.Proof"
                  },
                  "typeName": {
                    "id": 56512,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56511,
                      "name": "ComposableCoW.Proof",
                      "nameLocations": [
                        "3286:13:156",
                        "3300:5:156"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 53609,
                      "src": "3286:19:156"
                    },
                    "referencedDeclaration": 53609,
                    "src": "3286:19:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$53609_storage_ptr",
                      "typeString": "struct ComposableCoW.Proof"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3256:63:156"
            },
            "returnParameters": {
              "id": 56515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3329:0:156"
            },
            "scope": 57076,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 56626,
            "nodeType": "FunctionDefinition",
            "src": "3624:537:156",
            "nodes": [],
            "body": {
              "id": 56625,
              "nodeType": "Block",
              "src": "3818:343:156",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 56572,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56556,
                        "src": "3837:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 56569,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "3828:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 56571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3831:5:156",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30769,
                      "src": "3828:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 56573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3828:15:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56574,
                  "nodeType": "ExpressionStatement",
                  "src": "3828:15:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 56578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3867:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 56579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3873:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 56580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3879:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 56581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3885:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 56575,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "3853:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 56577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3856:10:156",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30837,
                      "src": "3853:13:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool) external"
                      }
                    },
                    "id": 56582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3853:37:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56583,
                  "nodeType": "ExpressionStatement",
                  "src": "3853:37:156"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 56585,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56556,
                        "src": "3919:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 56586,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56558,
                        "src": "3926:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 56587,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56561,
                        "src": "3932:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proof_$53609_memory_ptr",
                          "typeString": "struct ComposableCoW.Proof memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_struct$_Proof_$53609_memory_ptr",
                          "typeString": "struct ComposableCoW.Proof memory"
                        }
                      ],
                      "id": 56584,
                      "name": "MerkleRootSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56356,
                      "src": "3905:13:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_struct$_Proof_$53609_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,struct ComposableCoW.Proof memory)"
                      }
                    },
                    "id": 56588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3905:33:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56589,
                  "nodeType": "EmitStatement",
                  "src": "3900:38:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 56593,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56558,
                        "src": "3981:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 56594,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56561,
                        "src": "3987:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proof_$53609_memory_ptr",
                          "typeString": "struct ComposableCoW.Proof memory"
                        }
                      },
                      {
                        "id": 56595,
                        "name": "valueFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56564,
                        "src": "3994:12:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IValueFactory_$54578",
                          "typeString": "contract IValueFactory"
                        }
                      },
                      {
                        "id": 56596,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56566,
                        "src": "4008:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_struct$_Proof_$53609_memory_ptr",
                          "typeString": "struct ComposableCoW.Proof memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_IValueFactory_$54578",
                          "typeString": "contract IValueFactory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 56590,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56373,
                        "src": "3948:13:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 56592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3962:18:156",
                      "memberName": "setRootWithContext",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53731,
                      "src": "3948:32:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_struct$_Proof_$53609_memory_ptr_$_t_contract$_IValueFactory_$54578_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,struct ComposableCoW.Proof memory,contract IValueFactory,bytes memory) external"
                      }
                    },
                    "id": 56597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3948:65:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56598,
                  "nodeType": "ExpressionStatement",
                  "src": "3948:65:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 56602,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56556,
                            "src": "4052:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 56600,
                            "name": "composableCow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56373,
                            "src": "4032:13:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                              "typeString": "contract ComposableCoW"
                            }
                          },
                          "id": 56601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4046:5:156",
                          "memberName": "roots",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53639,
                          "src": "4032:19:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bytes32_$",
                            "typeString": "function (address) view external returns (bytes32)"
                          }
                        },
                        "id": 56603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4032:26:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 56604,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56558,
                        "src": "4060:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 56599,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        20988,
                        21013,
                        21026,
                        21042,
                        21084,
                        21126,
                        21168,
                        21205,
                        21242,
                        21279,
                        19294,
                        19319,
                        19349,
                        19374,
                        19433,
                        19458,
                        19488,
                        19513,
                        20613,
                        20648
                      ],
                      "referencedDeclaration": 19349,
                      "src": "4023:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 56605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4023:42:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56606,
                  "nodeType": "ExpressionStatement",
                  "src": "4023:42:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 56610,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56556,
                            "src": "4106:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 56613,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4121:1:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 56612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4113:7:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 56611,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "4113:7:156",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 56614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4113:10:156",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 56608,
                            "name": "composableCow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56373,
                            "src": "4084:13:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                              "typeString": "contract ComposableCoW"
                            }
                          },
                          "id": 56609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4098:7:156",
                          "memberName": "cabinet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53657,
                          "src": "4084:21:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_bytes32_$",
                            "typeString": "function (address,bytes32) view external returns (bytes32)"
                          }
                        },
                        "id": 56615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4084:40:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 56618,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56566,
                            "src": "4137:4:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 56620,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4144:7:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": {
                                  "id": 56619,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4144:7:156",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "id": 56621,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4143:9:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            }
                          ],
                          "expression": {
                            "id": 56616,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4126:3:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 56617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4130:6:156",
                          "memberName": "decode",
                          "nodeType": "MemberAccess",
                          "src": "4126:10:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 56622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4126:27:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 56607,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        20988,
                        21013,
                        21026,
                        21042,
                        21084,
                        21126,
                        21168,
                        21205,
                        21242,
                        21279,
                        19294,
                        19319,
                        19349,
                        19374,
                        19433,
                        19458,
                        19488,
                        19513,
                        20613,
                        20648
                      ],
                      "referencedDeclaration": 19349,
                      "src": "4075:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 56623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4075:79:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56624,
                  "nodeType": "ExpressionStatement",
                  "src": "4075:79:156"
                }
              ]
            },
            "documentation": {
              "id": 56554,
              "nodeType": "StructuredDocumentation",
              "src": "3558:61:156",
              "text": "@dev Sets the root with context and checks events / state"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setRootWithContext",
            "nameLocation": "3633:19:156",
            "parameters": {
              "id": 56567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56556,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3670:5:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56626,
                  "src": "3662:13:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3662:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56558,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "3693:4:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56626,
                  "src": "3685:12:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 56557,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3685:7:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56561,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "3734:5:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56626,
                  "src": "3707:32:156",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$53609_memory_ptr",
                    "typeString": "struct ComposableCoW.Proof"
                  },
                  "typeName": {
                    "id": 56560,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56559,
                      "name": "ComposableCoW.Proof",
                      "nameLocations": [
                        "3707:13:156",
                        "3721:5:156"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 53609,
                      "src": "3707:19:156"
                    },
                    "referencedDeclaration": 53609,
                    "src": "3707:19:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$53609_storage_ptr",
                      "typeString": "struct ComposableCoW.Proof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56564,
                  "mutability": "mutable",
                  "name": "valueFactory",
                  "nameLocation": "3763:12:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56626,
                  "src": "3749:26:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IValueFactory_$54578",
                    "typeString": "contract IValueFactory"
                  },
                  "typeName": {
                    "id": 56563,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56562,
                      "name": "IValueFactory",
                      "nameLocations": [
                        "3749:13:156"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54578,
                      "src": "3749:13:156"
                    },
                    "referencedDeclaration": 54578,
                    "src": "3749:13:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IValueFactory_$54578",
                      "typeString": "contract IValueFactory"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56566,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3798:4:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56626,
                  "src": "3785:17:156",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 56565,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3785:5:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3652:156:156"
            },
            "returnParameters": {
              "id": 56568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3818:0:156"
            },
            "scope": 57076,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 56676,
            "nodeType": "FunctionDefinition",
            "src": "4226:304:156",
            "nodes": [],
            "body": {
              "id": 56675,
              "nodeType": "Block",
              "src": "4291:239:156",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 56638,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56629,
                        "src": "4310:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 56635,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "4301:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 56637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4304:5:156",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30769,
                      "src": "4301:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 56639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4301:15:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56640,
                  "nodeType": "ExpressionStatement",
                  "src": "4301:15:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 56644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4340:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 56645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4346:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 56646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4352:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 56647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4358:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 56641,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "4326:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 56643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4329:10:156",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30837,
                      "src": "4326:13:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool) external"
                      }
                    },
                    "id": 56648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4326:37:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56649,
                  "nodeType": "ExpressionStatement",
                  "src": "4326:37:156"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 56651,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56629,
                        "src": "4391:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 56652,
                        "name": "guard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56632,
                        "src": "4398:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                          "typeString": "contract ISwapGuard"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                          "typeString": "contract ISwapGuard"
                        }
                      ],
                      "id": 56650,
                      "name": "SwapGuardSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56370,
                      "src": "4378:12:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_ISwapGuard_$54566_$returns$__$",
                        "typeString": "function (address,contract ISwapGuard)"
                      }
                    },
                    "id": 56653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4378:26:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56654,
                  "nodeType": "EmitStatement",
                  "src": "4373:31:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 56658,
                        "name": "guard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56632,
                        "src": "4441:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                          "typeString": "contract ISwapGuard"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                          "typeString": "contract ISwapGuard"
                        }
                      ],
                      "expression": {
                        "id": 56655,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56373,
                        "src": "4414:13:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 56657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4428:12:156",
                      "memberName": "setSwapGuard",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53861,
                      "src": "4414:26:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISwapGuard_$54566_$returns$__$",
                        "typeString": "function (contract ISwapGuard) external"
                      }
                    },
                    "id": 56659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4414:33:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56660,
                  "nodeType": "ExpressionStatement",
                  "src": "4414:33:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 56666,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56629,
                                "src": "4499:5:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 56664,
                                "name": "composableCow",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56373,
                                "src": "4474:13:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                                  "typeString": "contract ComposableCoW"
                                }
                              },
                              "id": 56665,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4488:10:156",
                              "memberName": "swapGuards",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 53651,
                              "src": "4474:24:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_contract$_ISwapGuard_$54566_$",
                                "typeString": "function (address) view external returns (contract ISwapGuard)"
                              }
                            },
                            "id": 56667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4474:31:156",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                              "typeString": "contract ISwapGuard"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                              "typeString": "contract ISwapGuard"
                            }
                          ],
                          "id": 56663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4466:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 56662,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4466:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 56668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4466:40:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 56671,
                            "name": "guard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56632,
                            "src": "4516:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                              "typeString": "contract ISwapGuard"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                              "typeString": "contract ISwapGuard"
                            }
                          ],
                          "id": 56670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4508:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 56669,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4508:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 56672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4508:14:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 56661,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        20988,
                        21013,
                        21026,
                        21042,
                        21084,
                        21126,
                        21168,
                        21205,
                        21242,
                        21279,
                        19294,
                        19319,
                        19349,
                        19374,
                        19433,
                        19458,
                        19488,
                        19513,
                        20613,
                        20648
                      ],
                      "referencedDeclaration": 19294,
                      "src": "4457:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 56673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4457:66:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56674,
                  "nodeType": "ExpressionStatement",
                  "src": "4457:66:156"
                }
              ]
            },
            "documentation": {
              "id": 56627,
              "nodeType": "StructuredDocumentation",
              "src": "4167:54:156",
              "text": "@dev Sets the swap guard and checks events / state"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setSwapGuard",
            "nameLocation": "4235:13:156",
            "parameters": {
              "id": 56633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56629,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4257:5:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56676,
                  "src": "4249:13:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4249:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56632,
                  "mutability": "mutable",
                  "name": "guard",
                  "nameLocation": "4275:5:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56676,
                  "src": "4264:16:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                    "typeString": "contract ISwapGuard"
                  },
                  "typeName": {
                    "id": 56631,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56630,
                      "name": "ISwapGuard",
                      "nameLocations": [
                        "4264:10:156"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54566,
                      "src": "4264:10:156"
                    },
                    "referencedDeclaration": 54566,
                    "src": "4264:10:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                      "typeString": "contract ISwapGuard"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4248:33:156"
            },
            "returnParameters": {
              "id": 56634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4291:0:156"
            },
            "scope": 57076,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 56732,
            "nodeType": "FunctionDefinition",
            "src": "4598:424:156",
            "nodes": [],
            "body": {
              "id": 56731,
              "nodeType": "Block",
              "src": "4710:312:156",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 56690,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56679,
                        "src": "4729:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 56687,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "4720:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 56689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4723:5:156",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30769,
                      "src": "4720:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 56691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4720:15:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56692,
                  "nodeType": "ExpressionStatement",
                  "src": "4720:15:156"
                },
                {
                  "condition": {
                    "id": 56693,
                    "name": "dispatch",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 56684,
                    "src": "4749:8:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 56709,
                  "nodeType": "IfStatement",
                  "src": "4745:133:156",
                  "trueBody": {
                    "id": 56708,
                    "nodeType": "Block",
                    "src": "4759:119:156",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "74727565",
                              "id": 56697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4787:4:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 56698,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4793:4:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 56699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4799:4:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 56700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4805:4:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 56694,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20813,
                              "src": "4773:2:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$31076",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 56696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4776:10:156",
                            "memberName": "expectEmit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30837,
                            "src": "4773:13:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                              "typeString": "function (bool,bool,bool,bool) external"
                            }
                          },
                          "id": 56701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4773:37:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 56702,
                        "nodeType": "ExpressionStatement",
                        "src": "4773:37:156"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 56704,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56679,
                              "src": "4853:5:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 56705,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56682,
                              "src": "4860:6:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                                "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                                "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                              }
                            ],
                            "id": 56703,
                            "name": "ConditionalOrderCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56363,
                            "src": "4829:23:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_struct$_ConditionalOrderParams_$54485_memory_ptr_$returns$__$",
                              "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory)"
                            }
                          },
                          "id": 56706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4829:38:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 56707,
                        "nodeType": "EmitStatement",
                        "src": "4824:43:156"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 56713,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56682,
                        "src": "4908:6:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "id": 56714,
                        "name": "dispatch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56684,
                        "src": "4916:8:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 56710,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56373,
                        "src": "4887:13:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 56712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4901:6:156",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53778,
                      "src": "4887:20:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_ConditionalOrderParams_$54485_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (struct IConditionalOrder.ConditionalOrderParams memory,bool) external"
                      }
                    },
                    "id": 56715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4887:38:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56716,
                  "nodeType": "ExpressionStatement",
                  "src": "4887:38:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 56720,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56679,
                            "src": "4971:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 56724,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 56682,
                                    "src": "4999:6:156",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 56722,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "4988:3:156",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 56723,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "4992:6:156",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "4988:10:156",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 56725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4988:18:156",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 56721,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "4978:9:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 56726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4978:29:156",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 56718,
                            "name": "composableCow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56373,
                            "src": "4944:13:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                              "typeString": "contract ComposableCoW"
                            }
                          },
                          "id": 56719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4958:12:156",
                          "memberName": "singleOrders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53646,
                          "src": "4944:26:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (address,bytes32) view external returns (bool)"
                          }
                        },
                        "id": 56727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4944:64:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 56728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5010:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 56717,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        20988,
                        21013,
                        21026,
                        21042,
                        21084,
                        21126,
                        21168,
                        21205,
                        21242,
                        21279,
                        19294,
                        19319,
                        19349,
                        19374,
                        19433,
                        19458,
                        19488,
                        19513,
                        20613,
                        20648
                      ],
                      "referencedDeclaration": 20988,
                      "src": "4935:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 56729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4935:80:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56730,
                  "nodeType": "ExpressionStatement",
                  "src": "4935:80:156"
                }
              ]
            },
            "documentation": {
              "id": 56677,
              "nodeType": "StructuredDocumentation",
              "src": "4536:57:156",
              "text": "@dev Creates a single order and checks events / state"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_create",
            "nameLocation": "4607:7:156",
            "parameters": {
              "id": 56685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56679,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4623:5:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56732,
                  "src": "4615:13:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56678,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4615:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56682,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "4678:6:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56732,
                  "src": "4630:54:156",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                    "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                  },
                  "typeName": {
                    "id": 56681,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56680,
                      "name": "IConditionalOrder.ConditionalOrderParams",
                      "nameLocations": [
                        "4630:17:156",
                        "4648:22:156"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54485,
                      "src": "4630:40:156"
                    },
                    "referencedDeclaration": 54485,
                    "src": "4630:40:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_storage_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56684,
                  "mutability": "mutable",
                  "name": "dispatch",
                  "nameLocation": "4691:8:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56732,
                  "src": "4686:13:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 56683,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4686:4:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4614:86:156"
            },
            "returnParameters": {
              "id": 56686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4710:0:156"
            },
            "scope": 57076,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 56795,
            "nodeType": "FunctionDefinition",
            "src": "5103:560:156",
            "nodes": [],
            "body": {
              "id": 56794,
              "nodeType": "Block",
              "src": "5319:344:156",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 56751,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56735,
                        "src": "5338:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 56748,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "5329:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 56750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5332:5:156",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30769,
                      "src": "5329:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 56752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5329:15:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56753,
                  "nodeType": "ExpressionStatement",
                  "src": "5329:15:156"
                },
                {
                  "condition": {
                    "id": 56754,
                    "name": "dispatch",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 56745,
                    "src": "5358:8:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 56770,
                  "nodeType": "IfStatement",
                  "src": "5354:133:156",
                  "trueBody": {
                    "id": 56769,
                    "nodeType": "Block",
                    "src": "5368:119:156",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "74727565",
                              "id": 56758,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5396:4:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 56759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5402:4:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 56760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5408:4:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 56761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5414:4:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 56755,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20813,
                              "src": "5382:2:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$31076",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 56757,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5385:10:156",
                            "memberName": "expectEmit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30837,
                            "src": "5382:13:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                              "typeString": "function (bool,bool,bool,bool) external"
                            }
                          },
                          "id": 56762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5382:37:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 56763,
                        "nodeType": "ExpressionStatement",
                        "src": "5382:37:156"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 56765,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56735,
                              "src": "5462:5:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 56766,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56738,
                              "src": "5469:6:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                                "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                                "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                              }
                            ],
                            "id": 56764,
                            "name": "ConditionalOrderCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56363,
                            "src": "5438:23:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_struct$_ConditionalOrderParams_$54485_memory_ptr_$returns$__$",
                              "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory)"
                            }
                          },
                          "id": 56767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5438:38:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 56768,
                        "nodeType": "EmitStatement",
                        "src": "5433:43:156"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 56774,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56738,
                        "src": "5529:6:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "id": 56775,
                        "name": "valueFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56741,
                        "src": "5537:12:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IValueFactory_$54578",
                          "typeString": "contract IValueFactory"
                        }
                      },
                      {
                        "id": 56776,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56743,
                        "src": "5551:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 56777,
                        "name": "dispatch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56745,
                        "src": "5557:8:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_IValueFactory_$54578",
                          "typeString": "contract IValueFactory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 56771,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56373,
                        "src": "5497:13:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 56773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5511:17:156",
                      "memberName": "createWithContext",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53812,
                      "src": "5497:31:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_ConditionalOrderParams_$54485_memory_ptr_$_t_contract$_IValueFactory_$54578_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (struct IConditionalOrder.ConditionalOrderParams memory,contract IValueFactory,bytes memory,bool) external"
                      }
                    },
                    "id": 56778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5497:69:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56779,
                  "nodeType": "ExpressionStatement",
                  "src": "5497:69:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 56783,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56735,
                            "src": "5612:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 56787,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 56738,
                                    "src": "5640:6:156",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 56785,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "5629:3:156",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 56786,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "5633:6:156",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "5629:10:156",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 56788,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5629:18:156",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 56784,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "5619:9:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 56789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5619:29:156",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 56781,
                            "name": "composableCow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56373,
                            "src": "5585:13:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                              "typeString": "contract ComposableCoW"
                            }
                          },
                          "id": 56782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5599:12:156",
                          "memberName": "singleOrders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53646,
                          "src": "5585:26:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (address,bytes32) view external returns (bool)"
                          }
                        },
                        "id": 56790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5585:64:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 56791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5651:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 56780,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        20988,
                        21013,
                        21026,
                        21042,
                        21084,
                        21126,
                        21168,
                        21205,
                        21242,
                        21279,
                        19294,
                        19319,
                        19349,
                        19374,
                        19433,
                        19458,
                        19488,
                        19513,
                        20613,
                        20648
                      ],
                      "referencedDeclaration": 20988,
                      "src": "5576:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 56792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5576:80:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56793,
                  "nodeType": "ExpressionStatement",
                  "src": "5576:80:156"
                }
              ]
            },
            "documentation": {
              "id": 56733,
              "nodeType": "StructuredDocumentation",
              "src": "5028:70:156",
              "text": "@dev Creates a single order with context and checks events / state"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createWithContext",
            "nameLocation": "5112:18:156",
            "parameters": {
              "id": 56746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56735,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "5148:5:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56795,
                  "src": "5140:13:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5140:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56738,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "5211:6:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56795,
                  "src": "5163:54:156",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                    "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                  },
                  "typeName": {
                    "id": 56737,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56736,
                      "name": "IConditionalOrder.ConditionalOrderParams",
                      "nameLocations": [
                        "5163:17:156",
                        "5181:22:156"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54485,
                      "src": "5163:40:156"
                    },
                    "referencedDeclaration": 54485,
                    "src": "5163:40:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_storage_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56741,
                  "mutability": "mutable",
                  "name": "valueFactory",
                  "nameLocation": "5241:12:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56795,
                  "src": "5227:26:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IValueFactory_$54578",
                    "typeString": "contract IValueFactory"
                  },
                  "typeName": {
                    "id": 56740,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56739,
                      "name": "IValueFactory",
                      "nameLocations": [
                        "5227:13:156"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54578,
                      "src": "5227:13:156"
                    },
                    "referencedDeclaration": 54578,
                    "src": "5227:13:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IValueFactory_$54578",
                      "typeString": "contract IValueFactory"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56743,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5276:4:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56795,
                  "src": "5263:17:156",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 56742,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5263:5:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56745,
                  "mutability": "mutable",
                  "name": "dispatch",
                  "nameLocation": "5295:8:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56795,
                  "src": "5290:13:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 56744,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5290:4:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5130:179:156"
            },
            "returnParameters": {
              "id": 56747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5319:0:156"
            },
            "scope": 57076,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 56863,
            "nodeType": "FunctionDefinition",
            "src": "5722:532:156",
            "nodes": [],
            "body": {
              "id": 56862,
              "nodeType": "Block",
              "src": "5819:435:156",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    56805
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56805,
                      "mutability": "mutable",
                      "name": "orderHash",
                      "nameLocation": "5837:9:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 56862,
                      "src": "5829:17:156",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 56804,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5829:7:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 56812,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 56809,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56801,
                            "src": "5870:6:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                              "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                              "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                            }
                          ],
                          "expression": {
                            "id": 56807,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5859:3:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 56808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5863:6:156",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5859:10:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 56810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5859:18:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 56806,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5849:9:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 56811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5849:29:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5829:49:156"
                },
                {
                  "assignments": [
                    56814
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56814,
                      "mutability": "mutable",
                      "name": "ctx",
                      "nameLocation": "5896:3:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 56862,
                      "src": "5888:11:156",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 56813,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5888:7:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 56820,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 56817,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56798,
                        "src": "5924:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 56818,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56805,
                        "src": "5931:9:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 56815,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56373,
                        "src": "5902:13:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 56816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5916:7:156",
                      "memberName": "cabinet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53657,
                      "src": "5902:21:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (address,bytes32) view external returns (bytes32)"
                      }
                    },
                    "id": 56819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5902:39:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5888:53:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 56824,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56798,
                        "src": "5960:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 56821,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "5951:2:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 56823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5954:5:156",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30769,
                      "src": "5951:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 56825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5951:15:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56826,
                  "nodeType": "ExpressionStatement",
                  "src": "5951:15:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 56830,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56805,
                        "src": "5997:9:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 56827,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56373,
                        "src": "5976:13:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 56829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5990:6:156",
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53840,
                      "src": "5976:20:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 56831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5976:31:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56832,
                  "nodeType": "ExpressionStatement",
                  "src": "5976:31:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 56836,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56798,
                            "src": "6053:5:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 56837,
                            "name": "orderHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56805,
                            "src": "6060:9:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 56834,
                            "name": "composableCow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56373,
                            "src": "6026:13:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                              "typeString": "contract ComposableCoW"
                            }
                          },
                          "id": 56835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6040:12:156",
                          "memberName": "singleOrders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53646,
                          "src": "6026:26:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (address,bytes32) view external returns (bool)"
                          }
                        },
                        "id": 56838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6026:44:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 56839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6072:5:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 56833,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        20988,
                        21013,
                        21026,
                        21042,
                        21084,
                        21126,
                        21168,
                        21205,
                        21242,
                        21279,
                        19294,
                        19319,
                        19349,
                        19374,
                        19433,
                        19458,
                        19488,
                        19513,
                        20613,
                        20648
                      ],
                      "referencedDeclaration": 20988,
                      "src": "6017:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 56840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6017:61:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56841,
                  "nodeType": "ExpressionStatement",
                  "src": "6017:61:156"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 56847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 56842,
                      "name": "ctx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56814,
                      "src": "6092:3:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 56845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6107:1:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 56844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6099:7:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 56843,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6099:7:156",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 56846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6099:10:156",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6092:17:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 56861,
                  "nodeType": "IfStatement",
                  "src": "6088:160:156",
                  "trueBody": {
                    "id": 56860,
                    "nodeType": "Block",
                    "src": "6111:137:156",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 56851,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 56798,
                                  "src": "6207:5:156",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 56852,
                                  "name": "orderHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 56805,
                                  "src": "6214:9:156",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 56849,
                                  "name": "composableCow",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 56373,
                                  "src": "6185:13:156",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                                    "typeString": "contract ComposableCoW"
                                  }
                                },
                                "id": 56850,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6199:7:156",
                                "memberName": "cabinet",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 53657,
                                "src": "6185:21:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_bytes32_$",
                                  "typeString": "function (address,bytes32) view external returns (bytes32)"
                                }
                              },
                              "id": 56853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6185:39:156",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 56856,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6234:1:156",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 56855,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6226:7:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": {
                                  "id": 56854,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6226:7:156",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 56857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6226:10:156",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 56848,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              20988,
                              21013,
                              21026,
                              21042,
                              21084,
                              21126,
                              21168,
                              21205,
                              21242,
                              21279,
                              19294,
                              19319,
                              19349,
                              19374,
                              19433,
                              19458,
                              19488,
                              19513,
                              20613,
                              20648
                            ],
                            "referencedDeclaration": 19349,
                            "src": "6176:8:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32)"
                            }
                          },
                          "id": 56858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6176:61:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 56859,
                        "nodeType": "ExpressionStatement",
                        "src": "6176:61:156"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 56796,
              "nodeType": "StructuredDocumentation",
              "src": "5669:48:156",
              "text": "@dev Removes a single order and checks state"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_remove",
            "nameLocation": "5731:7:156",
            "parameters": {
              "id": 56802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56798,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "5747:5:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56863,
                  "src": "5739:13:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56797,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5739:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56801,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "5802:6:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56863,
                  "src": "5754:54:156",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                    "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                  },
                  "typeName": {
                    "id": 56800,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56799,
                      "name": "IConditionalOrder.ConditionalOrderParams",
                      "nameLocations": [
                        "5754:17:156",
                        "5772:22:156"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54485,
                      "src": "5754:40:156"
                    },
                    "referencedDeclaration": 54485,
                    "src": "5754:40:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_storage_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5738:71:156"
            },
            "returnParameters": {
              "id": 56803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5819:0:156"
            },
            "scope": 57076,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 56876,
            "nodeType": "FunctionDefinition",
            "src": "6260:146:156",
            "nodes": [],
            "body": {
              "id": 56875,
              "nodeType": "Block",
              "src": "6337:69:156",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "626c616e6b206f72646572",
                            "id": 56871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6384:13:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_dfe0aea12481b6861fe85f311f9e24a0b5f7886a445111af3b17dccfa27d9965",
                              "typeString": "literal_string \"blank order\""
                            },
                            "value": "blank order"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_dfe0aea12481b6861fe85f311f9e24a0b5f7886a445111af3b17dccfa27d9965",
                              "typeString": "literal_string \"blank order\""
                            }
                          ],
                          "id": 56870,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "6374:9:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 56872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6374:24:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 56869,
                      "name": "getOrderWithAppData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56919,
                      "src": "6354:19:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Data_$17121_memory_ptr_$",
                        "typeString": "function (bytes32) pure returns (struct GPv2Order.Data memory)"
                      }
                    },
                    "id": 56873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6354:45:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                      "typeString": "struct GPv2Order.Data memory"
                    }
                  },
                  "functionReturnParameters": 56868,
                  "id": 56874,
                  "nodeType": "Return",
                  "src": "6347:52:156"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBlankOrder",
            "nameLocation": "6269:13:156",
            "parameters": {
              "id": 56864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6282:2:156"
            },
            "returnParameters": {
              "id": 56868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56867,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "6330:5:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56876,
                  "src": "6308:27:156",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                    "typeString": "struct GPv2Order.Data"
                  },
                  "typeName": {
                    "id": 56866,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56865,
                      "name": "GPv2Order.Data",
                      "nameLocations": [
                        "6308:9:156",
                        "6318:4:156"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17121,
                      "src": "6308:14:156"
                    },
                    "referencedDeclaration": 17121,
                    "src": "6308:14:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$17121_storage_ptr",
                      "typeString": "struct GPv2Order.Data"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6307:29:156"
            },
            "scope": 57076,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 56919,
            "nodeType": "FunctionDefinition",
            "src": "6412:587:156",
            "nodes": [],
            "body": {
              "id": 56918,
              "nodeType": "Block",
              "src": "6510:489:156",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 56916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 56884,
                      "name": "order",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56882,
                      "src": "6520:5:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                        "typeString": "struct GPv2Order.Data memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 56890,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6583:1:156",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 56889,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6575:7:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 56888,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6575:7:156",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 56891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6575:10:156",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 56887,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 670,
                            "src": "6568:6:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$670_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 56892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6568:18:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$670",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 56896,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6625:1:156",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 56895,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6617:7:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 56894,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6617:7:156",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 56897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6617:10:156",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 56893,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 670,
                            "src": "6610:6:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$670_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 56898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6610:18:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$670",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 56901,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6660:1:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 56900,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6652:7:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 56899,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6652:7:156",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 56902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6652:10:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 56903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6688:1:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 56904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6714:1:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 56905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6738:1:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 56906,
                          "name": "appData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56878,
                          "src": "6762:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 56907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6794:1:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "expression": {
                            "id": 56908,
                            "name": "GPv2Order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17246,
                            "src": "6815:9:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_GPv2Order_$17246_$",
                              "typeString": "type(library GPv2Order)"
                            }
                          },
                          "id": 56909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6825:9:156",
                          "memberName": "KIND_SELL",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17129,
                          "src": "6815:19:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 56910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6867:5:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "expression": {
                            "id": 56911,
                            "name": "GPv2Order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17246,
                            "src": "6904:9:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_GPv2Order_$17246_$",
                              "typeString": "type(library GPv2Order)"
                            }
                          },
                          "id": 56912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6914:13:156",
                          "memberName": "BALANCE_ERC20",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17137,
                          "src": "6904:23:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 56913,
                            "name": "GPv2Order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17246,
                            "src": "6958:9:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_GPv2Order_$17246_$",
                              "typeString": "type(library GPv2Order)"
                            }
                          },
                          "id": 56914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6968:13:156",
                          "memberName": "BALANCE_ERC20",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17137,
                          "src": "6958:23:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$670",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$670",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 56885,
                          "name": "GPv2Order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17246,
                          "src": "6528:9:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GPv2Order_$17246_$",
                            "typeString": "type(library GPv2Order)"
                          }
                        },
                        "id": 56886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6538:4:156",
                        "memberName": "Data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17121,
                        "src": "6528:14:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Data_$17121_storage_ptr_$",
                          "typeString": "type(struct GPv2Order.Data storage pointer)"
                        }
                      },
                      "id": 56915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "6557:9:156",
                        "6600:8:156",
                        "6642:8:156",
                        "6676:10:156",
                        "6703:9:156",
                        "6729:7:156",
                        "6753:7:156",
                        "6783:9:156",
                        "6809:4:156",
                        "6848:17:156",
                        "6886:16:156",
                        "6941:15:156"
                      ],
                      "names": [
                        "sellToken",
                        "buyToken",
                        "receiver",
                        "sellAmount",
                        "buyAmount",
                        "validTo",
                        "appData",
                        "feeAmount",
                        "kind",
                        "partiallyFillable",
                        "sellTokenBalance",
                        "buyTokenBalance"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "6528:464:156",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                        "typeString": "struct GPv2Order.Data memory"
                      }
                    },
                    "src": "6520:472:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                      "typeString": "struct GPv2Order.Data memory"
                    }
                  },
                  "id": 56917,
                  "nodeType": "ExpressionStatement",
                  "src": "6520:472:156"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderWithAppData",
            "nameLocation": "6421:19:156",
            "parameters": {
              "id": 56879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56878,
                  "mutability": "mutable",
                  "name": "appData",
                  "nameLocation": "6449:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56919,
                  "src": "6441:15:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 56877,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6441:7:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6440:17:156"
            },
            "returnParameters": {
              "id": 56883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56882,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "6503:5:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56919,
                  "src": "6481:27:156",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                    "typeString": "struct GPv2Order.Data"
                  },
                  "typeName": {
                    "id": 56881,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56880,
                      "name": "GPv2Order.Data",
                      "nameLocations": [
                        "6481:9:156",
                        "6491:4:156"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17121,
                      "src": "6481:14:156"
                    },
                    "referencedDeclaration": 17121,
                    "src": "6481:14:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$17121_storage_ptr",
                      "typeString": "struct GPv2Order.Data"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6480:29:156"
            },
            "scope": 57076,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 56944,
            "nodeType": "FunctionDefinition",
            "src": "7005:400:156",
            "nodes": [],
            "body": {
              "id": 56943,
              "nodeType": "Block",
              "src": "7216:189:156",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 56941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 56932,
                      "name": "params",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56930,
                      "src": "7226:6:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                        "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 56936,
                              "name": "handler",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56922,
                              "src": "7317:7:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IConditionalOrder_$54507",
                                "typeString": "contract IConditionalOrder"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IConditionalOrder_$54507",
                                "typeString": "contract IConditionalOrder"
                              }
                            ],
                            "id": 56935,
                            "name": "IConditionalOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54507,
                            "src": "7299:17:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54507_$",
                              "typeString": "type(contract IConditionalOrder)"
                            }
                          },
                          "id": 56937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7299:26:156",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IConditionalOrder_$54507",
                            "typeString": "contract IConditionalOrder"
                          }
                        },
                        {
                          "id": 56938,
                          "name": "salt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56924,
                          "src": "7345:4:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 56939,
                          "name": "staticInput",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56926,
                          "src": "7376:11:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IConditionalOrder_$54507",
                            "typeString": "contract IConditionalOrder"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 56933,
                          "name": "IConditionalOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54507,
                          "src": "7235:17:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54507_$",
                            "typeString": "type(contract IConditionalOrder)"
                          }
                        },
                        "id": 56934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7253:22:156",
                        "memberName": "ConditionalOrderParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54485,
                        "src": "7235:40:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ConditionalOrderParams_$54485_storage_ptr_$",
                          "typeString": "type(struct IConditionalOrder.ConditionalOrderParams storage pointer)"
                        }
                      },
                      "id": 56940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "7290:7:156",
                        "7339:4:156",
                        "7363:11:156"
                      ],
                      "names": [
                        "handler",
                        "salt",
                        "staticInput"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "7235:163:156",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                        "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                      }
                    },
                    "src": "7226:172:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                    }
                  },
                  "id": 56942,
                  "nodeType": "ExpressionStatement",
                  "src": "7226:172:156"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createOrder",
            "nameLocation": "7014:11:156",
            "parameters": {
              "id": 56927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56922,
                  "mutability": "mutable",
                  "name": "handler",
                  "nameLocation": "7044:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56944,
                  "src": "7026:25:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConditionalOrder_$54507",
                    "typeString": "contract IConditionalOrder"
                  },
                  "typeName": {
                    "id": 56921,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56920,
                      "name": "IConditionalOrder",
                      "nameLocations": [
                        "7026:17:156"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54507,
                      "src": "7026:17:156"
                    },
                    "referencedDeclaration": 54507,
                    "src": "7026:17:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConditionalOrder_$54507",
                      "typeString": "contract IConditionalOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56924,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "7061:4:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56944,
                  "src": "7053:12:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 56923,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7053:7:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56926,
                  "mutability": "mutable",
                  "name": "staticInput",
                  "nameLocation": "7080:11:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56944,
                  "src": "7067:24:156",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 56925,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7067:5:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7025:67:156"
            },
            "returnParameters": {
              "id": 56931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56930,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "7204:6:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 56944,
                  "src": "7156:54:156",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                    "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                  },
                  "typeName": {
                    "id": 56929,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56928,
                      "name": "IConditionalOrder.ConditionalOrderParams",
                      "nameLocations": [
                        "7156:17:156",
                        "7174:22:156"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54485,
                      "src": "7156:40:156"
                    },
                    "referencedDeclaration": 54485,
                    "src": "7156:40:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_storage_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7155:56:156"
            },
            "scope": 57076,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 56962,
            "nodeType": "FunctionDefinition",
            "src": "7411:195:156",
            "nodes": [],
            "body": {
              "id": 56961,
              "nodeType": "Block",
              "src": "7514:92:156",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 56951,
                        "name": "passThrough",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56376,
                        "src": "7543:11:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestConditionalOrderGenerator_$57167",
                          "typeString": "contract TestConditionalOrderGenerator"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "70617373207468726f756768206f72646572",
                            "id": 56953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7566:20:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_1434245f20a419a08389ea57c1d65110fbe8fd23fb1852d44a22071f9b8682b3",
                              "typeString": "literal_string \"pass through order\""
                            },
                            "value": "pass through order"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_1434245f20a419a08389ea57c1d65110fbe8fd23fb1852d44a22071f9b8682b3",
                              "typeString": "literal_string \"pass through order\""
                            }
                          ],
                          "id": 56952,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "7556:9:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 56954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7556:31:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 56957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7595:2:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 56956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7589:5:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 56955,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "7589:5:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 56958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7589:9:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestConditionalOrderGenerator_$57167",
                          "typeString": "contract TestConditionalOrderGenerator"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 56950,
                      "name": "createOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56944,
                      "src": "7531:11:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IConditionalOrder_$54507_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_struct$_ConditionalOrderParams_$54485_memory_ptr_$",
                        "typeString": "function (contract IConditionalOrder,bytes32,bytes memory) pure returns (struct IConditionalOrder.ConditionalOrderParams memory)"
                      }
                    },
                    "id": 56959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7531:68:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                    }
                  },
                  "functionReturnParameters": 56949,
                  "id": 56960,
                  "nodeType": "Return",
                  "src": "7524:75:156"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPassthroughOrder",
            "nameLocation": "7420:19:156",
            "parameters": {
              "id": 56945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7439:2:156"
            },
            "returnParameters": {
              "id": 56949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56948,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56962,
                  "src": "7465:47:156",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                    "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                  },
                  "typeName": {
                    "id": 56947,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56946,
                      "name": "IConditionalOrder.ConditionalOrderParams",
                      "nameLocations": [
                        "7465:17:156",
                        "7483:22:156"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54485,
                      "src": "7465:40:156"
                    },
                    "referencedDeclaration": 54485,
                    "src": "7465:40:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_storage_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7464:49:156"
            },
            "scope": 57076,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 57075,
            "nodeType": "FunctionDefinition",
            "src": "7612:1252:156",
            "nodes": [],
            "body": {
              "id": 57074,
              "nodeType": "Block",
              "src": "7750:1114:156",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    56978
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56978,
                      "mutability": "mutable",
                      "name": "twapData",
                      "nameLocation": "7782:8:156",
                      "nodeType": "VariableDeclaration",
                      "scope": 57074,
                      "src": "7760:30:156",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$55673_memory_ptr",
                        "typeString": "struct TWAPOrder.Data"
                      },
                      "typeName": {
                        "id": 56977,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 56976,
                          "name": "TWAPOrder.Data",
                          "nameLocations": [
                            "7760:9:156",
                            "7770:4:156"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55673,
                          "src": "7760:14:156"
                        },
                        "referencedDeclaration": 55673,
                        "src": "7760:14:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$55673_storage_ptr",
                          "typeString": "struct TWAPOrder.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 56998,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 56981,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65588,
                        "src": "7833:6:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 56982,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65591,
                        "src": "7863:6:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 56985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7901:1:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 56984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7893:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 56983,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7893:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 56986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7893:10:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 56987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7933:1:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 56988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7962:1:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "expression": {
                          "id": 56989,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7981:5:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 56990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7987:9:156",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7981:15:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 56991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8013:1:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "33363030",
                        "id": 56992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8031:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3600_by_1",
                          "typeString": "int_const 3600"
                        },
                        "value": "3600"
                      },
                      {
                        "hexValue": "30",
                        "id": 56993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8055:1:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "746573742e74776170",
                            "id": 56995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8089:11:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_45e1f3e13187da2e43361fe0dca614b8f788ee2208999e5b35d0f0e4085b4142",
                              "typeString": "literal_string \"test.twap\""
                            },
                            "value": "test.twap"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_45e1f3e13187da2e43361fe0dca614b8f788ee2208999e5b35d0f0e4085b4142",
                              "typeString": "literal_string \"test.twap\""
                            }
                          ],
                          "id": 56994,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "8079:9:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 56996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8079:22:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_rational_3600_by_1",
                          "typeString": "int_const 3600"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 56979,
                        "name": "TWAPOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55878,
                        "src": "7793:9:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TWAPOrder_$55878_$",
                          "typeString": "type(library TWAPOrder)"
                        }
                      },
                      "id": 56980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7803:4:156",
                      "memberName": "Data",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55673,
                      "src": "7793:14:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Data_$55673_storage_ptr_$",
                        "typeString": "type(struct TWAPOrder.Data storage pointer)"
                      }
                    },
                    "id": 56997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "7822:9:156",
                      "7853:8:156",
                      "7883:8:156",
                      "7917:14:156",
                      "7948:12:156",
                      "7977:2:156",
                      "8010:1:156",
                      "8028:1:156",
                      "8049:4:156",
                      "8070:7:156"
                    ],
                    "names": [
                      "sellToken",
                      "buyToken",
                      "receiver",
                      "partSellAmount",
                      "minPartLimit",
                      "t0",
                      "n",
                      "t",
                      "span",
                      "appData"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "7793:319:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$55673_memory_ptr",
                      "typeString": "struct TWAPOrder.Data memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7760:352:156"
                },
                {
                  "expression": {
                    "id": 57006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 56999,
                      "name": "_leaves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56972,
                      "src": "8196:7:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ConditionalOrderParams_$54485_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct IConditionalOrder.ConditionalOrderParams memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 57004,
                          "name": "n",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56967,
                          "src": "8253:1:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 57003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "8206:46:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_ConditionalOrderParams_$54485_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct IConditionalOrder.ConditionalOrderParams memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 57001,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 57000,
                              "name": "IConditionalOrder.ConditionalOrderParams",
                              "nameLocations": [
                                "8210:17:156",
                                "8228:22:156"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 54485,
                              "src": "8210:40:156"
                            },
                            "referencedDeclaration": 54485,
                            "src": "8210:40:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_storage_ptr",
                              "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                            }
                          },
                          "id": 57002,
                          "nodeType": "ArrayTypeName",
                          "src": "8210:42:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConditionalOrderParams_$54485_storage_$dyn_storage_ptr",
                            "typeString": "struct IConditionalOrder.ConditionalOrderParams[]"
                          }
                        }
                      },
                      "id": 57005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8206:49:156",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ConditionalOrderParams_$54485_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct IConditionalOrder.ConditionalOrderParams memory[] memory"
                      }
                    },
                    "src": "8196:59:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ConditionalOrderParams_$54485_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory[] memory"
                    }
                  },
                  "id": 57007,
                  "nodeType": "ExpressionStatement",
                  "src": "8196:59:156"
                },
                {
                  "body": {
                    "id": 57041,
                    "nodeType": "Block",
                    "src": "8310:233:156",
                    "statements": [
                      {
                        "expression": {
                          "id": 57039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 57019,
                              "name": "_leaves",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56972,
                              "src": "8324:7:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ConditionalOrderParams_$54485_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct IConditionalOrder.ConditionalOrderParams memory[] memory"
                              }
                            },
                            "id": 57021,
                            "indexExpression": {
                              "id": 57020,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57009,
                              "src": "8332:1:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8324:10:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                              "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 57024,
                                "name": "twap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56385,
                                "src": "8405:4:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TWAP_$55609",
                                  "typeString": "contract TWAP"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 57030,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 57009,
                                            "src": "8462:1:156",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 57029,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "8454:7:156",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bytes32_$",
                                            "typeString": "type(bytes32)"
                                          },
                                          "typeName": {
                                            "id": 57028,
                                            "name": "bytes32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "8454:7:156",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 57031,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8454:10:156",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "expression": {
                                        "id": 57026,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "8443:3:156",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 57027,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "8447:6:156",
                                      "memberName": "encode",
                                      "nodeType": "MemberAccess",
                                      "src": "8443:10:156",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 57032,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8443:22:156",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 57025,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "8433:9:156",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 57033,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8433:33:156",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 57036,
                                    "name": "twapData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 56978,
                                    "src": "8508:8:156",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Data_$55673_memory_ptr",
                                      "typeString": "struct TWAPOrder.Data memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Data_$55673_memory_ptr",
                                      "typeString": "struct TWAPOrder.Data memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 57034,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "8497:3:156",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 57035,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "8501:6:156",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "8497:10:156",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 57037,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8497:20:156",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TWAP_$55609",
                                  "typeString": "contract TWAP"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 57022,
                                "name": "IConditionalOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54507,
                                "src": "8337:17:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54507_$",
                                  "typeString": "type(contract IConditionalOrder)"
                                }
                              },
                              "id": 57023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8355:22:156",
                              "memberName": "ConditionalOrderParams",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54485,
                              "src": "8337:40:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_ConditionalOrderParams_$54485_storage_ptr_$",
                                "typeString": "type(struct IConditionalOrder.ConditionalOrderParams storage pointer)"
                              }
                            },
                            "id": 57038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "8396:7:156",
                              "8427:4:156",
                              "8484:11:156"
                            ],
                            "names": [
                              "handler",
                              "salt",
                              "staticInput"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "8337:195:156",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                              "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                            }
                          },
                          "src": "8324:208:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                            "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                          }
                        },
                        "id": 57040,
                        "nodeType": "ExpressionStatement",
                        "src": "8324:208:156"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 57015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 57012,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57009,
                      "src": "8285:1:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 57013,
                        "name": "_leaves",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56972,
                        "src": "8289:7:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConditionalOrderParams_$54485_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory[] memory"
                        }
                      },
                      "id": 57014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8297:6:156",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8289:14:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8285:18:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 57042,
                  "initializationExpression": {
                    "assignments": [
                      57009
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 57009,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8278:1:156",
                        "nodeType": "VariableDeclaration",
                        "scope": 57042,
                        "src": "8270:9:156",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 57008,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8270:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 57011,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 57010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8282:1:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8270:13:156"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 57017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8305:3:156",
                      "subExpression": {
                        "id": 57016,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57009,
                        "src": "8305:1:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 57018,
                    "nodeType": "ExpressionStatement",
                    "src": "8305:3:156"
                  },
                  "nodeType": "ForStatement",
                  "src": "8265:278:156"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 57048,
                              "name": "twapData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56978,
                              "src": "8640:8:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Data_$55673_memory_ptr",
                                "typeString": "struct TWAPOrder.Data memory"
                              }
                            },
                            "id": 57049,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8649:9:156",
                            "memberName": "sellToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55653,
                            "src": "8640:18:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$670",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$670",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 57047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8632:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 57046,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8632:7:156",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 57050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8632:27:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 57051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8673:1:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 57054,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 670,
                                "src": "8711:6:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$670_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 57055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "8718:7:156",
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 657,
                              "src": "8711:14:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function IERC20.approve(address,uint256) returns (bool)"
                              }
                            },
                            "id": 57056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "8726:8:156",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "8711:23:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 57059,
                                "name": "relayer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64966,
                                "src": "8744:7:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 57058,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8736:7:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 57057,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8736:7:156",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 57060,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8736:16:156",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 57065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 57061,
                                "name": "twapData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56978,
                                "src": "8754:8:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Data_$55673_memory_ptr",
                                  "typeString": "struct TWAPOrder.Data memory"
                                }
                              },
                              "id": 57062,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8763:1:156",
                              "memberName": "n",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55666,
                              "src": "8754:10:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "id": 57063,
                                "name": "twapData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56978,
                                "src": "8767:8:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Data_$55673_memory_ptr",
                                  "typeString": "struct TWAPOrder.Data memory"
                                }
                              },
                              "id": 57064,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8776:14:156",
                              "memberName": "partSellAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55660,
                              "src": "8767:23:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8754:36:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 57052,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8688:3:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 57053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "8692:18:156",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "8688:22:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 57066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8688:103:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 57067,
                            "name": "Enum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50021,
                            "src": "8805:4:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Enum_$50021_$",
                              "typeString": "type(contract Enum)"
                            }
                          },
                          "id": 57068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8810:9:156",
                          "memberName": "Operation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50020,
                          "src": "8805:14:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Operation_$50020_$",
                            "typeString": "type(enum Enum.Operation)"
                          }
                        },
                        "id": 57069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "8820:4:156",
                        "memberName": "Call",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50018,
                        "src": "8805:19:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Operation_$50020",
                          "typeString": "enum Enum.Operation"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 57070,
                          "name": "signers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            56301
                          ],
                          "referencedDeclaration": 56301,
                          "src": "8838:7:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_struct$_TestAccount_$66146_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function () view returns (struct TestAccount memory[] memory)"
                          }
                        },
                        "id": 57071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8838:9:156",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TestAccount_$66146_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct TestAccount memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_enum$_Operation_$50020",
                          "typeString": "enum Enum.Operation"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_TestAccount_$66146_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct TestAccount memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 57043,
                        "name": "safe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56965,
                        "src": "8606:4:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Safe_$48851",
                          "typeString": "contract Safe"
                        }
                      },
                      "id": 57045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8611:7:156",
                      "memberName": "execute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66077,
                      "src": "8606:12:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_Safe_$48851_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$50020_$_t_array$_t_struct$_TestAccount_$66146_memory_ptr_$dyn_memory_ptr_$returns$__$attached_to$_t_contract$_Safe_$48851_$",
                        "typeString": "function (contract Safe,address,uint256,bytes memory,enum Enum.Operation,struct TestAccount memory[] memory)"
                      }
                    },
                    "id": 57072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8606:251:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57073,
                  "nodeType": "ExpressionStatement",
                  "src": "8606:251:156"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBundle",
            "nameLocation": "7621:9:156",
            "parameters": {
              "id": 56968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56965,
                  "mutability": "mutable",
                  "name": "safe",
                  "nameLocation": "7636:4:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 57075,
                  "src": "7631:9:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Safe_$48851",
                    "typeString": "contract Safe"
                  },
                  "typeName": {
                    "id": 56964,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56963,
                      "name": "Safe",
                      "nameLocations": [
                        "7631:4:156"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48851,
                      "src": "7631:4:156"
                    },
                    "referencedDeclaration": 48851,
                    "src": "7631:4:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Safe_$48851",
                      "typeString": "contract Safe"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56967,
                  "mutability": "mutable",
                  "name": "n",
                  "nameLocation": "7650:1:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 57075,
                  "src": "7642:9:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56966,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7642:7:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7630:22:156"
            },
            "returnParameters": {
              "id": 56973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56972,
                  "mutability": "mutable",
                  "name": "_leaves",
                  "nameLocation": "7737:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 57075,
                  "src": "7687:57:156",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ConditionalOrderParams_$54485_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IConditionalOrder.ConditionalOrderParams[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 56970,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 56969,
                        "name": "IConditionalOrder.ConditionalOrderParams",
                        "nameLocations": [
                          "7687:17:156",
                          "7705:22:156"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 54485,
                        "src": "7687:40:156"
                      },
                      "referencedDeclaration": 54485,
                      "src": "7687:40:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_storage_ptr",
                        "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                      }
                    },
                    "id": 56971,
                    "nodeType": "ArrayTypeName",
                    "src": "7687:42:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ConditionalOrderParams_$54485_storage_$dyn_storage_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7686:59:156"
            },
            "scope": 57076,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 56336,
              "name": "Base",
              "nameLocations": [
                "995:4:156"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 56302,
              "src": "995:4:156"
            },
            "id": 56337,
            "nodeType": "InheritanceSpecifier",
            "src": "995:4:156"
          },
          {
            "baseName": {
              "id": 56338,
              "name": "Merkle",
              "nameLocations": [
                "1001:6:156"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47419,
              "src": "1001:6:156"
            },
            "id": 56339,
            "nodeType": "InheritanceSpecifier",
            "src": "1001:6:156"
          }
        ],
        "canonicalName": "BaseComposableCoWTest",
        "contractDependencies": [
          7927,
          11981,
          15464,
          15646,
          16749,
          48851,
          50539,
          50607,
          52251,
          52368,
          52677,
          54247,
          55609,
          57096,
          57167,
          57209,
          65584
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          57076,
          47419,
          47936,
          56302,
          65358,
          65641,
          65562,
          29756,
          20820,
          20817,
          29707,
          25506,
          25216,
          24537,
          22965,
          22271,
          20760
        ],
        "name": "BaseComposableCoWTest",
        "nameLocation": "970:21:156",
        "scope": 57210,
        "usedErrors": []
      },
      {
        "id": 57096,
        "nodeType": "ContractDefinition",
        "src": "8868:195:156",
        "nodes": [
          {
            "id": 57095,
            "nodeType": "FunctionDefinition",
            "src": "8924:137:156",
            "nodes": [],
            "body": {
              "id": 57094,
              "nodeType": "Block",
              "src": "9007:54:156",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 57088,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57080,
                        "src": "9035:7:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 57090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9045:7:156",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 57089,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "9045:7:156",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 57091,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9044:9:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        }
                      ],
                      "expression": {
                        "id": 57086,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "9024:3:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 57087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "9028:6:156",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "9024:10:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 57092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9024:30:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 57085,
                  "id": 57093,
                  "nodeType": "Return",
                  "src": "9017:37:156"
                }
              ]
            },
            "baseFunctions": [
              54577
            ],
            "functionSelector": "b6576bdf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValue",
            "nameLocation": "8933:8:156",
            "overrides": {
              "id": 57082,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8980:8:156"
            },
            "parameters": {
              "id": 57081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57080,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "8957:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 57095,
                  "src": "8942:22:156",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 57079,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8942:5:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8941:24:156"
            },
            "returnParameters": {
              "id": 57085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57084,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57095,
                  "src": "8998:7:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 57083,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8998:7:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8997:9:156"
            },
            "scope": 57096,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 57077,
              "name": "IValueFactory",
              "nameLocations": [
                "8904:13:156"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 54578,
              "src": "8904:13:156"
            },
            "id": 57078,
            "nodeType": "InheritanceSpecifier",
            "src": "8904:13:156"
          }
        ],
        "canonicalName": "TestContextSpecifyValue",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          57096,
          54578
        ],
        "name": "TestContextSpecifyValue",
        "nameLocation": "8877:23:156",
        "scope": 57210,
        "usedErrors": []
      },
      {
        "id": 57135,
        "nodeType": "ContractDefinition",
        "src": "9155:439:156",
        "nodes": [
          {
            "id": 57101,
            "nodeType": "VariableDeclaration",
            "src": "9201:23:156",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "divisor",
            "nameLocation": "9217:7:156",
            "scope": 57135,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 57100,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "9201:7:156",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 57111,
            "nodeType": "FunctionDefinition",
            "src": "9231:65:156",
            "nodes": [],
            "body": {
              "id": 57110,
              "nodeType": "Block",
              "src": "9261:35:156",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 57108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57106,
                      "name": "divisor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57101,
                      "src": "9271:7:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 57107,
                      "name": "_divisor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57103,
                      "src": "9281:8:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9271:18:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 57109,
                  "nodeType": "ExpressionStatement",
                  "src": "9271:18:156"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 57104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57103,
                  "mutability": "mutable",
                  "name": "_divisor",
                  "nameLocation": "9251:8:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 57111,
                  "src": "9243:16:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9243:7:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9242:18:156"
            },
            "returnParameters": {
              "id": 57105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9261:0:156"
            },
            "scope": 57135,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 57134,
            "nodeType": "FunctionDefinition",
            "src": "9347:245:156",
            "nodes": [],
            "body": {
              "id": 57133,
              "nodeType": "Block",
              "src": "9537:55:156",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 57131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 57129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 57126,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57114,
                          "src": "9554:5:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$17121_calldata_ptr",
                            "typeString": "struct GPv2Order.Data calldata"
                          }
                        },
                        "id": 57127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9560:10:156",
                        "memberName": "sellAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17104,
                        "src": "9554:16:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "id": 57128,
                        "name": "divisor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57101,
                        "src": "9573:7:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9554:26:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 57130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9584:1:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9554:31:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 57125,
                  "id": 57132,
                  "nodeType": "Return",
                  "src": "9547:38:156"
                }
              ]
            },
            "baseFunctions": [
              54565
            ],
            "functionSelector": "f9ae35a2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nameLocation": "9356:6:156",
            "parameters": {
              "id": 57122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57114,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "9396:5:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 57134,
                  "src": "9372:29:156",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$17121_calldata_ptr",
                    "typeString": "struct GPv2Order.Data"
                  },
                  "typeName": {
                    "id": 57113,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57112,
                      "name": "GPv2Order.Data",
                      "nameLocations": [
                        "9372:9:156",
                        "9382:4:156"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17121,
                      "src": "9372:14:156"
                    },
                    "referencedDeclaration": 17121,
                    "src": "9372:14:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$17121_storage_ptr",
                      "typeString": "struct GPv2Order.Data"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57116,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57134,
                  "src": "9411:7:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 57115,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9411:7:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57119,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57134,
                  "src": "9428:49:156",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_calldata_ptr",
                    "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                  },
                  "typeName": {
                    "id": 57118,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57117,
                      "name": "IConditionalOrder.ConditionalOrderParams",
                      "nameLocations": [
                        "9428:17:156",
                        "9446:22:156"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54485,
                      "src": "9428:40:156"
                    },
                    "referencedDeclaration": 54485,
                    "src": "9428:40:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_storage_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57121,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57134,
                  "src": "9487:14:156",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 57120,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9487:5:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9362:145:156"
            },
            "returnParameters": {
              "id": 57125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57124,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57134,
                  "src": "9531:4:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 57123,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9531:4:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9530:6:156"
            },
            "scope": 57135,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 57098,
              "name": "BaseSwapGuard",
              "nameLocations": [
                "9181:13:156"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 54384,
              "src": "9181:13:156"
            },
            "id": 57099,
            "nodeType": "InheritanceSpecifier",
            "src": "9181:13:156"
          }
        ],
        "canonicalName": "TestSwapGuard",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 57097,
          "nodeType": "StructuredDocumentation",
          "src": "9065:90:156",
          "text": "@dev A test swap guard that only allows amounts that are divisible by a given divisor"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          57135,
          54384,
          54566,
          52197
        ],
        "name": "TestSwapGuard",
        "nameLocation": "9164:13:156",
        "scope": 57210,
        "usedErrors": []
      },
      {
        "id": 57167,
        "nodeType": "ContractDefinition",
        "src": "9706:334:156",
        "nodes": [
          {
            "id": 57166,
            "nodeType": "FunctionDefinition",
            "src": "9775:263:156",
            "nodes": [],
            "body": {
              "id": 57165,
              "nodeType": "Block",
              "src": "9970:68:156",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 57163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57155,
                      "name": "order",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57153,
                      "src": "9980:5:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                        "typeString": "struct GPv2Order.Data memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 57158,
                          "name": "offchainInput",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57148,
                          "src": "9999:13:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        {
                          "components": [
                            {
                              "expression": {
                                "id": 57159,
                                "name": "GPv2Order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17246,
                                "src": "10015:9:156",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_GPv2Order_$17246_$",
                                  "typeString": "type(library GPv2Order)"
                                }
                              },
                              "id": 57160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10025:4:156",
                              "memberName": "Data",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17121,
                              "src": "10015:14:156",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Data_$17121_storage_ptr_$",
                                "typeString": "type(struct GPv2Order.Data storage pointer)"
                              }
                            }
                          ],
                          "id": 57161,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "10014:16:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Data_$17121_storage_ptr_$",
                            "typeString": "type(struct GPv2Order.Data storage pointer)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          },
                          {
                            "typeIdentifier": "t_type$_t_struct$_Data_$17121_storage_ptr_$",
                            "typeString": "type(struct GPv2Order.Data storage pointer)"
                          }
                        ],
                        "expression": {
                          "id": 57156,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "9988:3:156",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 57157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "9992:6:156",
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "9988:10:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 57162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9988:43:156",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                        "typeString": "struct GPv2Order.Data memory"
                      }
                    },
                    "src": "9980:51:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                      "typeString": "struct GPv2Order.Data memory"
                    }
                  },
                  "id": 57164,
                  "nodeType": "ExpressionStatement",
                  "src": "9980:51:156"
                }
              ]
            },
            "baseFunctions": [
              53546
            ],
            "functionSelector": "b8296fc4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTradeableOrder",
            "nameLocation": "9784:17:156",
            "overrides": {
              "id": 57150,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9911:8:156"
            },
            "parameters": {
              "id": 57149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57140,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57166,
                  "src": "9802:7:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9802:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57142,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57166,
                  "src": "9811:7:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9811:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57144,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57166,
                  "src": "9820:7:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 57143,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9820:7:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57146,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57166,
                  "src": "9829:14:156",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 57145,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9829:5:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57148,
                  "mutability": "mutable",
                  "name": "offchainInput",
                  "nameLocation": "9860:13:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 57166,
                  "src": "9845:28:156",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 57147,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9845:5:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9801:73:156"
            },
            "returnParameters": {
              "id": 57154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57153,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "9959:5:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 57166,
                  "src": "9937:27:156",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                    "typeString": "struct GPv2Order.Data"
                  },
                  "typeName": {
                    "id": 57152,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57151,
                      "name": "GPv2Order.Data",
                      "nameLocations": [
                        "9937:9:156",
                        "9947:4:156"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17121,
                      "src": "9937:14:156"
                    },
                    "referencedDeclaration": 17121,
                    "src": "9937:14:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$17121_storage_ptr",
                      "typeString": "struct GPv2Order.Data"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9936:29:156"
            },
            "scope": 57167,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 57137,
              "name": "BaseConditionalOrder",
              "nameLocations": [
                "9748:20:156"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53571,
              "src": "9748:20:156"
            },
            "id": 57138,
            "nodeType": "InheritanceSpecifier",
            "src": "9748:20:156"
          }
        ],
        "canonicalName": "TestConditionalOrderGenerator",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 57136,
          "nodeType": "StructuredDocumentation",
          "src": "9596:110:156",
          "text": "@dev A conditional order handler used for testing that returns the GPv2Order passed in as `offchainInput`"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          57167,
          53571,
          54538,
          52197,
          54507
        ],
        "name": "TestConditionalOrderGenerator",
        "nameLocation": "9715:29:156",
        "scope": 57210,
        "usedErrors": [
          54477
        ]
      },
      {
        "id": 57182,
        "nodeType": "ContractDefinition",
        "src": "10106:139:156",
        "nodes": [
          {
            "id": 57181,
            "nodeType": "FunctionDefinition",
            "src": "10159:84:156",
            "nodes": [],
            "body": {
              "id": 57180,
              "nodeType": "Block",
              "src": "10241:2:156",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 57176,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57172,
                        "src": "10225:13:156",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 57175,
                      "name": "ComposableCoW",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54247,
                      "src": "10211:13:156",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ComposableCoW_$54247_$",
                        "typeString": "type(contract ComposableCoW)"
                      }
                    },
                    "id": 57177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10211:28:156",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ComposableCoW_$54247",
                      "typeString": "contract ComposableCoW"
                    }
                  }
                ],
                "id": 57178,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 57174,
                  "name": "ERC1271Forwarder",
                  "nameLocations": [
                    "10194:16:156"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54353,
                  "src": "10194:16:156"
                },
                "nodeType": "ModifierInvocation",
                "src": "10194:46:156"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 57173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57172,
                  "mutability": "mutable",
                  "name": "composableCow",
                  "nameLocation": "10179:13:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 57181,
                  "src": "10171:21:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10171:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10170:23:156"
            },
            "returnParameters": {
              "id": 57179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10241:0:156"
            },
            "scope": 57182,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 57169,
              "name": "ERC1271Forwarder",
              "nameLocations": [
                "10136:16:156"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 54353,
              "src": "10136:16:156"
            },
            "id": 57170,
            "nodeType": "InheritanceSpecifier",
            "src": "10136:16:156"
          }
        ],
        "canonicalName": "TestNonSafeWallet",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 57168,
          "nodeType": "StructuredDocumentation",
          "src": "10042:64:156",
          "text": "@dev Stub ERC1271Forwarder that forwards to a ComposableCoW"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          57182,
          54353,
          51612
        ],
        "name": "TestNonSafeWallet",
        "nameLocation": "10115:17:156",
        "scope": 57210,
        "usedErrors": [
          54273
        ]
      },
      {
        "id": 57209,
        "nodeType": "ContractDefinition",
        "src": "10324:452:156",
        "nodes": [
          {
            "id": 57208,
            "nodeType": "FunctionDefinition",
            "src": "10383:391:156",
            "nodes": [],
            "body": {
              "id": 57207,
              "nodeType": "Block",
              "src": "10594:180:156",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "10672:96:156",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10699:1:156",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10702:1:156",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "10705:12:156"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10705:14:156"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "10686:12:156"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10686:34:156"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10686:34:156"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10740:1:156",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "10743:12:156"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10743:14:156"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10733:6:156"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10733:25:156"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10733:25:156"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [],
                  "id": 57206,
                  "nodeType": "InlineAssembly",
                  "src": "10663:105:156"
                }
              ]
            },
            "baseFunctions": [
              54506
            ],
            "functionSelector": "14a2a784",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nameLocation": "10392:6:156",
            "overrides": {
              "id": 57204,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10585:8:156"
            },
            "parameters": {
              "id": 57203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57187,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57208,
                  "src": "10408:7:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10408:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57189,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57208,
                  "src": "10425:7:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10425:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57191,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57208,
                  "src": "10442:7:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 57190,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10442:7:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57193,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57208,
                  "src": "10459:7:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 57192,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10459:7:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57195,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57208,
                  "src": "10476:7:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 57194,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10476:7:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57197,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57208,
                  "src": "10493:14:156",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 57196,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10493:5:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57199,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57208,
                  "src": "10517:14:156",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 57198,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10517:5:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57202,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57208,
                  "src": "10541:23:156",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$17121_calldata_ptr",
                    "typeString": "struct GPv2Order.Data"
                  },
                  "typeName": {
                    "id": 57201,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57200,
                      "name": "GPv2Order.Data",
                      "nameLocations": [
                        "10541:9:156",
                        "10551:4:156"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17121,
                      "src": "10541:14:156"
                    },
                    "referencedDeclaration": 17121,
                    "src": "10541:14:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$17121_storage_ptr",
                      "typeString": "struct GPv2Order.Data"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10398:172:156"
            },
            "returnParameters": {
              "id": 57205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10594:0:156"
            },
            "scope": 57209,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 57184,
              "name": "IConditionalOrder",
              "nameLocations": [
                "10359:17:156"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 54507,
              "src": "10359:17:156"
            },
            "id": 57185,
            "nodeType": "InheritanceSpecifier",
            "src": "10359:17:156"
          }
        ],
        "canonicalName": "MirrorConditionalOrder",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 57183,
          "nodeType": "StructuredDocumentation",
          "src": "10247:77:156",
          "text": "@dev A conditional order handler used for testing that reverts on verify"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          57209,
          54507
        ],
        "name": "MirrorConditionalOrder",
        "nameLocation": "10333:22:156",
        "scope": 57210,
        "usedErrors": [
          54477
        ]
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 156
}