{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_settlement",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InterfaceNotSupported",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidFallbackHandler",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidHandler",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ProofNotAuthed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SingleOrderNotAuthed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SwapGuardRestricted",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IConditionalOrder",
              "name": "handler",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "staticInput",
              "type": "bytes"
            }
          ],
          "indexed": false,
          "internalType": "struct IConditionalOrder.ConditionalOrderParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "ConditionalOrderCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "location",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "indexed": false,
          "internalType": "struct ComposableCoW.Proof",
          "name": "proof",
          "type": "tuple"
        }
      ],
      "name": "MerkleRootSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract ISwapGuard",
          "name": "swapGuard",
          "type": "address"
        }
      ],
      "name": "SwapGuardSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "cabinet",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IConditionalOrder",
              "name": "handler",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "staticInput",
              "type": "bytes"
            }
          ],
          "internalType": "struct IConditionalOrder.ConditionalOrderParams",
          "name": "params",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "dispatch",
          "type": "bool"
        }
      ],
      "name": "create",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IConditionalOrder",
              "name": "handler",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "staticInput",
              "type": "bytes"
            }
          ],
          "internalType": "struct IConditionalOrder.ConditionalOrderParams",
          "name": "params",
          "type": "tuple"
        },
        {
          "internalType": "contract IValueFactory",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "dispatch",
          "type": "bool"
        }
      ],
      "name": "createWithContext",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "domainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IConditionalOrder",
              "name": "handler",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "staticInput",
              "type": "bytes"
            }
          ],
          "internalType": "struct IConditionalOrder.ConditionalOrderParams",
          "name": "params",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "offchainInput",
          "type": "bytes"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "getTradeableOrderWithSignature",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "sellToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "buyToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "sellAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "validTo",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "appData",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "kind",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "partiallyFillable",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "sellTokenBalance",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "buyTokenBalance",
              "type": "bytes32"
            }
          ],
          "internalType": "struct GPv2Order.Data",
          "name": "order",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IConditionalOrder",
              "name": "handler",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "staticInput",
              "type": "bytes"
            }
          ],
          "internalType": "struct IConditionalOrder.ConditionalOrderParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "hash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Safe",
          "name": "safe",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_domainSeparator",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "encodeData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "isValidSafeSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "magic",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "singleOrderHash",
          "type": "bytes32"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "roots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "location",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct ComposableCoW.Proof",
          "name": "proof",
          "type": "tuple"
        }
      ],
      "name": "setRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "location",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct ComposableCoW.Proof",
          "name": "proof",
          "type": "tuple"
        },
        {
          "internalType": "contract IValueFactory",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "setRootWithContext",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISwapGuard",
          "name": "swapGuard",
          "type": "address"
        }
      ],
      "name": "setSwapGuard",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "singleOrders",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "swapGuards",
      "outputs": [
        {
          "internalType": "contract ISwapGuard",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b5060405162002230380380620022308339810160408190526200003491620000a3565b806001600160a01b031663f698da256040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000073573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000999190620000d5565b60805250620000ef565b600060208284031215620000b657600080fd5b81516001600160a01b0381168114620000ce57600080fd5b9392505050565b600060208284031215620000e857600080fd5b5051919050565b60805161211e6200011260003960008181610328015261092a015261211e6000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063595001b21161008c5780638f7984ed116100665780638f7984ed1461028c57806395bc26731461029f578063a454687614610303578063f698da251461032357600080fd5b8063595001b2146101e05780636108c5321461023b5780636bfae1ca1461027957600080fd5b806326e0a196116100c857806326e0a1961461015557806353f00b14146101765780635500079d146101ba57806357f1d41a146101cd57600080fd5b80630d0d9800146100ef5780631ab0dd9d146101045780631c7662c814610117575b600080fd5b6101026100fd366004611216565b61034a565b005b6101026101123660046112bb565b61041d565b61014261012536600461130d565b600360209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b610168610163366004611339565b61046d565b60405161014c929190611556565b610189610184366004611578565b610afd565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161014c565b6101426101c83660046117ea565b610c3f565b6101026101db366004611827565b610c6f565b6102166101ee3660046118b0565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161014c565b61026961024936600461130d565b600160209081526000928352604080842090915290825290205460ff1681565b604051901515815260200161014c565b6101026102873660046118cd565b610d30565b61010261029a3660046118b0565b610e38565b6101026102ad36600461191f565b336000818152600160209081526040808320858452825280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690559282526003815282822093825292909252812055565b6101426103113660046118b0565b60006020819052908152604090205481565b6101427f000000000000000000000000000000000000000000000000000000000000000081565b6103548582610d30565b6040517fb6576bdf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063b6576bdf906103a89086908690600401611981565b602060405180830381865afa1580156103c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e99190611995565b336000908152600360205260408120906104056101c8896119ae565b81526020810191909152604001600020555050505050565b3360008181526020819052604090819020849055517f58662f46b4a87d0f96d929b24c37fe25c55d52c0025d0b2bec3936534cc31e57906104619085908590611a1e565b60405180910390a25050565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915260606000610518896104df8a6119ae565b878780806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610ebf92505050565b905061052760208901896118b0565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527fb8296fc400000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff91909116906301ffc9a790602401602060405180830381865afa9250505080156105ed575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526105ea91810190611a68565b60015b610623576040517f2c7ca6d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8061065a576040517f2c7ca6d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5061066860208901896118b0565b73ffffffffffffffffffffffffffffffffffffffff1663b8296fc48a338461069360408e018e611a85565b8d8d6040518863ffffffff1660e01b81526004016106b79796959493929190611aea565b61018060405180830381865afa1580156106d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f99190611b73565b925061074789826107098b6119ae565b8a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a9250611001915050565b61077d576040517f03fc2a7e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f62af8dc200000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8a16906301ffc9a790602401602060405180830381865afa925050508015610841575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261083e91810190611a68565b60015b6108f15760408051608060208702808301820190935260608201878152869383928a918a9182919086019084908082843760009201919091525050509082525060200161088d8b6119ae565b815260200189898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152506040516108db929190602001611ce0565b6040516020818303038152906040529150610af1565b80610928576040517f79ac63cd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000007fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e4898560405160200161097b9190611d02565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152608060208b028085018201909352606084018b81529193928392918d918d918291908601908490808284376000920191909152505050908252506020016109ec8e6119ae565b81526020018c8c8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050915250604051610a399190602001611d11565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610a7794939291602401611d24565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f5fd7e97d000000000000000000000000000000000000000000000000000000001790529250505b50965096945050505050565b600080610b0c83850185611d60565b90506000610b238c83602001518460000151610ebf565b90506000610b3387890189611e82565b9050610b4a8d838560200151866040015185611001565b610b80576040517f03fc2a7e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82602001516000015173ffffffffffffffffffffffffffffffffffffffff166314a2a7848e8e8e8e878960200151604001518a60400151896040518963ffffffff1660e01b8152600401610bdb989796959493929190611f40565b60006040518083038186803b158015610bf357600080fd5b505afa158015610c07573d6000803e3d6000fd5b507f1626ba7e0000000000000000000000000000000000000000000000000000000096505050505050505b9998505050505050505050565b600081604051602001610c529190611fb0565b604051602081830303815290604052805190602001209050919050565b610c79858561041d565b6040517fb6576bdf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169063b6576bdf90610ccd9085908590600401611981565b602060405180830381865afa158015610cea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0e9190611995565b3360009081526003602090815260408083208380529091529020555050505050565b6000610d3f60208401846118b0565b73ffffffffffffffffffffffffffffffffffffffff1603610d8c576040517fd8f59fa500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260016020819052604082209091610dab6101c8866119ae565b8152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790558015610e34573373ffffffffffffffffffffffffffffffffffffffff167f2cceac5555b0ca45a3744ced542f54b56ad2eb45e521962372eef212a2cbf361836040516104619190611fc3565b5050565b3360008181526002602090815260409182902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff861690811790915591519182527f41f583e2d25b3921afe66987b63b0b5e4cf2acbbbed4a477fd19a22180f3f859910160405180910390a250565b60008151600014610f84576000610ed584610c3f565b604051602001610ee791815260200190565b604051602081830303815290604052805190602001209050610f48836000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836110e1565b610f7e576040517f4a82146400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50610ffa565b610f8d83610c3f565b73ffffffffffffffffffffffffffffffffffffffff8516600090815260016020908152604080832084845290915290205490915060ff16610ffa576040517f7a93323400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff80861660009081526002602052604081205490911680156110d2576040517ff9ae35a200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063f9ae35a2906110899086908a908a908a9060040161201c565b602060405180830381865afa1580156110a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ca9190611a68565b9150506110d8565b60019150505b95945050505050565b6000826110ee85846110f7565b14949350505050565b600081815b845181101561113c576111288286838151811061111b5761111b61205a565b6020026020010151611146565b91508061113481612089565b9150506110fc565b5090505b92915050565b6000818310611162576000828152602084905260409020610ffa565b5060009182526020526040902090565b60006060828403121561118457600080fd5b50919050565b73ffffffffffffffffffffffffffffffffffffffff811681146111ac57600080fd5b50565b60008083601f8401126111c157600080fd5b50813567ffffffffffffffff8111156111d957600080fd5b6020830191508360208285010111156111f157600080fd5b9250929050565b80151581146111ac57600080fd5b8035611211816111f8565b919050565b60008060008060006080868803121561122e57600080fd5b853567ffffffffffffffff8082111561124657600080fd5b61125289838a01611172565b9650602088013591506112648261118a565b9094506040870135908082111561127a57600080fd5b50611287888289016111af565b909450925050606086013561129b816111f8565b809150509295509295909350565b60006040828403121561118457600080fd5b600080604083850312156112ce57600080fd5b82359150602083013567ffffffffffffffff8111156112ec57600080fd5b6112f8858286016112a9565b9150509250929050565b80356112118161118a565b6000806040838503121561132057600080fd5b823561132b8161118a565b946020939093013593505050565b6000806000806000806080878903121561135257600080fd5b863561135d8161118a565b9550602087013567ffffffffffffffff8082111561137a57600080fd5b6113868a838b01611172565b9650604089013591508082111561139c57600080fd5b6113a88a838b016111af565b909650945060608901359150808211156113c157600080fd5b818901915089601f8301126113d557600080fd5b8135818111156113e457600080fd5b8a60208260051b85010111156113f957600080fd5b6020830194508093505050509295509295509295565b805173ffffffffffffffffffffffffffffffffffffffff1682526020810151611450602084018273ffffffffffffffffffffffffffffffffffffffff169052565b506040810151611478604084018273ffffffffffffffffffffffffffffffffffffffff169052565b50606081015160608301526080810151608083015260a08101516114a460a084018263ffffffff169052565b5060c081015160c083015260e081015160e0830152610100808201518184015250610120808201516114d98285018215159052565b5050610140818101519083015261016090810151910152565b6000815180845260005b81811015611518576020818501810151868301820152016114fc565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60006101a0611565838661140f565b806101808401526110d8818401856114f2565b600080600080600080600080600060e08a8c03121561159657600080fd5b89356115a18161118a565b985060208a01356115b18161118a565b975060408a0135965060608a0135955060808a0135945060a08a013567ffffffffffffffff808211156115e357600080fd5b6115ef8d838e016111af565b909650945060c08c013591508082111561160857600080fd5b506116158c828d016111af565b915080935050809150509295985092959850929598565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561167e5761167e61162c565b60405290565b604051610180810167ffffffffffffffff8111828210171561167e5761167e61162c565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156116ef576116ef61162c565b604052919050565b600082601f83011261170857600080fd5b813567ffffffffffffffff8111156117225761172261162c565b61175360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016116a8565b81815284602083860101111561176857600080fd5b816020850160208301376000918101602001919091529392505050565b60006060828403121561179757600080fd5b61179f61165b565b905081356117ac8161118a565b815260208281013590820152604082013567ffffffffffffffff8111156117d257600080fd5b6117de848285016116f7565b60408301525092915050565b6000602082840312156117fc57600080fd5b813567ffffffffffffffff81111561181357600080fd5b61181f84828501611785565b949350505050565b60008060008060006080868803121561183f57600080fd5b85359450602086013567ffffffffffffffff8082111561185e57600080fd5b61186a89838a016112a9565b95506040880135915061187c8261118a565b9093506060870135908082111561189257600080fd5b5061189f888289016111af565b969995985093965092949392505050565b6000602082840312156118c257600080fd5b8135610ffa8161118a565b600080604083850312156118e057600080fd5b823567ffffffffffffffff8111156118f757600080fd5b61190385828601611172565b9250506020830135611914816111f8565b809150509250929050565b60006020828403121561193157600080fd5b5035919050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60208152600061181f602083018486611938565b6000602082840312156119a757600080fd5b5051919050565b60006111403683611785565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126119ef57600080fd5b830160208101925035905067ffffffffffffffff811115611a0f57600080fd5b8036038213156111f157600080fd5b82815260406020820152813560408201526000611a3e60208401846119ba565b60406060850152611a53608085018284611938565b9695505050505050565b8051611211816111f8565b600060208284031215611a7a57600080fd5b8151610ffa816111f8565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611aba57600080fd5b83018035915067ffffffffffffffff821115611ad557600080fd5b6020019150368190038213156111f157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff808a16835280891660208401525086604083015260a06060830152611b2a60a083018688611938565b8281036080840152611b3d818587611938565b9a9950505050505050505050565b80516112118161118a565b63ffffffff811681146111ac57600080fd5b805161121181611b56565b60006101808284031215611b8657600080fd5b611b8e611684565b611b9783611b4b565b8152611ba560208401611b4b565b6020820152611bb660408401611b4b565b60408201526060830151606082015260808301516080820152611bdb60a08401611b68565b60a082015260c083015160c082015260e083015160e0820152610100808401518183015250610120611c0e818501611a5d565b908201526101408381015190820152610160928301519281019290925250919050565b73ffffffffffffffffffffffffffffffffffffffff815116825260208101516020830152600060408201516060604085015261181f60608501826114f2565b805160608084528151908401819052600091602091908201906080860190845b81811015611cac57835183529284019291840191600101611c90565b505082850151915085810383870152611cc58183611c31565b92505050604083015184820360408601526110d882826114f2565b60006101a0611cef838661140f565b806101808401526110d881840185611c70565b6101808101611140828461140f565b602081526000610ffa6020830184611c70565b848152836020820152608060408201526000611d4360808301856114f2565b8281036060840152611d5581856114f2565b979650505050505050565b60006020808385031215611d7357600080fd5b823567ffffffffffffffff80821115611d8b57600080fd5b9084019060608287031215611d9f57600080fd5b611da761165b565b823582811115611db657600080fd5b8301601f81018813611dc757600080fd5b803583811115611dd957611dd961162c565b8060051b611de88782016116a8565b918252828101870191878101908b841115611e0257600080fd5b938801935b83851015611e2057843582529388019390880190611e07565b8552505050508284013582811115611e3757600080fd5b611e4388828601611785565b85830152506040830135935081841115611e5c57600080fd5b611e68878585016116f7565b60408201529695505050505050565b803561121181611b56565b60006101808284031215611e9557600080fd5b611e9d611684565b611ea683611302565b8152611eb460208401611302565b6020820152611ec560408401611302565b60408201526060830135606082015260808301356080820152611eea60a08401611e77565b60a082015260c083013560c082015260e083013560e0820152610100808401358183015250610120611f1d818501611206565b908201526101408381013590820152610160928301359281019290925250919050565b600061026073ffffffffffffffffffffffffffffffffffffffff808c168452808b166020850152508860408401528760608401528660808401528060a0840152611f8c818401876114f2565b905082810360c0840152611fa081866114f2565b915050610c3260e083018461140f565b602081526000610ffa6020830184611c31565b6020815260008235611fd48161118a565b73ffffffffffffffffffffffffffffffffffffffff81166020840152506020830135604083015261200860408401846119ba565b6060808501526110d8608085018284611938565b60006101e061202b838861140f565b85610180840152806101a084015261204581840186611c31565b90508281036101c0840152611d5581856114f2565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036120e1577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220e23d95217a10665974c83c4ea22bd347daab0570e397236749f8f5063e1b702164736f6c63430008130033",
    "sourceMap": "579:11686:136:-:0;;;2178:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2253:11;-1:-1:-1;;;;;2239:42:136;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2221:62;;-1:-1:-1;579:11686:136;;14:290:170;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:170;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:170:o;309:184::-;379:6;432:2;420:9;411:7;407:23;403:32;400:52;;;448:1;445;438:12;400:52;-1:-1:-1;471:16:170;;309:184;-1:-1:-1;309:184:170:o;:::-;579:11686:136;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063595001b21161008c5780638f7984ed116100665780638f7984ed1461028c57806395bc26731461029f578063a454687614610303578063f698da251461032357600080fd5b8063595001b2146101e05780636108c5321461023b5780636bfae1ca1461027957600080fd5b806326e0a196116100c857806326e0a1961461015557806353f00b14146101765780635500079d146101ba57806357f1d41a146101cd57600080fd5b80630d0d9800146100ef5780631ab0dd9d146101045780631c7662c814610117575b600080fd5b6101026100fd366004611216565b61034a565b005b6101026101123660046112bb565b61041d565b61014261012536600461130d565b600360209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b610168610163366004611339565b61046d565b60405161014c929190611556565b610189610184366004611578565b610afd565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161014c565b6101426101c83660046117ea565b610c3f565b6101026101db366004611827565b610c6f565b6102166101ee3660046118b0565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161014c565b61026961024936600461130d565b600160209081526000928352604080842090915290825290205460ff1681565b604051901515815260200161014c565b6101026102873660046118cd565b610d30565b61010261029a3660046118b0565b610e38565b6101026102ad36600461191f565b336000818152600160209081526040808320858452825280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690559282526003815282822093825292909252812055565b6101426103113660046118b0565b60006020819052908152604090205481565b6101427f000000000000000000000000000000000000000000000000000000000000000081565b6103548582610d30565b6040517fb6576bdf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063b6576bdf906103a89086908690600401611981565b602060405180830381865afa1580156103c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e99190611995565b336000908152600360205260408120906104056101c8896119ae565b81526020810191909152604001600020555050505050565b3360008181526020819052604090819020849055517f58662f46b4a87d0f96d929b24c37fe25c55d52c0025d0b2bec3936534cc31e57906104619085908590611a1e565b60405180910390a25050565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915260606000610518896104df8a6119ae565b878780806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610ebf92505050565b905061052760208901896118b0565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527fb8296fc400000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff91909116906301ffc9a790602401602060405180830381865afa9250505080156105ed575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526105ea91810190611a68565b60015b610623576040517f2c7ca6d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8061065a576040517f2c7ca6d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5061066860208901896118b0565b73ffffffffffffffffffffffffffffffffffffffff1663b8296fc48a338461069360408e018e611a85565b8d8d6040518863ffffffff1660e01b81526004016106b79796959493929190611aea565b61018060405180830381865afa1580156106d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f99190611b73565b925061074789826107098b6119ae565b8a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a9250611001915050565b61077d576040517f03fc2a7e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f62af8dc200000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8a16906301ffc9a790602401602060405180830381865afa925050508015610841575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261083e91810190611a68565b60015b6108f15760408051608060208702808301820190935260608201878152869383928a918a9182919086019084908082843760009201919091525050509082525060200161088d8b6119ae565b815260200189898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152506040516108db929190602001611ce0565b6040516020818303038152906040529150610af1565b80610928576040517f79ac63cd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000007fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e4898560405160200161097b9190611d02565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152608060208b028085018201909352606084018b81529193928392918d918d918291908601908490808284376000920191909152505050908252506020016109ec8e6119ae565b81526020018c8c8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050915250604051610a399190602001611d11565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610a7794939291602401611d24565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f5fd7e97d000000000000000000000000000000000000000000000000000000001790529250505b50965096945050505050565b600080610b0c83850185611d60565b90506000610b238c83602001518460000151610ebf565b90506000610b3387890189611e82565b9050610b4a8d838560200151866040015185611001565b610b80576040517f03fc2a7e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82602001516000015173ffffffffffffffffffffffffffffffffffffffff166314a2a7848e8e8e8e878960200151604001518a60400151896040518963ffffffff1660e01b8152600401610bdb989796959493929190611f40565b60006040518083038186803b158015610bf357600080fd5b505afa158015610c07573d6000803e3d6000fd5b507f1626ba7e0000000000000000000000000000000000000000000000000000000096505050505050505b9998505050505050505050565b600081604051602001610c529190611fb0565b604051602081830303815290604052805190602001209050919050565b610c79858561041d565b6040517fb6576bdf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169063b6576bdf90610ccd9085908590600401611981565b602060405180830381865afa158015610cea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0e9190611995565b3360009081526003602090815260408083208380529091529020555050505050565b6000610d3f60208401846118b0565b73ffffffffffffffffffffffffffffffffffffffff1603610d8c576040517fd8f59fa500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260016020819052604082209091610dab6101c8866119ae565b8152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790558015610e34573373ffffffffffffffffffffffffffffffffffffffff167f2cceac5555b0ca45a3744ced542f54b56ad2eb45e521962372eef212a2cbf361836040516104619190611fc3565b5050565b3360008181526002602090815260409182902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff861690811790915591519182527f41f583e2d25b3921afe66987b63b0b5e4cf2acbbbed4a477fd19a22180f3f859910160405180910390a250565b60008151600014610f84576000610ed584610c3f565b604051602001610ee791815260200190565b604051602081830303815290604052805190602001209050610f48836000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836110e1565b610f7e576040517f4a82146400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50610ffa565b610f8d83610c3f565b73ffffffffffffffffffffffffffffffffffffffff8516600090815260016020908152604080832084845290915290205490915060ff16610ffa576040517f7a93323400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff80861660009081526002602052604081205490911680156110d2576040517ff9ae35a200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063f9ae35a2906110899086908a908a908a9060040161201c565b602060405180830381865afa1580156110a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ca9190611a68565b9150506110d8565b60019150505b95945050505050565b6000826110ee85846110f7565b14949350505050565b600081815b845181101561113c576111288286838151811061111b5761111b61205a565b6020026020010151611146565b91508061113481612089565b9150506110fc565b5090505b92915050565b6000818310611162576000828152602084905260409020610ffa565b5060009182526020526040902090565b60006060828403121561118457600080fd5b50919050565b73ffffffffffffffffffffffffffffffffffffffff811681146111ac57600080fd5b50565b60008083601f8401126111c157600080fd5b50813567ffffffffffffffff8111156111d957600080fd5b6020830191508360208285010111156111f157600080fd5b9250929050565b80151581146111ac57600080fd5b8035611211816111f8565b919050565b60008060008060006080868803121561122e57600080fd5b853567ffffffffffffffff8082111561124657600080fd5b61125289838a01611172565b9650602088013591506112648261118a565b9094506040870135908082111561127a57600080fd5b50611287888289016111af565b909450925050606086013561129b816111f8565b809150509295509295909350565b60006040828403121561118457600080fd5b600080604083850312156112ce57600080fd5b82359150602083013567ffffffffffffffff8111156112ec57600080fd5b6112f8858286016112a9565b9150509250929050565b80356112118161118a565b6000806040838503121561132057600080fd5b823561132b8161118a565b946020939093013593505050565b6000806000806000806080878903121561135257600080fd5b863561135d8161118a565b9550602087013567ffffffffffffffff8082111561137a57600080fd5b6113868a838b01611172565b9650604089013591508082111561139c57600080fd5b6113a88a838b016111af565b909650945060608901359150808211156113c157600080fd5b818901915089601f8301126113d557600080fd5b8135818111156113e457600080fd5b8a60208260051b85010111156113f957600080fd5b6020830194508093505050509295509295509295565b805173ffffffffffffffffffffffffffffffffffffffff1682526020810151611450602084018273ffffffffffffffffffffffffffffffffffffffff169052565b506040810151611478604084018273ffffffffffffffffffffffffffffffffffffffff169052565b50606081015160608301526080810151608083015260a08101516114a460a084018263ffffffff169052565b5060c081015160c083015260e081015160e0830152610100808201518184015250610120808201516114d98285018215159052565b5050610140818101519083015261016090810151910152565b6000815180845260005b81811015611518576020818501810151868301820152016114fc565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60006101a0611565838661140f565b806101808401526110d8818401856114f2565b600080600080600080600080600060e08a8c03121561159657600080fd5b89356115a18161118a565b985060208a01356115b18161118a565b975060408a0135965060608a0135955060808a0135945060a08a013567ffffffffffffffff808211156115e357600080fd5b6115ef8d838e016111af565b909650945060c08c013591508082111561160857600080fd5b506116158c828d016111af565b915080935050809150509295985092959850929598565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561167e5761167e61162c565b60405290565b604051610180810167ffffffffffffffff8111828210171561167e5761167e61162c565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156116ef576116ef61162c565b604052919050565b600082601f83011261170857600080fd5b813567ffffffffffffffff8111156117225761172261162c565b61175360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016116a8565b81815284602083860101111561176857600080fd5b816020850160208301376000918101602001919091529392505050565b60006060828403121561179757600080fd5b61179f61165b565b905081356117ac8161118a565b815260208281013590820152604082013567ffffffffffffffff8111156117d257600080fd5b6117de848285016116f7565b60408301525092915050565b6000602082840312156117fc57600080fd5b813567ffffffffffffffff81111561181357600080fd5b61181f84828501611785565b949350505050565b60008060008060006080868803121561183f57600080fd5b85359450602086013567ffffffffffffffff8082111561185e57600080fd5b61186a89838a016112a9565b95506040880135915061187c8261118a565b9093506060870135908082111561189257600080fd5b5061189f888289016111af565b969995985093965092949392505050565b6000602082840312156118c257600080fd5b8135610ffa8161118a565b600080604083850312156118e057600080fd5b823567ffffffffffffffff8111156118f757600080fd5b61190385828601611172565b9250506020830135611914816111f8565b809150509250929050565b60006020828403121561193157600080fd5b5035919050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60208152600061181f602083018486611938565b6000602082840312156119a757600080fd5b5051919050565b60006111403683611785565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126119ef57600080fd5b830160208101925035905067ffffffffffffffff811115611a0f57600080fd5b8036038213156111f157600080fd5b82815260406020820152813560408201526000611a3e60208401846119ba565b60406060850152611a53608085018284611938565b9695505050505050565b8051611211816111f8565b600060208284031215611a7a57600080fd5b8151610ffa816111f8565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611aba57600080fd5b83018035915067ffffffffffffffff821115611ad557600080fd5b6020019150368190038213156111f157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff808a16835280891660208401525086604083015260a06060830152611b2a60a083018688611938565b8281036080840152611b3d818587611938565b9a9950505050505050505050565b80516112118161118a565b63ffffffff811681146111ac57600080fd5b805161121181611b56565b60006101808284031215611b8657600080fd5b611b8e611684565b611b9783611b4b565b8152611ba560208401611b4b565b6020820152611bb660408401611b4b565b60408201526060830151606082015260808301516080820152611bdb60a08401611b68565b60a082015260c083015160c082015260e083015160e0820152610100808401518183015250610120611c0e818501611a5d565b908201526101408381015190820152610160928301519281019290925250919050565b73ffffffffffffffffffffffffffffffffffffffff815116825260208101516020830152600060408201516060604085015261181f60608501826114f2565b805160608084528151908401819052600091602091908201906080860190845b81811015611cac57835183529284019291840191600101611c90565b505082850151915085810383870152611cc58183611c31565b92505050604083015184820360408601526110d882826114f2565b60006101a0611cef838661140f565b806101808401526110d881840185611c70565b6101808101611140828461140f565b602081526000610ffa6020830184611c70565b848152836020820152608060408201526000611d4360808301856114f2565b8281036060840152611d5581856114f2565b979650505050505050565b60006020808385031215611d7357600080fd5b823567ffffffffffffffff80821115611d8b57600080fd5b9084019060608287031215611d9f57600080fd5b611da761165b565b823582811115611db657600080fd5b8301601f81018813611dc757600080fd5b803583811115611dd957611dd961162c565b8060051b611de88782016116a8565b918252828101870191878101908b841115611e0257600080fd5b938801935b83851015611e2057843582529388019390880190611e07565b8552505050508284013582811115611e3757600080fd5b611e4388828601611785565b85830152506040830135935081841115611e5c57600080fd5b611e68878585016116f7565b60408201529695505050505050565b803561121181611b56565b60006101808284031215611e9557600080fd5b611e9d611684565b611ea683611302565b8152611eb460208401611302565b6020820152611ec560408401611302565b60408201526060830135606082015260808301356080820152611eea60a08401611e77565b60a082015260c083013560c082015260e083013560e0820152610100808401358183015250610120611f1d818501611206565b908201526101408381013590820152610160928301359281019290925250919050565b600061026073ffffffffffffffffffffffffffffffffffffffff808c168452808b166020850152508860408401528760608401528660808401528060a0840152611f8c818401876114f2565b905082810360c0840152611fa081866114f2565b915050610c3260e083018461140f565b602081526000610ffa6020830184611c31565b6020815260008235611fd48161118a565b73ffffffffffffffffffffffffffffffffffffffff81166020840152506020830135604083015261200860408401846119ba565b6060808501526110d8608085018284611938565b60006101e061202b838861140f565b85610180840152806101a084015261204581840186611c31565b90508281036101c0840152611d5581856114f2565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036120e1577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220e23d95217a10665974c83c4ea22bd347daab0570e397236749f8f5063e1b702164736f6c63430008130033",
    "sourceMap": "579:11686:136:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4518:524;;;;;;:::i;:::-;;:::i;:::-;;2573:154;;;;;;:::i;:::-;;:::i;2014:62::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;3199:25:170;;;3187:2;3172:18;2014:62:136;;;;;;;;7821:2111;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;6022:1259::-;;;;;;:::i;:::-;;:::i;:::-;;;8231:66:170;8219:79;;;8201:98;;8189:2;8174:18;6022:1259:136;8057:248:170;10165:153:136;;;;;;:::i;:::-;;:::i;3136:425::-;;;;;;:::i;:::-;;:::i;1906:48::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12281:42:170;12269:55;;;12251:74;;12239:2;12224:18;1906:48:136;12085:246:170;1794:64:136;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12501:14:170;;12494:22;12476:41;;12464:2;12449:18;1794:64:136;12336:187:170;3767:358:136;;;;;;:::i;:::-;;:::i;5517:154::-;;;;;;:::i;:::-;;:::i;5207:175::-;;;;;;:::i;:::-;5280:10;5311:5;5267:24;;;:12;:24;;;;;;;;:41;;;;;;;;:49;;;;;;5326:19;;;:7;:19;;;;;:36;;;;;;;;;:49;5207:175;1702:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;1611;;;;;4518:524;4719:24;4726:6;4734:8;4719:6;:24::i;:::-;5013:22;;;;;:16;;;;;;:22;;5030:4;;;;5013:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4985:10;4977:19;;;;:7;:19;;;;;;4997:12;;5002:6;4997:12;:::i;:::-;4977:33;;;;;;;;;;;-1:-1:-1;4977:33:136;:58;-1:-1:-1;;;;;4518:524:136:o;2573:154::-;2649:10;2643:5;:17;;;;;;;;;;;;:24;;;2682:38;;;;;2663:4;;2714:5;;2682:38;:::i;:::-;;;;;;;;2573:154;;:::o;7821:2111::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8080:22:136;8191:11;8205:27;8211:5;8205:27;8218:6;8205:27;:::i;:::-;8226:5;;8205:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8205:5:136;;-1:-1:-1;;;8205:27:136:i;:::-;8191:41;-1:-1:-1;8353:14:136;;;;:6;:14;:::i;:::-;8318:137;;;;;8401:44;8318:137;;;8201:98:170;8318:69:136;;;;;;;;8174:18:170;;8318:137:136;;;;;;;;;;;;;;;;;;-1:-1:-1;8318:137:136;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;8314:332;;8612:23;;;;;;;;;;;;;;8314:332;8500:9;8495:79;;8536:23;;;;;;;;;;;;;;8495:79;8456:128;8699:14;;;;:6;:14;:::i;:::-;8664:69;;;8747:5;8754:10;8766:3;8771:18;;;;:6;:18;:::i;:::-;8791:13;;8664:150;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8656:158;-1:-1:-1;8902:53:136;8914:5;8921:3;8902:53;8926:6;8902:53;:::i;:::-;8934:13;;8902:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8949:5:136;;-1:-1:-1;8902:11:136;;-1:-1:-1;;8902:53:136:i;:::-;8896:115;;8979:21;;;;;;;;;;;;;;8896:115;9025:93;;;;;9076:41;9025:93;;;8201:98:170;9025:50:136;;;;;;8174:18:170;;9025:93:136;;;;;;;;;;;;;;;;;;-1:-1:-1;9025:93:136;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;9021:905;;9839:75;;;;;;;;;;;;;;;;;;;;;9832:5;;9839:75;;9907:5;;;;;;9839:75;;;;9907:5;;9839:75;9907:5;9839:75;;;;;;;;;-1:-1:-1;;;9839:75:136;;;-1:-1:-1;9839:75:136;;;9862:6;9839:75;:::i;:::-;;;;;9885:13;;9839:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9839:75:136;;-1:-1:-1;9821:94:136;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9809:106;;9021:905;;;9185:9;9180:80;;9221:24;;;;;;;;;;;;;;9180:80;9388:15;9421:19;9469:5;9458:17;;;;;;;;:::i;:::-;;;;;;;;;;;9504:75;9458:17;9504:75;;;;;;;;;;;;;;;;9458:17;;;;;9504:75;9572:5;;;;;;9504:75;;;;9572:5;;9504:75;9572:5;9504:75;;;;;;;;;-1:-1:-1;;;9504:75:136;;;-1:-1:-1;9504:75:136;;;9527:6;9504:75;:::i;:::-;;;;;9550:13;;9504:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9504:75:136;;-1:-1:-1;9493:87:136;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;9285:309;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9021:905:136;8104:1828;7821:2111;;;;;;;;;:::o;6022:1259::-;6286:12;;6378:36;;;;6389:7;6378:36;:::i;:::-;6346:68;;6469:11;6483:53;6497:4;6504:8;:15;;;6521:8;:14;;;6483:5;:53::i;:::-;6469:67;-1:-1:-1;6597:27:136;6627:40;;;;6638:10;6627:40;:::i;:::-;6597:70;;6755:79;6775:4;6782:3;6787:8;:15;;;6804:8;:22;;;6828:5;6755:11;:79::i;:::-;6749:141;;6858:21;;;;;;;;;;;;;;6749:141;6974:8;:15;;;:23;;;:30;;;7026:4;7045:6;7065:5;7084:16;7114:3;7131:8;:15;;;:27;;;7172:8;:22;;;7208:5;6974:249;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7241:33:136;;-1:-1:-1;;;;;;;6022:1259:136;;;;;;;;;;;;:::o;10165:153::-;10256:7;10303:6;10292:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;10282:29;;;;;;10275:36;;10165:153;;;:::o;3136:425::-;3275:20;3283:4;3289:5;3275:7;:20::i;:::-;3532:22;;;;;:16;;;;;;:22;;3549:4;;;;3532:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3506:10;3498:19;;;;:7;:19;;;;;;;;:31;;;;;;;;:56;-1:-1:-1;;;;;3136:425:136:o;3767:358::-;3914:1;3887:14;;;;:6;:14;:::i;:::-;3879:37;;;3873:94;;3940:16;;;;;;;;;;;;;;3873:94;3990:10;3977:24;;;;4018:4;3977:24;;;;;;;4018:4;;4002:12;;4007:6;4002:12;:::i;:::-;3977:38;;;;;;;;;;;-1:-1:-1;3977:38:136;:45;;;;;;;;;;;;;4032:87;;;;4089:10;4065:43;;;4101:6;4065:43;;;;;;:::i;4032:87::-;3767:358;;:::o;5517:154::-;5591:10;5580:22;;;;:10;:22;;;;;;;;;:34;;;;:22;:34;;;;;;;;5629:35;;12251:74:170;;;5629:35:136;;12224:18:170;5629:35:136;;;;;;;5517:154;:::o;10702:721::-;10859:11;10890:5;:12;10906:1;10890:17;10886:531;;10986:12;11024;11029:6;11024:4;:12::i;:::-;11011:26;;;;;;26984:19:170;;27028:2;27019:12;;26855:182;11011:26:136;;;;;;;;;;;;;11001:37;;;;;;10986:52;;11101:45;11120:5;11127;:12;11133:5;11127:12;;;;;;;;;;;;;;;;11141:4;11101:18;:45::i;:::-;11096:108;;11173:16;;;;;;;;;;;;;;11096:108;10909:305;10886:531;;;11288:12;11293:6;11288:4;:12::i;:::-;11319:19;;;;;;;:12;:19;;;;;;;;:24;;;;;;;;;11282:18;;-1:-1:-1;11319:24:136;;11314:93;;11370:22;;;;;;;;;;;;;;11314:93;10702:721;;;;;:::o;11830:433::-;12096:17;;;;12061:4;12096:17;;;:10;:17;;;;;;12061:4;;12096:17;12127:28;;12123:113;;12178:47;;;;;:12;;;;;;:47;;12191:5;;12198:3;;12203:6;;12211:13;;12178:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12171:54;;;;;12123:113;12252:4;12245:11;;;11830:433;;;;;;;;:::o;1156:154:6:-;1247:4;1299;1270:25;1283:5;1290:4;1270:12;:25::i;:::-;:33;;1156:154;-1:-1:-1;;;;1156:154:6:o;1934:290::-;2017:7;2059:4;2017:7;2073:116;2097:5;:12;2093:1;:16;2073:116;;;2145:33;2155:12;2169:5;2175:1;2169:8;;;;;;;;:::i;:::-;;;;;;;2145:9;:33::i;:::-;2130:48;-1:-1:-1;2111:3:6;;;;:::i;:::-;;;;2073:116;;;-1:-1:-1;2205:12:6;-1:-1:-1;1934:290:6;;;;;:::o;9205:147::-;9268:7;9298:1;9294;:5;:51;;9426:13;9517:15;;;9552:4;9545:15;;;9598:4;9582:21;;9294:51;;;-1:-1:-1;9426:13:6;9517:15;;;9552:4;9545:15;9598:4;9582:21;;;9205:147::o;14:170:170:-;89:5;134:2;125:6;120:3;116:16;112:25;109:45;;;150:1;147;140:12;109:45;-1:-1:-1;172:6:170;14:170;-1:-1:-1;14:170:170:o;189:169::-;290:42;283:5;279:54;272:5;269:65;259:93;;348:1;345;338:12;259:93;189:169;:::o;363:347::-;414:8;424:6;478:3;471:4;463:6;459:17;455:27;445:55;;496:1;493;486:12;445:55;-1:-1:-1;519:20:170;;562:18;551:30;;548:50;;;594:1;591;584:12;548:50;631:4;623:6;619:17;607:29;;683:3;676:4;667:6;659;655:19;651:30;648:39;645:59;;;700:1;697;690:12;645:59;363:347;;;;;:::o;715:118::-;801:5;794:13;787:21;780:5;777:32;767:60;;823:1;820;813:12;838:128;903:20;;932:28;903:20;932:28;:::i;:::-;838:128;;;:::o;971:1004::-;1131:6;1139;1147;1155;1163;1216:3;1204:9;1195:7;1191:23;1187:33;1184:53;;;1233:1;1230;1223:12;1184:53;1273:9;1260:23;1302:18;1343:2;1335:6;1332:14;1329:34;;;1359:1;1356;1349:12;1329:34;1382:82;1456:7;1447:6;1436:9;1432:22;1382:82;:::i;:::-;1372:92;;1514:2;1503:9;1499:18;1486:32;1473:45;;1527:46;1567:5;1527:46;:::i;:::-;1592:5;;-1:-1:-1;1650:2:170;1635:18;;1622:32;;1666:16;;;1663:36;;;1695:1;1692;1685:12;1663:36;;1734:60;1786:7;1775:8;1764:9;1760:24;1734:60;:::i;:::-;1813:8;;-1:-1:-1;1708:86:170;-1:-1:-1;;1900:2:170;1885:18;;1872:32;1913:30;1872:32;1913:30;:::i;:::-;1962:7;1952:17;;;971:1004;;;;;;;;:::o;1980:153::-;2038:5;2083:2;2074:6;2069:3;2065:16;2061:25;2058:45;;;2099:1;2096;2089:12;2138:421;2232:6;2240;2293:2;2281:9;2272:7;2268:23;2264:32;2261:52;;;2309:1;2306;2299:12;2261:52;2345:9;2332:23;2322:33;;2406:2;2395:9;2391:18;2378:32;2433:18;2425:6;2422:30;2419:50;;;2465:1;2462;2455:12;2419:50;2488:65;2545:7;2536:6;2525:9;2521:22;2488:65;:::i;:::-;2478:75;;;2138:421;;;;;:::o;2564:149::-;2632:20;;2661:46;2632:20;2661:46;:::i;2718:330::-;2786:6;2794;2847:2;2835:9;2826:7;2822:23;2818:32;2815:52;;;2863:1;2860;2853:12;2815:52;2902:9;2889:23;2921:46;2961:5;2921:46;:::i;:::-;2986:5;3038:2;3023:18;;;;3010:32;;-1:-1:-1;;;2718:330:170:o;3235:1318::-;3402:6;3410;3418;3426;3434;3442;3495:3;3483:9;3474:7;3470:23;3466:33;3463:53;;;3512:1;3509;3502:12;3463:53;3551:9;3538:23;3570:46;3610:5;3570:46;:::i;:::-;3635:5;-1:-1:-1;3691:2:170;3676:18;;3663:32;3714:18;3744:14;;;3741:34;;;3771:1;3768;3761:12;3741:34;3794:82;3868:7;3859:6;3848:9;3844:22;3794:82;:::i;:::-;3784:92;;3929:2;3918:9;3914:18;3901:32;3885:48;;3958:2;3948:8;3945:16;3942:36;;;3974:1;3971;3964:12;3942:36;4013:60;4065:7;4054:8;4043:9;4039:24;4013:60;:::i;:::-;4092:8;;-1:-1:-1;3987:86:170;-1:-1:-1;4180:2:170;4165:18;;4152:32;;-1:-1:-1;4196:16:170;;;4193:36;;;4225:1;4222;4215:12;4193:36;4263:8;4252:9;4248:24;4238:34;;4310:7;4303:4;4299:2;4295:13;4291:27;4281:55;;4332:1;4329;4322:12;4281:55;4372:2;4359:16;4398:2;4390:6;4387:14;4384:34;;;4414:1;4411;4404:12;4384:34;4467:7;4462:2;4452:6;4449:1;4445:14;4441:2;4437:23;4433:32;4430:45;4427:65;;;4488:1;4485;4478:12;4427:65;4519:2;4515;4511:11;4501:21;;4541:6;4531:16;;;;;3235:1318;;;;;;;;:::o;4893:1045::-;4978:12;;4643:42;4632:54;4620:67;;5042:4;5035:5;5031:16;5025:23;5057:56;5107:4;5102:3;5098:14;5084:12;4643:42;4632:54;4620:67;;4558:135;5057:56;;5161:4;5154:5;5150:16;5144:23;5176:58;5228:4;5223:3;5219:14;5203;4643:42;4632:54;4620:67;;4558:135;5176:58;;5283:4;5276:5;5272:16;5266:23;5259:4;5254:3;5250:14;5243:47;5339:4;5332:5;5328:16;5322:23;5315:4;5310:3;5306:14;5299:47;5394:4;5387:5;5383:16;5377:23;5409:49;5452:4;5447:3;5443:14;5427;4774:10;4763:22;4751:35;;4698:94;5409:49;;5507:4;5500:5;5496:16;5490:23;5483:4;5478:3;5474:14;5467:47;5563:4;5556:5;5552:16;5546:23;5539:4;5534:3;5530:14;5523:47;5589:6;5642:2;5635:5;5631:14;5625:21;5620:2;5615:3;5611:12;5604:43;;5666:6;5720:2;5713:5;5709:14;5703:21;5733:45;5774:2;5769:3;5765:12;5749:14;4867:13;4860:21;4848:34;;4797:91;5733:45;-1:-1:-1;;5797:6:170;5839:14;;;5833:21;5819:12;;;5812:43;5874:6;5916:14;;;5910:21;5896:12;;5889:43;4893:1045::o;5943:481::-;5984:3;6022:5;6016:12;6049:6;6044:3;6037:19;6074:1;6084:162;6098:6;6095:1;6092:13;6084:162;;;6160:4;6216:13;;;6212:22;;6206:29;6188:11;;;6184:20;;6177:59;6113:12;6084:162;;;6088:3;6291:1;6284:4;6275:6;6270:3;6266:16;6262:27;6255:38;6413:4;6343:66;6338:2;6330:6;6326:15;6322:88;6317:3;6313:98;6309:109;6302:116;;;5943:481;;;;:::o;6429:373::-;6613:4;6642:3;6654:41;6685:9;6677:6;6654:41;:::i;:::-;6732:2;6726:3;6715:9;6711:19;6704:31;6752:44;6792:2;6781:9;6777:18;6769:6;6752:44;:::i;6807:1245::-;6956:6;6964;6972;6980;6988;6996;7004;7012;7020;7073:3;7061:9;7052:7;7048:23;7044:33;7041:53;;;7090:1;7087;7080:12;7041:53;7129:9;7116:23;7148:46;7188:5;7148:46;:::i;:::-;7213:5;-1:-1:-1;7270:2:170;7255:18;;7242:32;7283:48;7242:32;7283:48;:::i;:::-;7350:7;-1:-1:-1;7404:2:170;7389:18;;7376:32;;-1:-1:-1;7455:2:170;7440:18;;7427:32;;-1:-1:-1;7506:3:170;7491:19;;7478:33;;-1:-1:-1;7562:3:170;7547:19;;7534:33;7586:18;7616:14;;;7613:34;;;7643:1;7640;7633:12;7613:34;7682:58;7732:7;7723:6;7712:9;7708:22;7682:58;:::i;:::-;7759:8;;-1:-1:-1;7656:84:170;-1:-1:-1;7847:3:170;7832:19;;7819:33;;-1:-1:-1;7864:16:170;;;7861:36;;;7893:1;7890;7883:12;7861:36;;7932:60;7984:7;7973:8;7962:9;7958:24;7932:60;:::i;:::-;7906:86;;8011:8;8001:18;;;8038:8;8028:18;;;6807:1245;;;;;;;;;;;:::o;8310:184::-;8362:77;8359:1;8352:88;8459:4;8456:1;8449:15;8483:4;8480:1;8473:15;8499:253;8571:2;8565:9;8613:4;8601:17;;8648:18;8633:34;;8669:22;;;8630:62;8627:88;;;8695:18;;:::i;:::-;8731:2;8724:22;8499:253;:::o;8757:252::-;8829:2;8823:9;8871:3;8859:16;;8905:18;8890:34;;8926:22;;;8887:62;8884:88;;;8952:18;;:::i;9014:334::-;9085:2;9079:9;9141:2;9131:13;;9146:66;9127:86;9115:99;;9244:18;9229:34;;9265:22;;;9226:62;9223:88;;;9291:18;;:::i;:::-;9327:2;9320:22;9014:334;;-1:-1:-1;9014:334:170:o;9353:589::-;9395:5;9448:3;9441:4;9433:6;9429:17;9425:27;9415:55;;9466:1;9463;9456:12;9415:55;9502:6;9489:20;9528:18;9524:2;9521:26;9518:52;;;9550:18;;:::i;:::-;9594:114;9702:4;9633:66;9626:4;9622:2;9618:13;9614:86;9610:97;9594:114;:::i;:::-;9733:2;9724:7;9717:19;9779:3;9772:4;9767:2;9759:6;9755:15;9751:26;9748:35;9745:55;;;9796:1;9793;9786:12;9745:55;9861:2;9854:4;9846:6;9842:17;9835:4;9826:7;9822:18;9809:55;9909:1;9884:16;;;9902:4;9880:27;9873:38;;;;9888:7;9353:589;-1:-1:-1;;;9353:589:170:o;9947:577::-;10016:5;10064:4;10052:9;10047:3;10043:19;10039:30;10036:50;;;10082:1;10079;10072:12;10036:50;10104:22;;:::i;:::-;10095:31;;10163:9;10150:23;10182:48;10222:7;10182:48;:::i;:::-;10239:22;;10321:2;10306:18;;;10293:32;10277:14;;;10270:56;10377:2;10362:18;;10349:32;10404:18;10393:30;;10390:50;;;10436:1;10433;10426:12;10390:50;10472:45;10513:3;10504:6;10493:9;10489:22;10472:45;:::i;:::-;10467:2;10460:5;10456:14;10449:69;;9947:577;;;;:::o;10529:376::-;10629:6;10682:2;10670:9;10661:7;10657:23;10653:32;10650:52;;;10698:1;10695;10688:12;10650:52;10738:9;10725:23;10771:18;10763:6;10760:30;10757:50;;;10803:1;10800;10793:12;10757:50;10826:73;10891:7;10882:6;10871:9;10867:22;10826:73;:::i;:::-;10816:83;10529:376;-1:-1:-1;;;;10529:376:170:o;10910:903::-;11056:6;11064;11072;11080;11088;11141:3;11129:9;11120:7;11116:23;11112:33;11109:53;;;11158:1;11155;11148:12;11109:53;11194:9;11181:23;11171:33;;11255:2;11244:9;11240:18;11227:32;11278:18;11319:2;11311:6;11308:14;11305:34;;;11335:1;11332;11325:12;11305:34;11358:65;11415:7;11406:6;11395:9;11391:22;11358:65;:::i;:::-;11348:75;;11473:2;11462:9;11458:18;11445:32;11432:45;;11486:46;11526:5;11486:46;:::i;:::-;11551:5;;-1:-1:-1;11609:2:170;11594:18;;11581:32;;11625:16;;;11622:36;;;11654:1;11651;11644:12;11622:36;;11693:60;11745:7;11734:8;11723:9;11719:24;11693:60;:::i;:::-;10910:903;;;;-1:-1:-1;10910:903:170;;-1:-1:-1;11772:8:170;;11667:86;10910:903;-1:-1:-1;;;10910:903:170:o;11818:262::-;11877:6;11930:2;11918:9;11909:7;11905:23;11901:32;11898:52;;;11946:1;11943;11936:12;11898:52;11985:9;11972:23;12004:46;12044:5;12004:46;:::i;12528:516::-;12636:6;12644;12697:2;12685:9;12676:7;12672:23;12668:32;12665:52;;;12713:1;12710;12703:12;12665:52;12753:9;12740:23;12786:18;12778:6;12775:30;12772:50;;;12818:1;12815;12808:12;12772:50;12841:82;12915:7;12906:6;12895:9;12891:22;12841:82;:::i;:::-;12831:92;;;12973:2;12962:9;12958:18;12945:32;12986:28;13008:5;12986:28;:::i;:::-;13033:5;13023:15;;;12528:516;;;;;:::o;13336:180::-;13395:6;13448:2;13436:9;13427:7;13423:23;13419:32;13416:52;;;13464:1;13461;13454:12;13416:52;-1:-1:-1;13487:23:170;;13336:180;-1:-1:-1;13336:180:170:o;13521:325::-;13609:6;13604:3;13597:19;13661:6;13654:5;13647:4;13642:3;13638:14;13625:43;;13713:1;13706:4;13697:6;13692:3;13688:16;13684:27;13677:38;13579:3;13835:4;13765:66;13760:2;13752:6;13748:15;13744:88;13739:3;13735:98;13731:109;13724:116;;13521:325;;;;:::o;13851:244::-;14008:2;13997:9;13990:21;13971:4;14028:61;14085:2;14074:9;14070:18;14062:6;14054;14028:61;:::i;14100:184::-;14170:6;14223:2;14211:9;14202:7;14198:23;14194:32;14191:52;;;14239:1;14236;14229:12;14191:52;-1:-1:-1;14262:16:170;;14100:184;-1:-1:-1;14100:184:170:o;14289:240::-;14423:9;14460:63;14508:14;14501:5;14460:63;:::i;14534:559::-;14592:5;14599:6;14659:3;14646:17;14741:66;14730:8;14714:14;14710:29;14706:102;14686:18;14682:127;14672:155;;14823:1;14820;14813:12;14672:155;14851:33;;14955:4;14942:18;;;-1:-1:-1;14903:21:170;;-1:-1:-1;14983:18:170;14972:30;;14969:50;;;15015:1;15012;15005:12;14969:50;15062:6;15046:14;15042:27;15035:5;15031:39;15028:59;;;15083:1;15080;15073:12;15098:544;15305:6;15294:9;15287:25;15348:2;15343;15332:9;15328:18;15321:30;15400:6;15387:20;15382:2;15371:9;15367:18;15360:48;15268:4;15451:55;15502:2;15494:6;15490:15;15482:6;15451:55;:::i;:::-;15542:2;15537;15526:9;15522:18;15515:30;15562:74;15631:3;15620:9;15616:19;15602:12;15588;15562:74;:::i;:::-;15554:82;15098:544;-1:-1:-1;;;;;;15098:544:170:o;15941:132::-;16017:13;;16039:28;16017:13;16039:28;:::i;16078:245::-;16145:6;16198:2;16186:9;16177:7;16173:23;16169:32;16166:52;;;16214:1;16211;16204:12;16166:52;16246:9;16240:16;16265:28;16287:5;16265:28;:::i;16328:580::-;16405:4;16411:6;16471:11;16458:25;16561:66;16550:8;16534:14;16530:29;16526:102;16506:18;16502:127;16492:155;;16643:1;16640;16633:12;16492:155;16670:33;;16722:20;;;-1:-1:-1;16765:18:170;16754:30;;16751:50;;;16797:1;16794;16787:12;16751:50;16830:4;16818:17;;-1:-1:-1;16861:14:170;16857:27;;;16847:38;;16844:58;;;16898:1;16895;16888:12;16913:726;17173:4;17202:42;17283:2;17275:6;17271:15;17260:9;17253:34;17335:2;17327:6;17323:15;17318:2;17307:9;17303:18;17296:43;;17375:6;17370:2;17359:9;17355:18;17348:34;17418:3;17413:2;17402:9;17398:18;17391:31;17445:62;17502:3;17491:9;17487:19;17479:6;17471;17445:62;:::i;:::-;17556:9;17548:6;17544:22;17538:3;17527:9;17523:19;17516:51;17584:49;17626:6;17618;17610;17584:49;:::i;:::-;17576:57;16913:726;-1:-1:-1;;;;;;;;;;16913:726:170:o;17644:161::-;17731:13;;17753:46;17731:13;17753:46;:::i;17810:121::-;17895:10;17888:5;17884:22;17877:5;17874:33;17864:61;;17921:1;17918;17911:12;17936:136;18014:13;;18036:30;18014:13;18036:30;:::i;18077:1155::-;18170:6;18223:3;18211:9;18202:7;18198:23;18194:33;18191:53;;;18240:1;18237;18230:12;18191:53;18266:22;;:::i;:::-;18311:48;18349:9;18311:48;:::i;:::-;18304:5;18297:63;18392:57;18445:2;18434:9;18430:18;18392:57;:::i;:::-;18387:2;18380:5;18376:14;18369:81;18482:57;18535:2;18524:9;18520:18;18482:57;:::i;:::-;18477:2;18470:5;18466:14;18459:81;18593:2;18582:9;18578:18;18572:25;18567:2;18560:5;18556:14;18549:49;18652:3;18641:9;18637:19;18631:26;18625:3;18618:5;18614:15;18607:51;18691:49;18735:3;18724:9;18720:19;18691:49;:::i;:::-;18685:3;18678:5;18674:15;18667:74;18795:3;18784:9;18780:19;18774:26;18768:3;18761:5;18757:15;18750:51;18855:3;18844:9;18840:19;18834:26;18828:3;18821:5;18817:15;18810:51;18880:3;18936:2;18925:9;18921:18;18915:25;18910:2;18903:5;18899:14;18892:49;;18960:3;18995:46;19037:2;19026:9;19022:18;18995:46;:::i;:::-;18979:14;;;18972:70;19061:3;19102:18;;;19096:25;19080:14;;;19073:49;19141:3;19182:18;;;19176:25;19160:14;;;19153:49;;;;-1:-1:-1;18983:5:170;18077:1155;-1:-1:-1;18077:1155:170:o;19237:370::-;19350:42;19342:5;19336:12;19332:61;19327:3;19320:74;19443:4;19436:5;19432:16;19426:23;19419:4;19414:3;19410:14;19403:47;19302:3;19496:4;19489:5;19485:16;19479:23;19534:4;19527;19522:3;19518:14;19511:28;19555:46;19595:4;19590:3;19586:14;19572:12;19555:46;:::i;19612:914::-;19741:12;;19707:4;19762:17;;;19828:19;;19698:14;;;19856:20;;;19668:3;;19926:4;;19953:21;;;;19903:3;19894:13;;;19668:3;20002:175;20016:6;20013:1;20010:13;20002:175;;;20079:13;;20065:28;;20152:15;;;;20115:14;;;;20038:1;20031:9;20002:175;;;20006:3;;20225:2;20218:5;20214:14;20208:21;20186:43;;20270:3;20263:5;20259:15;20254:2;20249:3;20245:12;20238:37;20298:63;20355:5;20339:14;20298:63;:::i;:::-;20284:77;;;;20409:4;20402:5;20398:16;20392:23;20459:3;20451:6;20447:16;20440:4;20435:3;20431:14;20424:40;20480;20513:6;20497:14;20480:40;:::i;20531:434::-;20761:4;20790:3;20802:41;20833:9;20825:6;20802:41;:::i;:::-;20880:2;20874:3;20863:9;20859:19;20852:31;20900:59;20955:2;20944:9;20940:18;20932:6;20900:59;:::i;20970:240::-;21150:3;21135:19;;21163:41;21139:9;21186:6;21163:41;:::i;21215:278::-;21408:2;21397:9;21390:21;21371:4;21428:59;21483:2;21472:9;21468:18;21460:6;21428:59;:::i;21498:521::-;21747:6;21736:9;21729:25;21790:6;21785:2;21774:9;21770:18;21763:34;21833:3;21828:2;21817:9;21813:18;21806:31;21710:4;21860:45;21900:3;21889:9;21885:19;21877:6;21860:45;:::i;:::-;21953:9;21945:6;21941:22;21936:2;21925:9;21921:18;21914:50;21981:32;22006:6;21998;21981:32;:::i;:::-;21973:40;21498:521;-1:-1:-1;;;;;;;21498:521:170:o;22024:1572::-;22115:6;22146:2;22189;22177:9;22168:7;22164:23;22160:32;22157:52;;;22205:1;22202;22195:12;22157:52;22245:9;22232:23;22274:18;22315:2;22307:6;22304:14;22301:34;;;22331:1;22328;22321:12;22301:34;22354:22;;;;22410:4;22392:16;;;22388:27;22385:47;;;22428:1;22425;22418:12;22385:47;22454:22;;:::i;:::-;22514:2;22501:16;22542:2;22532:8;22529:16;22526:36;;;22558:1;22555;22548:12;22526:36;22581:17;;22629:4;22621:13;;22617:27;-1:-1:-1;22607:55:170;;22658:1;22655;22648:12;22607:55;22694:2;22681:16;22716:2;22712;22709:10;22706:36;;;22722:18;;:::i;:::-;22768:2;22765:1;22761:10;22791:28;22815:2;22811;22807:11;22791:28;:::i;:::-;22853:15;;;22923:11;;;22919:20;;;22884:12;;;;22951:19;;;22948:39;;;22983:1;22980;22973:12;22948:39;23007:11;;;;23027:142;23043:6;23038:3;23035:15;23027:142;;;23109:17;;23097:30;;23060:12;;;;23147;;;;23027:142;;;23178:20;;-1:-1:-1;;;;23236:11:170;;;23223:25;23260:16;;;23257:36;;;23289:1;23286;23279:12;23257:36;23325:68;23385:7;23374:8;23370:2;23366:17;23325:68;:::i;:::-;23320:2;23313:5;23309:14;23302:92;;23440:2;23436;23432:11;23419:25;23403:41;;23469:2;23459:8;23456:16;23453:36;;;23485:1;23482;23475:12;23453:36;23521:44;23557:7;23546:8;23542:2;23538:17;23521:44;:::i;:::-;23516:2;23505:14;;23498:68;23509:5;22024:1572;-1:-1:-1;;;;;;22024:1572:170:o;23601:132::-;23668:20;;23697:30;23668:20;23697:30;:::i;23738:1114::-;23820:6;23873:3;23861:9;23852:7;23848:23;23844:33;23841:53;;;23890:1;23887;23880:12;23841:53;23916:22;;:::i;:::-;23961:29;23980:9;23961:29;:::i;:::-;23954:5;23947:44;24023:38;24057:2;24046:9;24042:18;24023:38;:::i;:::-;24018:2;24011:5;24007:14;24000:62;24094:38;24128:2;24117:9;24113:18;24094:38;:::i;:::-;24089:2;24082:5;24078:14;24071:62;24193:2;24182:9;24178:18;24165:32;24160:2;24153:5;24149:14;24142:56;24259:3;24248:9;24244:19;24231:33;24225:3;24218:5;24214:15;24207:58;24298:38;24331:3;24320:9;24316:19;24298:38;:::i;:::-;24292:3;24285:5;24281:15;24274:63;24398:3;24387:9;24383:19;24370:33;24364:3;24357:5;24353:15;24346:58;24465:3;24454:9;24450:19;24437:33;24431:3;24424:5;24420:15;24413:58;24490:3;24553:2;24542:9;24538:18;24525:32;24520:2;24513:5;24509:14;24502:56;;24577:3;24612:35;24643:2;24632:9;24628:18;24612:35;:::i;:::-;24596:14;;;24589:59;24667:3;24715:18;;;24702:32;24686:14;;;24679:56;24754:3;24802:18;;;24789:32;24773:14;;;24766:56;;;;-1:-1:-1;24600:5:170;23738:1114;-1:-1:-1;23738:1114:170:o;24857:970::-;25227:4;25256:3;25278:42;25359:2;25351:6;25347:15;25336:9;25329:34;25411:2;25403:6;25399:15;25394:2;25383:9;25379:18;25372:43;;25451:6;25446:2;25435:9;25431:18;25424:34;25494:6;25489:2;25478:9;25474:18;25467:34;25538:6;25532:3;25521:9;25517:19;25510:35;25582:2;25576:3;25565:9;25561:19;25554:31;25608:44;25648:2;25637:9;25633:18;25625:6;25608:44;:::i;:::-;25594:58;;25701:9;25693:6;25689:22;25683:3;25672:9;25668:19;25661:51;25729:32;25754:6;25746;25729:32;:::i;:::-;25721:40;;;25770:51;25816:3;25805:9;25801:19;25793:6;25770:51;:::i;25832:305::-;26043:2;26032:9;26025:21;26006:4;26063:68;26127:2;26116:9;26112:18;26104:6;26063:68;:::i;26142:708::-;26355:2;26344:9;26337:21;26318:4;26393:6;26380:20;26409:46;26449:5;26409:46;:::i;:::-;26502:42;26495:5;26491:54;26486:2;26475:9;26471:18;26464:82;;26607:2;26599:6;26595:15;26582:29;26577:2;26566:9;26562:18;26555:57;26655:55;26706:2;26698:6;26694:15;26686:6;26655:55;:::i;:::-;26748:4;26741;26730:9;26726:20;26719:34;26770:74;26839:3;26828:9;26824:19;26810:12;26796;26770:74;:::i;27042:694::-;27364:4;27393:3;27405:41;27436:9;27428:6;27405:41;:::i;:::-;27483:6;27477:3;27466:9;27462:19;27455:35;27527:2;27521:3;27510:9;27506:19;27499:31;27553:68;27617:2;27606:9;27602:18;27594:6;27553:68;:::i;:::-;27539:82;;27670:9;27662:6;27658:22;27652:3;27641:9;27637:19;27630:51;27698:32;27723:6;27715;27698:32;:::i;27741:184::-;27793:77;27790:1;27783:88;27890:4;27887:1;27880:15;27914:4;27911:1;27904:15;27930:349;27969:3;28000:66;27993:5;27990:77;27987:257;;28100:77;28097:1;28090:88;28201:4;28198:1;28191:15;28229:4;28226:1;28219:15;27987:257;-1:-1:-1;28271:1:170;28260:13;;27930:349::o",
    "linkReferences": {},
    "immutableReferences": {
      "53634": [
        {
          "start": 808,
          "length": 32
        },
        {
          "start": 2346,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "cabinet(address,bytes32)": "1c7662c8",
    "create((address,bytes32,bytes),bool)": "6bfae1ca",
    "createWithContext((address,bytes32,bytes),address,bytes,bool)": "0d0d9800",
    "domainSeparator()": "f698da25",
    "getTradeableOrderWithSignature(address,(address,bytes32,bytes),bytes,bytes32[])": "26e0a196",
    "hash((address,bytes32,bytes))": "5500079d",
    "isValidSafeSignature(address,address,bytes32,bytes32,bytes32,bytes,bytes)": "53f00b14",
    "remove(bytes32)": "95bc2673",
    "roots(address)": "a4546876",
    "setRoot(bytes32,(uint256,bytes))": "1ab0dd9d",
    "setRootWithContext(bytes32,(uint256,bytes),address,bytes)": "57f1d41a",
    "setSwapGuard(address)": "8f7984ed",
    "singleOrders(address,bytes32)": "6108c532",
    "swapGuards(address)": "595001b2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_settlement\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InterfaceNotSupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFallbackHandler\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidHandler\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProofNotAuthed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SingleOrderNotAuthed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapGuardRestricted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IConditionalOrder\",\"name\":\"handler\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"staticInput\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct IConditionalOrder.ConditionalOrderParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"ConditionalOrderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"location\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct ComposableCoW.Proof\",\"name\":\"proof\",\"type\":\"tuple\"}],\"name\":\"MerkleRootSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ISwapGuard\",\"name\":\"swapGuard\",\"type\":\"address\"}],\"name\":\"SwapGuardSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"cabinet\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IConditionalOrder\",\"name\":\"handler\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"staticInput\",\"type\":\"bytes\"}],\"internalType\":\"struct IConditionalOrder.ConditionalOrderParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"dispatch\",\"type\":\"bool\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IConditionalOrder\",\"name\":\"handler\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"staticInput\",\"type\":\"bytes\"}],\"internalType\":\"struct IConditionalOrder.ConditionalOrderParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"contract IValueFactory\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"dispatch\",\"type\":\"bool\"}],\"name\":\"createWithContext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IConditionalOrder\",\"name\":\"handler\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"staticInput\",\"type\":\"bytes\"}],\"internalType\":\"struct IConditionalOrder.ConditionalOrderParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"offchainInput\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"getTradeableOrderWithSignature\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"sellToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"appData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"kind\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"partiallyFillable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"sellTokenBalance\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"buyTokenBalance\",\"type\":\"bytes32\"}],\"internalType\":\"struct GPv2Order.Data\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IConditionalOrder\",\"name\":\"handler\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"staticInput\",\"type\":\"bytes\"}],\"internalType\":\"struct IConditionalOrder.ConditionalOrderParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"hash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Safe\",\"name\":\"safe\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_domainSeparator\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"encodeData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"isValidSafeSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magic\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"singleOrderHash\",\"type\":\"bytes32\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"roots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"location\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct ComposableCoW.Proof\",\"name\":\"proof\",\"type\":\"tuple\"}],\"name\":\"setRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"location\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct ComposableCoW.Proof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"contract IValueFactory\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"setRootWithContext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISwapGuard\",\"name\":\"swapGuard\",\"type\":\"address\"}],\"name\":\"setSwapGuard\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"singleOrders\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swapGuards\",\"outputs\":[{\"internalType\":\"contract ISwapGuard\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"mfw78 <mfw78@rndlabs.xyz>\",\"details\":\"Designed to be used with Safe + ExtensibleFallbackHandler\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_settlement\":\"The GPv2 settlement contract\"}},\"create((address,bytes32,bytes),bool)\":{\"params\":{\"dispatch\":\"Whether to dispatch the `ConditionalOrderCreated` event\",\"params\":\"The parameters of the conditional order\"}},\"createWithContext((address,bytes32,bytes),address,bytes,bool)\":{\"params\":{\"data\":\"Implementation specific off-chain data\",\"dispatch\":\"Whether to dispatch the `ConditionalOrderCreated` event\",\"factory\":\"A factory from which to get a value to store in the cabinet\",\"params\":\"The parameters of the conditional order\"}},\"getTradeableOrderWithSignature(address,(address,bytes32,bytes),bytes,bytes32[])\":{\"params\":{\"offchainInput\":\"any dynamic off-chain input for generating the discrete order\",\"owner\":\"of the order\",\"params\":\"`ConditionalOrderParams` for the order\",\"proof\":\"if using merkle-roots that H(handler || salt || staticInput) is in the merkle tree\"},\"returns\":{\"order\":\"discrete order for submitting to CoW Protocol API\",\"signature\":\"for submitting to CoW Protocol API\"}},\"hash((address,bytes32,bytes))\":{\"params\":{\"params\":\"`ConditionalOrderParams` for the order\"},\"returns\":{\"_0\":\"hash of the conditional order parameters\"}},\"isValidSafeSignature(address,address,bytes32,bytes32,bytes32,bytes,bytes)\":{\"details\":\"This function does not make use of the `typeHash` parameter as CoW Protocol does not      have more than one type.\",\"params\":{\"encodeData\":\"Is the abi encoded `GPv2Order.Data`\",\"payload\":\"Is the abi encoded `PayloadStruct`\"},\"returns\":{\"magic\":\"The magic value that should be returned if the signature is valid (0x1626ba7e)\"}},\"remove(bytes32)\":{\"params\":{\"singleOrderHash\":\"The hash of the single conditional order to remove\"}},\"setRoot(bytes32,(uint256,bytes))\":{\"params\":{\"proof\":\"Where to find the proofs\",\"root\":\"The merkle root of the user's conditional orders\"}},\"setRootWithContext(bytes32,(uint256,bytes),address,bytes)\":{\"params\":{\"data\":\"Implementation specific off-chain data\",\"factory\":\"A factory from which to get a value to store in the cabinet related to the merkle root\",\"proof\":\"Where to find the proofs\",\"root\":\"The merkle root of the user's conditional orders\"}},\"setSwapGuard(address)\":{\"params\":{\"swapGuard\":\"The address of the swap guard\"}}},\"stateVariables\":{\"roots\":{\"details\":\"Mapping of owner's merkle roots\"},\"singleOrders\":{\"details\":\"Mapping of owner's single orders\"}},\"title\":\"ComposableCoW - A contract that allows users to create multiple conditional orders\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"create((address,bytes32,bytes),bool)\":{\"notice\":\"Authorise a single conditional order\"},\"createWithContext((address,bytes32,bytes),address,bytes,bool)\":{\"notice\":\"Authorise a single conditional order and store a value from on-chain in the cabinet\"},\"getTradeableOrderWithSignature(address,(address,bytes32,bytes),bytes,bytes32[])\":{\"notice\":\"Get the `GPv2Order.Data` and signature for submitting to CoW Protocol API\"},\"hash((address,bytes32,bytes))\":{\"notice\":\"Return the hash of the conditional order parameters\"},\"remove(bytes32)\":{\"notice\":\"Remove the authorisation of a single conditional order\"},\"setRoot(bytes32,(uint256,bytes))\":{\"notice\":\"Set the merkle root of the user's conditional ordersSet the merkle root of the user's conditional orders\"},\"setRootWithContext(bytes32,(uint256,bytes),address,bytes)\":{\"notice\":\"Set the merkle root of the user's conditional orders and store a value from on-chain in the cabinet\"},\"setSwapGuard(address)\":{\"notice\":\"Set the swap guard of the user's conditional orders\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ComposableCoW.sol\":\"ComposableCoW\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/@openzeppelin/contracts/\",\":@openzeppelin/contracts/=lib/@openzeppelin/contracts/\",\":balancer/=lib/balancer/src/\",\":canonical-weth/=lib/canonical-weth/src/\",\":cowprotocol/=lib/cowprotocol/src/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":helpers/=lib/balancer/src/lib/helpers/\",\":math/=lib/balancer/src/lib/math/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/@openzeppelin/contracts/\",\":safe/=lib/safe/contracts/\"]},\"sources\":{\"lib/@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"lib/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"lib/cowprotocol/src/contracts/libraries/GPv2Interaction.sol\":{\"keccak256\":\"0xb950f05f76ac8044b82314ea5510941fdbc0f0e76e7f159023d435652b429528\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c081155e1b18c060aaab781b4887744413efffdfc55ce190db45c321444f165f\",\"dweb:/ipfs/QmbK3Qu7ZgwBfx2Es5EQcvG6q2srkHjzfNK2ziQ4ojxLSF\"]},\"lib/cowprotocol/src/contracts/libraries/GPv2Order.sol\":{\"keccak256\":\"0xffd0cc3de3209aa38045d57def570ccbde028a39a54b00c696dbe19f4f6d7f9f\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://5714a47cae551d3364bfc6a753d92822b29d277298e55942a2814ed1e2afd87d\",\"dweb:/ipfs/QmS2G8ftdhk11qoSYHX8twZK5vFArhcnVVe6gy5UGTvXmg\"]},\"lib/safe/contracts/Safe.sol\":{\"keccak256\":\"0xbab2f7bec33283e349342e7b23f5191c678c64fe02065bac4f4f44fb3f5d2638\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f95884e85691d49ba3efb9b2a160466fed17377bfa92fc8bf5923f3c61e99119\",\"dweb:/ipfs/QmQjhP9RnB3Cj3DNpWLzWqqvRdKBya6Efx6xzmRrwLqjm9\"]},\"lib/safe/contracts/base/Executor.sol\":{\"keccak256\":\"0xf0be832e7529e92000544170a5529d73666a9b5e836b30c6f2ed6ef7d7d8c94a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://710022b40c9f78a5b55b97f6ce600e4834df2ddd36bf714974d953883c82d58c\",\"dweb:/ipfs/QmbdJNKH5opevm7HxQKQAe6W7dQTgSHKa4nKvbUNGRcQQp\"]},\"lib/safe/contracts/base/FallbackManager.sol\":{\"keccak256\":\"0x646b3088f15af8b4f71ac5eeffaa24ce0c1abed5f494f90368208b09e35d5165\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://7975be46d228510c70659b18076aecb3b0e7331b4d3a162444304145143bdc6e\",\"dweb:/ipfs/QmRRbZrWUnoky6pVo8zMUzCTsshR4sZ2FjR13s8vyAb8dV\"]},\"lib/safe/contracts/base/GuardManager.sol\":{\"keccak256\":\"0xedfc7c830ab35e52d1208986b253f3422c2f0ca68054c10819fb348fcc6ccf5d\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3ff8a4194d1160d2e23142937bc9d7eac7b6b553b1ee226390a0df07ebac1b64\",\"dweb:/ipfs/QmSw8Y7z4TQrUTEosdWqcug7TUv9Tg1kxqMKHd7RuTnyzx\"]},\"lib/safe/contracts/base/ModuleManager.sol\":{\"keccak256\":\"0xd71b0d56dce386fa6f67c51061face071b2c7b03ec535d68717e2538ec47113a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://30812896d9f57cae84a432c67fbb3007d566071ec203b2992f1c0f762722df0d\",\"dweb:/ipfs/QmRyJ3JbsUwDQxQDTrqDDX4qNtVu7XiW8cD8WP5kgNJGGz\"]},\"lib/safe/contracts/base/OwnerManager.sol\":{\"keccak256\":\"0xec9799093eb7a73461cd5e563198751ee222f956f754ea622a03fe953e515b2c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://5729c58b14e7b656c71dd3377e9519c0d34ef8c04851a9a21c3d62393e4fae7a\",\"dweb:/ipfs/QmRRtfFpNqvdANny9TYBr8rA3HbT1egUCpb2uXALMHkVxK\"]},\"lib/safe/contracts/common/Enum.sol\":{\"keccak256\":\"0x4ff3008926a118e9f36e6747facc39dd13168e0d00f516888ae966ec20766453\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://385929800d1c0f92eb165fcf37a9e28b395b17d8b74f74755654d3a096a0fc34\",\"dweb:/ipfs/QmagieLuN2jrp2oJHFyZuyz65Sh1CcupnXSEKypGFS5Gvo\"]},\"lib/safe/contracts/common/NativeCurrencyPaymentFallback.sol\":{\"keccak256\":\"0x3ddcd4130c67326033dcf773d2d87d7147e3a8386993ea3ab3f1c38da406adba\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://740a729397b6a0d903f4738a50e856d4e5039555024937b148d97529525dbfa9\",\"dweb:/ipfs/QmQJuNVvHbkeJ6jjd75D8FsZBPXH6neoGBZdQgtsA82E7g\"]},\"lib/safe/contracts/common/SecuredTokenTransfer.sol\":{\"keccak256\":\"0x1eb8c3601538b73dd6a823ac4fca49bb8adc97d1302a936622156636c971eb05\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://c26495b1fe9229ea17f90b70f295030880d629b9ea3016ea20b634983865f7b3\",\"dweb:/ipfs/QmTc1UmKcynkKn8DeviLMuy6scxNvAVSdLoX4ndUtdEL9N\"]},\"lib/safe/contracts/common/SelfAuthorized.sol\":{\"keccak256\":\"0xfb0e176bb208e047a234fe757e2acd13787e27879570b8544547ac787feb5f13\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8e9a317f0c3c02ab1d6c38039bff2b3e0c97f4dc9d229d3d9149c1af1c5023b3\",\"dweb:/ipfs/QmNcZjNChsuXF34T6f3Zu7i3tnqvKN4NyWBWZ4tXLH9kMu\"]},\"lib/safe/contracts/common/SignatureDecoder.sol\":{\"keccak256\":\"0x2a3baf0efa1585ddf2276505c6d34fa16f01cafff1288e40110d5e67fb459c7c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://00cdded3068b9051ee0a966f40926fbc57dbe7ef8bf4285db3740f9d50468c80\",\"dweb:/ipfs/QmcP5hKmaRqBe7TpgoXtncZqsNKKdCCKxZgXoxEL4Nj5F4\"]},\"lib/safe/contracts/common/Singleton.sol\":{\"keccak256\":\"0xcab7c6e5fb6d7295a9343f72fec26a2f632ddfe220a6f267b5c5a1eb2f9bce50\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://dd1c31d5787ef590a60f6b0dbc74d09e6fe4d3ad2f0529940d662bf315521cde\",\"dweb:/ipfs/QmSAS5DYrGksJe4cPQ4wLrveXa1CjxAuEiohcLpPG5h2bo\"]},\"lib/safe/contracts/common/StorageAccessible.sol\":{\"keccak256\":\"0x2c5412a8f014db332322a6b24ee3cedce15dca17a721ae49fdef368568d4391e\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e775f267d3e60ebe452d9533f46a0eb1f1dc4593d1bcb553e86cea205a5f361e\",\"dweb:/ipfs/QmQdYDHGQsiMx1AADWRhX7tduU9ycTzrT5q3zBWvphXzKZ\"]},\"lib/safe/contracts/external/SafeMath.sol\":{\"keccak256\":\"0x5f856674d9be11344c5899deb43364e19baa75bc881cada4c159938270b2bd89\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://351c66e5fe92c0a51f79d133521545dabdd3f756312a7b1428c1fc813c512a1c\",\"dweb:/ipfs/QmdnrRmgef8SdamEU6fVEqFD5RQwXeDFTfQuZEfX2vxC4x\"]},\"lib/safe/contracts/handler/ExtensibleFallbackHandler.sol\":{\"keccak256\":\"0x7e511290dae21c9b1710c9250320d9b98ffd71c9501af354814485b58e1b64e9\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3e55ba23bde90d2cdd07baa7172ea41bdc1d638bc7b6eb5dce03189d86412515\",\"dweb:/ipfs/QmbxH73sqooeQL8ehsP2FDoXhLBoPs3wr3nod6ZgJwVcFV\"]},\"lib/safe/contracts/handler/HandlerContext.sol\":{\"keccak256\":\"0x3e105ebac003af9c8d34e3eed517ff0355d5f487e17478c85df0f225b04846f5\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://657bec347d746453883c461a3d9a2275bf2b99625dcaef0960e1c0276c3d56c4\",\"dweb:/ipfs/QmUGj8Tzs1CsmUf63LbTMK81EEGtYYnWKLGdHHtoYCd9CF\"]},\"lib/safe/contracts/handler/extensible/Base.sol\":{\"keccak256\":\"0xe5b71121b0020728158ee60756982e74809f9d77cb294a6d65930bff09d84d15\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://fd7fd2702b31fc8569a9986a476dd9fe9aa76624d0da6d832547f624426925f9\",\"dweb:/ipfs/QmWjYGtW38Fnwvm8qFvoJYhz2nTuySGkHouwRF3eksd6Nh\"]},\"lib/safe/contracts/handler/extensible/ERC165Handler.sol\":{\"keccak256\":\"0x6e19ba1deb09a34cca28891bfefd853697b808dfb8a9cddd4051d3058d3eb718\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0b1059e752bd142160a4fbe8ee08377a50902d31b8b909df002480d191af0cf4\",\"dweb:/ipfs/QmbuUmvgoodsZGgqR793duEWF5t7h6USAXfpr2N1VvBmeP\"]},\"lib/safe/contracts/handler/extensible/FallbackHandler.sol\":{\"keccak256\":\"0xbe7db6cbdb034c9aee1eae12200ab2e94fa4743ae08dbba2f1a001c4b62f3e0b\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://4fbba0ea04349873b38f7c7104d0a88ffd6e7ec399a3fdd0e1297ce12eebb19e\",\"dweb:/ipfs/QmYiDukcX2y7ratxsMX6hLMKzGQTD67CKLpuiSpgm1HGue\"]},\"lib/safe/contracts/handler/extensible/MarshalLib.sol\":{\"keccak256\":\"0x531476118b7948b06a0c7094badd6f1ae33ae2ddca815110030e87ee62c4a895\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f21ad2619b5bcbc977c5943d2f668e8bfb9ef6968db1193415e046171a5a150a\",\"dweb:/ipfs/QmYZeu3vr6eRWjeYp8GvWSVRLm9baFbTyEGgAy2hMAqbLX\"]},\"lib/safe/contracts/handler/extensible/SignatureVerifierMuxer.sol\":{\"keccak256\":\"0xc60a1d55ff0cf532a44bd864683719e3d6e1fa6d20d4c77812e21c33afecf304\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://298c7efe668a4ca8d3b712770973931d604c84304aececd621f0350d7d293b68\",\"dweb:/ipfs/QmVcNdQ7ZsnmDgSX8TFRLHk4HZUXH86u2akAM5q3g1PFfZ\"]},\"lib/safe/contracts/handler/extensible/TokenCallbacks.sol\":{\"keccak256\":\"0xfb0f8f01a7191ab358f196a7e055441ede00f36805f12c579a742a5cd3c4f8d7\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0d485ea9fc430a89953ffe2d2c7032b5a330f086bbb784e81eb6b00a692f6438\",\"dweb:/ipfs/QmNofKrkU9VTtGMN9Rc6js2jyUscSFxce8kjBz5rZL4RSJ\"]},\"lib/safe/contracts/interfaces/ERC1155TokenReceiver.sol\":{\"keccak256\":\"0x87e62665c041cade64e753ecdccf931cb100ab6e4bcc98769c1e6474be9db493\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://59ca1157dcfe19c72b9d1244a6ae5ec70fee9793d4d8af523b70f22ae567d55c\",\"dweb:/ipfs/QmfE3kv73QuQWAWQND927LWVHVLCp19m1mLUvxVYJDEFZM\"]},\"lib/safe/contracts/interfaces/ERC721TokenReceiver.sol\":{\"keccak256\":\"0x96c4c5457fede2d4c6012011dfda36f8e8ffdb7388468f2dddb35661538bf479\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://99a54737bc23722f79ec9cf9de63ba35b556a61df453eb332f3cac783503f26c\",\"dweb:/ipfs/QmbLW5C2RhoLbwDWEPtTKpyYE5apT9B3q4U11PZG3wSM1n\"]},\"lib/safe/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x779ed3893a8812e383670b755f65c7727e9343dadaa4d7a4aa7f4aa35d859fdb\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://bb2039e1459ace1e68761e873632fc339866332f9f5ecb7452a0bc3a3b847e89\",\"dweb:/ipfs/QmYXvDQXJnDkXFvsvKLyZXaAv4x42qvtbtmwHftP4RKX38\"]},\"lib/safe/contracts/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0x2459cb3ed73ecb80e1e7a6508d09a58cc59570b049f77042f669dedfcc5f6457\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3c4a1371948b11f78171bc4ae4fd169a1eec11e5c4b273eb2c54bc030a1aae25\",\"dweb:/ipfs/QmPuztatXZYVS65n8YbCyccJFZYPP6zQfBQ8tTY27pB978\"]},\"src/ComposableCoW.sol\":{\"keccak256\":\"0x565c6fabc8a1e185acfb4539baeb7e3cabb004b54da2c777cbdbb3c98dbd6a52\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2b876b6b4a69f69b7f9445e67a0e60dd7a65f028d54ba9c4c8c983a00ee23642\",\"dweb:/ipfs/Qmf95tsR515WFv2yBKp4NzhFc9xvfZRtS194Lq7SY2r7zC\"]},\"src/interfaces/IConditionalOrder.sol\":{\"keccak256\":\"0x52c9a2b5d5cc7345fe4b4c039af88c5621bc7c6059534cc7c76b77833aafae7b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1660e1510b82216e38b669f16b69f4a37b012b00655d0fc6794e4d77d2182699\",\"dweb:/ipfs/QmNiZ7rMT74sKT9d6SUEnKXiWjaYLL8nAzSdLBXBAzYNmZ\"]},\"src/interfaces/ISwapGuard.sol\":{\"keccak256\":\"0x60abdef709d22cb95e4b1d4680cb70d5286cfb5aa71ec65868cc44164ef8790f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7593245e22ffc533a073891affdbb003fa56eaa5ef7f0202a673b52968ad7ed5\",\"dweb:/ipfs/QmRhAvNzbHp8qfrw7eHZP6EDWw42tXMXSV3KuyhyxFy3Nx\"]},\"src/interfaces/IValueFactory.sol\":{\"keccak256\":\"0x3304ef8a0a1727258ac8278bf5426daeac37ece4653eaaff87b15143814a8122\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9934d278069dd9474065777833a81e65af227b85d350b6c1f012b812101be9de\",\"dweb:/ipfs/QmcMBdvY7wLs92FCyutDGQGtHnYryjnaykREvDNBNM8Yih\"]},\"src/vendored/CoWSettlement.sol\":{\"keccak256\":\"0x4e4e317b24017cd87eb11d16368b8c06ec19306d31946c330a86f9f136df38d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34b9b2fc2c89e60497457cd812da9c53718c15ddfbf70f6e11832d22092c1840\",\"dweb:/ipfs/QmYFzaynWZfdpmFRf2dZrQ32Ep53AtQDd5fTE3a89xVkaR\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_settlement",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InterfaceNotSupported"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidFallbackHandler"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidHandler"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ProofNotAuthed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SingleOrderNotAuthed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SwapGuardRestricted"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IConditionalOrder.ConditionalOrderParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IConditionalOrder",
                  "name": "handler",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "staticInput",
                  "type": "bytes"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ConditionalOrderCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "struct ComposableCoW.Proof",
              "name": "proof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "location",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MerkleRootSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract ISwapGuard",
              "name": "swapGuard",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SwapGuardSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cabinet",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IConditionalOrder.ConditionalOrderParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IConditionalOrder",
                  "name": "handler",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "staticInput",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "dispatch",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "create"
        },
        {
          "inputs": [
            {
              "internalType": "struct IConditionalOrder.ConditionalOrderParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IConditionalOrder",
                  "name": "handler",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "staticInput",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "contract IValueFactory",
              "name": "factory",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "dispatch",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createWithContext"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "domainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "struct IConditionalOrder.ConditionalOrderParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IConditionalOrder",
                  "name": "handler",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "staticInput",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "offchainInput",
              "type": "bytes"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTradeableOrderWithSignature",
          "outputs": [
            {
              "internalType": "struct GPv2Order.Data",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "sellToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "buyToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "sellAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "buyAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "validTo",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "appData",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "feeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "kind",
                  "type": "bytes32"
                },
                {
                  "internalType": "bool",
                  "name": "partiallyFillable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "sellTokenBalance",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "buyTokenBalance",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IConditionalOrder.ConditionalOrderParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IConditionalOrder",
                  "name": "handler",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "staticInput",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "hash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract Safe",
              "name": "safe",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_domainSeparator",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "encodeData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidSafeSignature",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "magic",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "singleOrderHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remove"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "roots",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "struct ComposableCoW.Proof",
              "name": "proof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "location",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoot"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "struct ComposableCoW.Proof",
              "name": "proof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "location",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "contract IValueFactory",
              "name": "factory",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRootWithContext"
        },
        {
          "inputs": [
            {
              "internalType": "contract ISwapGuard",
              "name": "swapGuard",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSwapGuard"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "singleOrders",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "swapGuards",
          "outputs": [
            {
              "internalType": "contract ISwapGuard",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_settlement": "The GPv2 settlement contract"
            }
          },
          "create((address,bytes32,bytes),bool)": {
            "params": {
              "dispatch": "Whether to dispatch the `ConditionalOrderCreated` event",
              "params": "The parameters of the conditional order"
            }
          },
          "createWithContext((address,bytes32,bytes),address,bytes,bool)": {
            "params": {
              "data": "Implementation specific off-chain data",
              "dispatch": "Whether to dispatch the `ConditionalOrderCreated` event",
              "factory": "A factory from which to get a value to store in the cabinet",
              "params": "The parameters of the conditional order"
            }
          },
          "getTradeableOrderWithSignature(address,(address,bytes32,bytes),bytes,bytes32[])": {
            "params": {
              "offchainInput": "any dynamic off-chain input for generating the discrete order",
              "owner": "of the order",
              "params": "`ConditionalOrderParams` for the order",
              "proof": "if using merkle-roots that H(handler || salt || staticInput) is in the merkle tree"
            },
            "returns": {
              "order": "discrete order for submitting to CoW Protocol API",
              "signature": "for submitting to CoW Protocol API"
            }
          },
          "hash((address,bytes32,bytes))": {
            "params": {
              "params": "`ConditionalOrderParams` for the order"
            },
            "returns": {
              "_0": "hash of the conditional order parameters"
            }
          },
          "isValidSafeSignature(address,address,bytes32,bytes32,bytes32,bytes,bytes)": {
            "details": "This function does not make use of the `typeHash` parameter as CoW Protocol does not      have more than one type.",
            "params": {
              "encodeData": "Is the abi encoded `GPv2Order.Data`",
              "payload": "Is the abi encoded `PayloadStruct`"
            },
            "returns": {
              "magic": "The magic value that should be returned if the signature is valid (0x1626ba7e)"
            }
          },
          "remove(bytes32)": {
            "params": {
              "singleOrderHash": "The hash of the single conditional order to remove"
            }
          },
          "setRoot(bytes32,(uint256,bytes))": {
            "params": {
              "proof": "Where to find the proofs",
              "root": "The merkle root of the user's conditional orders"
            }
          },
          "setRootWithContext(bytes32,(uint256,bytes),address,bytes)": {
            "params": {
              "data": "Implementation specific off-chain data",
              "factory": "A factory from which to get a value to store in the cabinet related to the merkle root",
              "proof": "Where to find the proofs",
              "root": "The merkle root of the user's conditional orders"
            }
          },
          "setSwapGuard(address)": {
            "params": {
              "swapGuard": "The address of the swap guard"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "create((address,bytes32,bytes),bool)": {
            "notice": "Authorise a single conditional order"
          },
          "createWithContext((address,bytes32,bytes),address,bytes,bool)": {
            "notice": "Authorise a single conditional order and store a value from on-chain in the cabinet"
          },
          "getTradeableOrderWithSignature(address,(address,bytes32,bytes),bytes,bytes32[])": {
            "notice": "Get the `GPv2Order.Data` and signature for submitting to CoW Protocol API"
          },
          "hash((address,bytes32,bytes))": {
            "notice": "Return the hash of the conditional order parameters"
          },
          "remove(bytes32)": {
            "notice": "Remove the authorisation of a single conditional order"
          },
          "setRoot(bytes32,(uint256,bytes))": {
            "notice": "Set the merkle root of the user's conditional ordersSet the merkle root of the user's conditional orders"
          },
          "setRootWithContext(bytes32,(uint256,bytes),address,bytes)": {
            "notice": "Set the merkle root of the user's conditional orders and store a value from on-chain in the cabinet"
          },
          "setSwapGuard(address)": {
            "notice": "Set the swap guard of the user's conditional orders"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/@openzeppelin/contracts/",
        "@openzeppelin/contracts/=lib/@openzeppelin/contracts/",
        "balancer/=lib/balancer/src/",
        "canonical-weth/=lib/canonical-weth/src/",
        "cowprotocol/=lib/cowprotocol/src/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "helpers/=lib/balancer/src/lib/helpers/",
        "math/=lib/balancer/src/lib/math/",
        "murky/=lib/murky/src/",
        "openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/",
        "openzeppelin/=lib/@openzeppelin/contracts/",
        "safe/=lib/safe/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/ComposableCoW.sol": "ComposableCoW"
      },
      "libraries": {}
    },
    "sources": {
      "lib/@openzeppelin/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "lib/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac",
        "urls": [
          "bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04",
          "dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG"
        ],
        "license": "MIT"
      },
      "lib/cowprotocol/src/contracts/libraries/GPv2Interaction.sol": {
        "keccak256": "0xb950f05f76ac8044b82314ea5510941fdbc0f0e76e7f159023d435652b429528",
        "urls": [
          "bzz-raw://c081155e1b18c060aaab781b4887744413efffdfc55ce190db45c321444f165f",
          "dweb:/ipfs/QmbK3Qu7ZgwBfx2Es5EQcvG6q2srkHjzfNK2ziQ4ojxLSF"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/libraries/GPv2Order.sol": {
        "keccak256": "0xffd0cc3de3209aa38045d57def570ccbde028a39a54b00c696dbe19f4f6d7f9f",
        "urls": [
          "bzz-raw://5714a47cae551d3364bfc6a753d92822b29d277298e55942a2814ed1e2afd87d",
          "dweb:/ipfs/QmS2G8ftdhk11qoSYHX8twZK5vFArhcnVVe6gy5UGTvXmg"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/safe/contracts/Safe.sol": {
        "keccak256": "0xbab2f7bec33283e349342e7b23f5191c678c64fe02065bac4f4f44fb3f5d2638",
        "urls": [
          "bzz-raw://f95884e85691d49ba3efb9b2a160466fed17377bfa92fc8bf5923f3c61e99119",
          "dweb:/ipfs/QmQjhP9RnB3Cj3DNpWLzWqqvRdKBya6Efx6xzmRrwLqjm9"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/base/Executor.sol": {
        "keccak256": "0xf0be832e7529e92000544170a5529d73666a9b5e836b30c6f2ed6ef7d7d8c94a",
        "urls": [
          "bzz-raw://710022b40c9f78a5b55b97f6ce600e4834df2ddd36bf714974d953883c82d58c",
          "dweb:/ipfs/QmbdJNKH5opevm7HxQKQAe6W7dQTgSHKa4nKvbUNGRcQQp"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/base/FallbackManager.sol": {
        "keccak256": "0x646b3088f15af8b4f71ac5eeffaa24ce0c1abed5f494f90368208b09e35d5165",
        "urls": [
          "bzz-raw://7975be46d228510c70659b18076aecb3b0e7331b4d3a162444304145143bdc6e",
          "dweb:/ipfs/QmRRbZrWUnoky6pVo8zMUzCTsshR4sZ2FjR13s8vyAb8dV"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/base/GuardManager.sol": {
        "keccak256": "0xedfc7c830ab35e52d1208986b253f3422c2f0ca68054c10819fb348fcc6ccf5d",
        "urls": [
          "bzz-raw://3ff8a4194d1160d2e23142937bc9d7eac7b6b553b1ee226390a0df07ebac1b64",
          "dweb:/ipfs/QmSw8Y7z4TQrUTEosdWqcug7TUv9Tg1kxqMKHd7RuTnyzx"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/base/ModuleManager.sol": {
        "keccak256": "0xd71b0d56dce386fa6f67c51061face071b2c7b03ec535d68717e2538ec47113a",
        "urls": [
          "bzz-raw://30812896d9f57cae84a432c67fbb3007d566071ec203b2992f1c0f762722df0d",
          "dweb:/ipfs/QmRyJ3JbsUwDQxQDTrqDDX4qNtVu7XiW8cD8WP5kgNJGGz"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/base/OwnerManager.sol": {
        "keccak256": "0xec9799093eb7a73461cd5e563198751ee222f956f754ea622a03fe953e515b2c",
        "urls": [
          "bzz-raw://5729c58b14e7b656c71dd3377e9519c0d34ef8c04851a9a21c3d62393e4fae7a",
          "dweb:/ipfs/QmRRtfFpNqvdANny9TYBr8rA3HbT1egUCpb2uXALMHkVxK"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/Enum.sol": {
        "keccak256": "0x4ff3008926a118e9f36e6747facc39dd13168e0d00f516888ae966ec20766453",
        "urls": [
          "bzz-raw://385929800d1c0f92eb165fcf37a9e28b395b17d8b74f74755654d3a096a0fc34",
          "dweb:/ipfs/QmagieLuN2jrp2oJHFyZuyz65Sh1CcupnXSEKypGFS5Gvo"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/NativeCurrencyPaymentFallback.sol": {
        "keccak256": "0x3ddcd4130c67326033dcf773d2d87d7147e3a8386993ea3ab3f1c38da406adba",
        "urls": [
          "bzz-raw://740a729397b6a0d903f4738a50e856d4e5039555024937b148d97529525dbfa9",
          "dweb:/ipfs/QmQJuNVvHbkeJ6jjd75D8FsZBPXH6neoGBZdQgtsA82E7g"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/SecuredTokenTransfer.sol": {
        "keccak256": "0x1eb8c3601538b73dd6a823ac4fca49bb8adc97d1302a936622156636c971eb05",
        "urls": [
          "bzz-raw://c26495b1fe9229ea17f90b70f295030880d629b9ea3016ea20b634983865f7b3",
          "dweb:/ipfs/QmTc1UmKcynkKn8DeviLMuy6scxNvAVSdLoX4ndUtdEL9N"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/SelfAuthorized.sol": {
        "keccak256": "0xfb0e176bb208e047a234fe757e2acd13787e27879570b8544547ac787feb5f13",
        "urls": [
          "bzz-raw://8e9a317f0c3c02ab1d6c38039bff2b3e0c97f4dc9d229d3d9149c1af1c5023b3",
          "dweb:/ipfs/QmNcZjNChsuXF34T6f3Zu7i3tnqvKN4NyWBWZ4tXLH9kMu"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/SignatureDecoder.sol": {
        "keccak256": "0x2a3baf0efa1585ddf2276505c6d34fa16f01cafff1288e40110d5e67fb459c7c",
        "urls": [
          "bzz-raw://00cdded3068b9051ee0a966f40926fbc57dbe7ef8bf4285db3740f9d50468c80",
          "dweb:/ipfs/QmcP5hKmaRqBe7TpgoXtncZqsNKKdCCKxZgXoxEL4Nj5F4"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/Singleton.sol": {
        "keccak256": "0xcab7c6e5fb6d7295a9343f72fec26a2f632ddfe220a6f267b5c5a1eb2f9bce50",
        "urls": [
          "bzz-raw://dd1c31d5787ef590a60f6b0dbc74d09e6fe4d3ad2f0529940d662bf315521cde",
          "dweb:/ipfs/QmSAS5DYrGksJe4cPQ4wLrveXa1CjxAuEiohcLpPG5h2bo"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/StorageAccessible.sol": {
        "keccak256": "0x2c5412a8f014db332322a6b24ee3cedce15dca17a721ae49fdef368568d4391e",
        "urls": [
          "bzz-raw://e775f267d3e60ebe452d9533f46a0eb1f1dc4593d1bcb553e86cea205a5f361e",
          "dweb:/ipfs/QmQdYDHGQsiMx1AADWRhX7tduU9ycTzrT5q3zBWvphXzKZ"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/external/SafeMath.sol": {
        "keccak256": "0x5f856674d9be11344c5899deb43364e19baa75bc881cada4c159938270b2bd89",
        "urls": [
          "bzz-raw://351c66e5fe92c0a51f79d133521545dabdd3f756312a7b1428c1fc813c512a1c",
          "dweb:/ipfs/QmdnrRmgef8SdamEU6fVEqFD5RQwXeDFTfQuZEfX2vxC4x"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/ExtensibleFallbackHandler.sol": {
        "keccak256": "0x7e511290dae21c9b1710c9250320d9b98ffd71c9501af354814485b58e1b64e9",
        "urls": [
          "bzz-raw://3e55ba23bde90d2cdd07baa7172ea41bdc1d638bc7b6eb5dce03189d86412515",
          "dweb:/ipfs/QmbxH73sqooeQL8ehsP2FDoXhLBoPs3wr3nod6ZgJwVcFV"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/HandlerContext.sol": {
        "keccak256": "0x3e105ebac003af9c8d34e3eed517ff0355d5f487e17478c85df0f225b04846f5",
        "urls": [
          "bzz-raw://657bec347d746453883c461a3d9a2275bf2b99625dcaef0960e1c0276c3d56c4",
          "dweb:/ipfs/QmUGj8Tzs1CsmUf63LbTMK81EEGtYYnWKLGdHHtoYCd9CF"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/extensible/Base.sol": {
        "keccak256": "0xe5b71121b0020728158ee60756982e74809f9d77cb294a6d65930bff09d84d15",
        "urls": [
          "bzz-raw://fd7fd2702b31fc8569a9986a476dd9fe9aa76624d0da6d832547f624426925f9",
          "dweb:/ipfs/QmWjYGtW38Fnwvm8qFvoJYhz2nTuySGkHouwRF3eksd6Nh"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/extensible/ERC165Handler.sol": {
        "keccak256": "0x6e19ba1deb09a34cca28891bfefd853697b808dfb8a9cddd4051d3058d3eb718",
        "urls": [
          "bzz-raw://0b1059e752bd142160a4fbe8ee08377a50902d31b8b909df002480d191af0cf4",
          "dweb:/ipfs/QmbuUmvgoodsZGgqR793duEWF5t7h6USAXfpr2N1VvBmeP"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/extensible/FallbackHandler.sol": {
        "keccak256": "0xbe7db6cbdb034c9aee1eae12200ab2e94fa4743ae08dbba2f1a001c4b62f3e0b",
        "urls": [
          "bzz-raw://4fbba0ea04349873b38f7c7104d0a88ffd6e7ec399a3fdd0e1297ce12eebb19e",
          "dweb:/ipfs/QmYiDukcX2y7ratxsMX6hLMKzGQTD67CKLpuiSpgm1HGue"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/extensible/MarshalLib.sol": {
        "keccak256": "0x531476118b7948b06a0c7094badd6f1ae33ae2ddca815110030e87ee62c4a895",
        "urls": [
          "bzz-raw://f21ad2619b5bcbc977c5943d2f668e8bfb9ef6968db1193415e046171a5a150a",
          "dweb:/ipfs/QmYZeu3vr6eRWjeYp8GvWSVRLm9baFbTyEGgAy2hMAqbLX"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/extensible/SignatureVerifierMuxer.sol": {
        "keccak256": "0xc60a1d55ff0cf532a44bd864683719e3d6e1fa6d20d4c77812e21c33afecf304",
        "urls": [
          "bzz-raw://298c7efe668a4ca8d3b712770973931d604c84304aececd621f0350d7d293b68",
          "dweb:/ipfs/QmVcNdQ7ZsnmDgSX8TFRLHk4HZUXH86u2akAM5q3g1PFfZ"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/extensible/TokenCallbacks.sol": {
        "keccak256": "0xfb0f8f01a7191ab358f196a7e055441ede00f36805f12c579a742a5cd3c4f8d7",
        "urls": [
          "bzz-raw://0d485ea9fc430a89953ffe2d2c7032b5a330f086bbb784e81eb6b00a692f6438",
          "dweb:/ipfs/QmNofKrkU9VTtGMN9Rc6js2jyUscSFxce8kjBz5rZL4RSJ"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/interfaces/ERC1155TokenReceiver.sol": {
        "keccak256": "0x87e62665c041cade64e753ecdccf931cb100ab6e4bcc98769c1e6474be9db493",
        "urls": [
          "bzz-raw://59ca1157dcfe19c72b9d1244a6ae5ec70fee9793d4d8af523b70f22ae567d55c",
          "dweb:/ipfs/QmfE3kv73QuQWAWQND927LWVHVLCp19m1mLUvxVYJDEFZM"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/interfaces/ERC721TokenReceiver.sol": {
        "keccak256": "0x96c4c5457fede2d4c6012011dfda36f8e8ffdb7388468f2dddb35661538bf479",
        "urls": [
          "bzz-raw://99a54737bc23722f79ec9cf9de63ba35b556a61df453eb332f3cac783503f26c",
          "dweb:/ipfs/QmbLW5C2RhoLbwDWEPtTKpyYE5apT9B3q4U11PZG3wSM1n"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x779ed3893a8812e383670b755f65c7727e9343dadaa4d7a4aa7f4aa35d859fdb",
        "urls": [
          "bzz-raw://bb2039e1459ace1e68761e873632fc339866332f9f5ecb7452a0bc3a3b847e89",
          "dweb:/ipfs/QmYXvDQXJnDkXFvsvKLyZXaAv4x42qvtbtmwHftP4RKX38"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/interfaces/ISignatureValidator.sol": {
        "keccak256": "0x2459cb3ed73ecb80e1e7a6508d09a58cc59570b049f77042f669dedfcc5f6457",
        "urls": [
          "bzz-raw://3c4a1371948b11f78171bc4ae4fd169a1eec11e5c4b273eb2c54bc030a1aae25",
          "dweb:/ipfs/QmPuztatXZYVS65n8YbCyccJFZYPP6zQfBQ8tTY27pB978"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/ComposableCoW.sol": {
        "keccak256": "0x565c6fabc8a1e185acfb4539baeb7e3cabb004b54da2c777cbdbb3c98dbd6a52",
        "urls": [
          "bzz-raw://2b876b6b4a69f69b7f9445e67a0e60dd7a65f028d54ba9c4c8c983a00ee23642",
          "dweb:/ipfs/Qmf95tsR515WFv2yBKp4NzhFc9xvfZRtS194Lq7SY2r7zC"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IConditionalOrder.sol": {
        "keccak256": "0x52c9a2b5d5cc7345fe4b4c039af88c5621bc7c6059534cc7c76b77833aafae7b",
        "urls": [
          "bzz-raw://1660e1510b82216e38b669f16b69f4a37b012b00655d0fc6794e4d77d2182699",
          "dweb:/ipfs/QmNiZ7rMT74sKT9d6SUEnKXiWjaYLL8nAzSdLBXBAzYNmZ"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISwapGuard.sol": {
        "keccak256": "0x60abdef709d22cb95e4b1d4680cb70d5286cfb5aa71ec65868cc44164ef8790f",
        "urls": [
          "bzz-raw://7593245e22ffc533a073891affdbb003fa56eaa5ef7f0202a673b52968ad7ed5",
          "dweb:/ipfs/QmRhAvNzbHp8qfrw7eHZP6EDWw42tXMXSV3KuyhyxFy3Nx"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IValueFactory.sol": {
        "keccak256": "0x3304ef8a0a1727258ac8278bf5426daeac37ece4653eaaff87b15143814a8122",
        "urls": [
          "bzz-raw://9934d278069dd9474065777833a81e65af227b85d350b6c1f012b812101be9de",
          "dweb:/ipfs/QmcMBdvY7wLs92FCyutDGQGtHnYryjnaykREvDNBNM8Yih"
        ],
        "license": "GPL-3.0"
      },
      "src/vendored/CoWSettlement.sol": {
        "keccak256": "0x4e4e317b24017cd87eb11d16368b8c06ec19306d31946c330a86f9f136df38d7",
        "urls": [
          "bzz-raw://34b9b2fc2c89e60497457cd812da9c53718c15ddfbf70f6e11832d22092c1840",
          "dweb:/ipfs/QmYFzaynWZfdpmFRf2dZrQ32Ep53AtQDd5fTE3a89xVkaR"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/ComposableCoW.sol",
    "id": 54248,
    "exportedSymbols": {
      "CoWSettlement": [
        56042
      ],
      "ComposableCoW": [
        54247
      ],
      "EIP712": [
        52037
      ],
      "ERC1155TokenReceiver": [
        52147
      ],
      "ERC1271": [
        51612
      ],
      "ERC165Handler": [
        51370
      ],
      "ERC721TokenReceiver": [
        52165
      ],
      "ExtensibleBase": [
        51012
      ],
      "ExtensibleFallbackHandler": [
        50607
      ],
      "FallbackHandler": [
        51492
      ],
      "GPv2Interaction": [
        17090
      ],
      "GPv2Order": [
        17246
      ],
      "HandlerContext": [
        50638
      ],
      "IConditionalOrder": [
        54507
      ],
      "IConditionalOrderGenerator": [
        54538
      ],
      "IERC165": [
        52197
      ],
      "IERC165Handler": [
        51051
      ],
      "IFallbackHandler": [
        51381
      ],
      "IFallbackMethod": [
        50786
      ],
      "ISafeSignatureVerifier": [
        51635
      ],
      "ISignatureValidator": [
        52216
      ],
      "ISignatureValidatorConstants": [
        52203
      ],
      "ISignatureVerifierMuxer": [
        51655
      ],
      "IStaticFallbackMethod": [
        50801
      ],
      "ISwapGuard": [
        54566
      ],
      "IValueFactory": [
        54578
      ],
      "MarshalLib": [
        51598
      ],
      "MerkleProof": [
        1245
      ],
      "Safe": [
        48851
      ],
      "SignatureVerifierMuxer": [
        52004
      ],
      "TokenCallbacks": [
        52110
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:12230:136",
    "nodes": [
      {
        "id": 53573,
        "nodeType": "PragmaDirective",
        "src": "36:31:136",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 53575,
        "nodeType": "ImportDirective",
        "src": "69:87:136",
        "nodes": [],
        "absolutePath": "lib/@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54248,
        "sourceUnit": 1246,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53574,
              "name": "MerkleProof",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1245,
              "src": "77:11:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53576,
        "nodeType": "ImportDirective",
        "src": "157:52:136",
        "nodes": [],
        "absolutePath": "lib/safe/contracts/handler/ExtensibleFallbackHandler.sol",
        "file": "safe/handler/ExtensibleFallbackHandler.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54248,
        "sourceUnit": 50608,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53577,
        "nodeType": "ImportDirective",
        "src": "211:44:136",
        "nodes": [],
        "absolutePath": "src/interfaces/IConditionalOrder.sol",
        "file": "./interfaces/IConditionalOrder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54248,
        "sourceUnit": 54539,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53578,
        "nodeType": "ImportDirective",
        "src": "256:37:136",
        "nodes": [],
        "absolutePath": "src/interfaces/ISwapGuard.sol",
        "file": "./interfaces/ISwapGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54248,
        "sourceUnit": 54567,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53579,
        "nodeType": "ImportDirective",
        "src": "294:40:136",
        "nodes": [],
        "absolutePath": "src/interfaces/IValueFactory.sol",
        "file": "./interfaces/IValueFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54248,
        "sourceUnit": 54579,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53580,
        "nodeType": "ImportDirective",
        "src": "335:38:136",
        "nodes": [],
        "absolutePath": "src/vendored/CoWSettlement.sol",
        "file": "./vendored/CoWSettlement.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54248,
        "sourceUnit": 56043,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54247,
        "nodeType": "ContractDefinition",
        "src": "579:11686:136",
        "nodes": [
          {
            "id": 53585,
            "nodeType": "ErrorDefinition",
            "src": "652:23:136",
            "nodes": [],
            "errorSelector": "4a821464",
            "name": "ProofNotAuthed",
            "nameLocation": "658:14:136",
            "parameters": {
              "id": 53584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "672:2:136"
            }
          },
          {
            "id": 53587,
            "nodeType": "ErrorDefinition",
            "src": "680:29:136",
            "nodes": [],
            "errorSelector": "7a933234",
            "name": "SingleOrderNotAuthed",
            "nameLocation": "686:20:136",
            "parameters": {
              "id": 53586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "706:2:136"
            }
          },
          {
            "id": 53589,
            "nodeType": "ErrorDefinition",
            "src": "714:28:136",
            "nodes": [],
            "errorSelector": "03fc2a7e",
            "name": "SwapGuardRestricted",
            "nameLocation": "720:19:136",
            "parameters": {
              "id": 53588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "739:2:136"
            }
          },
          {
            "id": 53591,
            "nodeType": "ErrorDefinition",
            "src": "747:23:136",
            "nodes": [],
            "errorSelector": "d8f59fa5",
            "name": "InvalidHandler",
            "nameLocation": "753:14:136",
            "parameters": {
              "id": 53590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "767:2:136"
            }
          },
          {
            "id": 53593,
            "nodeType": "ErrorDefinition",
            "src": "775:31:136",
            "nodes": [],
            "errorSelector": "79ac63cd",
            "name": "InvalidFallbackHandler",
            "nameLocation": "781:22:136",
            "parameters": {
              "id": 53592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "803:2:136"
            }
          },
          {
            "id": 53595,
            "nodeType": "ErrorDefinition",
            "src": "811:30:136",
            "nodes": [],
            "errorSelector": "2c7ca6d7",
            "name": "InterfaceNotSupported",
            "nameLocation": "817:21:136",
            "parameters": {
              "id": 53594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "838:2:136"
            }
          },
          {
            "id": 53604,
            "nodeType": "StructDefinition",
            "src": "930:139:136",
            "nodes": [],
            "canonicalName": "ComposableCoW.PayloadStruct",
            "members": [
              {
                "constant": false,
                "id": 53598,
                "mutability": "mutable",
                "name": "proof",
                "nameLocation": "971:5:136",
                "nodeType": "VariableDeclaration",
                "scope": 53604,
                "src": "961:15:136",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                  "typeString": "bytes32[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 53596,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "961:7:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 53597,
                  "nodeType": "ArrayTypeName",
                  "src": "961:9:136",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                    "typeString": "bytes32[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 53601,
                "mutability": "mutable",
                "name": "params",
                "nameLocation": "1027:6:136",
                "nodeType": "VariableDeclaration",
                "scope": 53604,
                "src": "986:47:136",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_storage_ptr",
                  "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                },
                "typeName": {
                  "id": 53600,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 53599,
                    "name": "IConditionalOrder.ConditionalOrderParams",
                    "nameLocations": [
                      "986:17:136",
                      "1004:22:136"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 54485,
                    "src": "986:40:136"
                  },
                  "referencedDeclaration": 54485,
                  "src": "986:40:136",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_storage_ptr",
                    "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 53603,
                "mutability": "mutable",
                "name": "offchainInput",
                "nameLocation": "1049:13:136",
                "nodeType": "VariableDeclaration",
                "scope": 53604,
                "src": "1043:19:136",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 53602,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1043:5:136",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PayloadStruct",
            "nameLocation": "937:13:136",
            "scope": 54247,
            "visibility": "public"
          },
          {
            "id": 53609,
            "nodeType": "StructDefinition",
            "src": "1129:66:136",
            "nodes": [],
            "canonicalName": "ComposableCoW.Proof",
            "members": [
              {
                "constant": false,
                "id": 53606,
                "mutability": "mutable",
                "name": "location",
                "nameLocation": "1160:8:136",
                "nodeType": "VariableDeclaration",
                "scope": 53609,
                "src": "1152:16:136",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 53605,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1152:7:136",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 53608,
                "mutability": "mutable",
                "name": "data",
                "nameLocation": "1184:4:136",
                "nodeType": "VariableDeclaration",
                "scope": 53609,
                "src": "1178:10:136",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 53607,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1178:5:136",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proof",
            "nameLocation": "1136:5:136",
            "scope": 54247,
            "visibility": "public"
          },
          {
            "id": 53618,
            "nodeType": "EventDefinition",
            "src": "1279:70:136",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "58662f46b4a87d0f96d929b24c37fe25c55d52c0025d0b2bec3936534cc31e57",
            "name": "MerkleRootSet",
            "nameLocation": "1285:13:136",
            "parameters": {
              "id": 53617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53611,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1315:5:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53618,
                  "src": "1299:21:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:7:136",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53613,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "1330:4:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53618,
                  "src": "1322:12:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 53612,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1322:7:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53616,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "1342:5:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53618,
                  "src": "1336:11:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$53609_memory_ptr",
                    "typeString": "struct ComposableCoW.Proof"
                  },
                  "typeName": {
                    "id": 53615,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53614,
                      "name": "Proof",
                      "nameLocations": [
                        "1336:5:136"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 53609,
                      "src": "1336:5:136"
                    },
                    "referencedDeclaration": 53609,
                    "src": "1336:5:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$53609_storage_ptr",
                      "typeString": "struct ComposableCoW.Proof"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1298:50:136"
            }
          },
          {
            "id": 53625,
            "nodeType": "EventDefinition",
            "src": "1354:102:136",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "2cceac5555b0ca45a3744ced542f54b56ad2eb45e521962372eef212a2cbf361",
            "name": "ConditionalOrderCreated",
            "nameLocation": "1360:23:136",
            "parameters": {
              "id": 53624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53620,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1400:5:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53625,
                  "src": "1384:21:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1384:7:136",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53623,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "1448:6:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53625,
                  "src": "1407:47:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                    "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                  },
                  "typeName": {
                    "id": 53622,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53621,
                      "name": "IConditionalOrder.ConditionalOrderParams",
                      "nameLocations": [
                        "1407:17:136",
                        "1425:22:136"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54485,
                      "src": "1407:40:136"
                    },
                    "referencedDeclaration": 54485,
                    "src": "1407:40:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_storage_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1383:72:136"
            }
          },
          {
            "id": 53632,
            "nodeType": "EventDefinition",
            "src": "1461:64:136",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "41f583e2d25b3921afe66987b63b0b5e4cf2acbbbed4a477fd19a22180f3f859",
            "name": "SwapGuardSet",
            "nameLocation": "1467:12:136",
            "parameters": {
              "id": 53631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53627,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1496:5:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53632,
                  "src": "1480:21:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53626,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1480:7:136",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53630,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "swapGuard",
                  "nameLocation": "1514:9:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53632,
                  "src": "1503:20:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                    "typeString": "contract ISwapGuard"
                  },
                  "typeName": {
                    "id": 53629,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53628,
                      "name": "ISwapGuard",
                      "nameLocations": [
                        "1503:10:136"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54566,
                      "src": "1503:10:136"
                    },
                    "referencedDeclaration": 54566,
                    "src": "1503:10:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                      "typeString": "contract ISwapGuard"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1479:45:136"
            }
          },
          {
            "id": 53634,
            "nodeType": "VariableDeclaration",
            "src": "1611:40:136",
            "nodes": [],
            "constant": false,
            "functionSelector": "f698da25",
            "mutability": "immutable",
            "name": "domainSeparator",
            "nameLocation": "1636:15:136",
            "scope": 54247,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 53633,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1611:7:136",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 53639,
            "nodeType": "VariableDeclaration",
            "src": "1702:40:136",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 53635,
              "nodeType": "StructuredDocumentation",
              "src": "1657:40:136",
              "text": "@dev Mapping of owner's merkle roots"
            },
            "functionSelector": "a4546876",
            "mutability": "mutable",
            "name": "roots",
            "nameLocation": "1737:5:136",
            "scope": 54247,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
              "typeString": "mapping(address => bytes32)"
            },
            "typeName": {
              "id": 53638,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 53636,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1710:7:136",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1702:27:136",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                "typeString": "mapping(address => bytes32)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 53637,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1721:7:136",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 53646,
            "nodeType": "VariableDeclaration",
            "src": "1794:64:136",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 53640,
              "nodeType": "StructuredDocumentation",
              "src": "1748:41:136",
              "text": "@dev Mapping of owner's single orders"
            },
            "functionSelector": "6108c532",
            "mutability": "mutable",
            "name": "singleOrders",
            "nameLocation": "1846:12:136",
            "scope": 54247,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(bytes32 => bool))"
            },
            "typeName": {
              "id": 53645,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 53641,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1802:7:136",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1794:44:136",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(bytes32 => bool))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 53644,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 53642,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1821:7:136",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "1813:24:136",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                  "typeString": "mapping(bytes32 => bool)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 53643,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1832:4:136",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 53651,
            "nodeType": "VariableDeclaration",
            "src": "1906:48:136",
            "nodes": [],
            "constant": false,
            "functionSelector": "595001b2",
            "mutability": "mutable",
            "name": "swapGuards",
            "nameLocation": "1944:10:136",
            "scope": 54247,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_ISwapGuard_$54566_$",
              "typeString": "mapping(address => contract ISwapGuard)"
            },
            "typeName": {
              "id": 53650,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 53647,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1914:7:136",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1906:30:136",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_ISwapGuard_$54566_$",
                "typeString": "mapping(address => contract ISwapGuard)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 53649,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 53648,
                  "name": "ISwapGuard",
                  "nameLocations": [
                    "1925:10:136"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54566,
                  "src": "1925:10:136"
                },
                "referencedDeclaration": 54566,
                "src": "1925:10:136",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                  "typeString": "contract ISwapGuard"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 53657,
            "nodeType": "VariableDeclaration",
            "src": "2014:62:136",
            "nodes": [],
            "constant": false,
            "functionSelector": "1c7662c8",
            "mutability": "mutable",
            "name": "cabinet",
            "nameLocation": "2069:7:136",
            "scope": 54247,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes32_$_$",
              "typeString": "mapping(address => mapping(bytes32 => bytes32))"
            },
            "typeName": {
              "id": 53656,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 53652,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2022:7:136",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2014:47:136",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes32_$_$",
                "typeString": "mapping(address => mapping(bytes32 => bytes32))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 53655,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 53653,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2041:7:136",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "2033:27:136",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                  "typeString": "mapping(bytes32 => bytes32)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 53654,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2052:7:136",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 53672,
            "nodeType": "FunctionDefinition",
            "src": "2178:112:136",
            "nodes": [],
            "body": {
              "id": 53671,
              "nodeType": "Block",
              "src": "2211:79:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 53669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53663,
                      "name": "domainSeparator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53634,
                      "src": "2221:15:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 53665,
                              "name": "_settlement",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53660,
                              "src": "2253:11:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 53664,
                            "name": "CoWSettlement",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56042,
                            "src": "2239:13:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CoWSettlement_$56042_$",
                              "typeString": "type(contract CoWSettlement)"
                            }
                          },
                          "id": 53666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2239:26:136",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CoWSettlement_$56042",
                            "typeString": "contract CoWSettlement"
                          }
                        },
                        "id": 53667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2266:15:136",
                        "memberName": "domainSeparator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56041,
                        "src": "2239:42:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                          "typeString": "function () view external returns (bytes32)"
                        }
                      },
                      "id": 53668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2239:44:136",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2221:62:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 53670,
                  "nodeType": "ExpressionStatement",
                  "src": "2221:62:136"
                }
              ]
            },
            "documentation": {
              "id": 53658,
              "nodeType": "StructuredDocumentation",
              "src": "2107:66:136",
              "text": " @param _settlement The GPv2 settlement contract"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 53661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53660,
                  "mutability": "mutable",
                  "name": "_settlement",
                  "nameLocation": "2198:11:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53672,
                  "src": "2190:19:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53659,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2190:7:136",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2189:21:136"
            },
            "returnParameters": {
              "id": 53662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2211:0:136"
            },
            "scope": 54247,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53696,
            "nodeType": "FunctionDefinition",
            "src": "2573:154:136",
            "nodes": [],
            "body": {
              "id": 53695,
              "nodeType": "Block",
              "src": "2633:94:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 53686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 53681,
                        "name": "roots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53639,
                        "src": "2643:5:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 53684,
                      "indexExpression": {
                        "expression": {
                          "id": 53682,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2649:3:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 53683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2653:6:136",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2649:10:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2643:17:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 53685,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53675,
                      "src": "2663:4:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2643:24:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 53687,
                  "nodeType": "ExpressionStatement",
                  "src": "2643:24:136"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53689,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2696:3:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 53690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2700:6:136",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2696:10:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53691,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53675,
                        "src": "2708:4:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 53692,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53678,
                        "src": "2714:5:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proof_$53609_calldata_ptr",
                          "typeString": "struct ComposableCoW.Proof calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_struct$_Proof_$53609_calldata_ptr",
                          "typeString": "struct ComposableCoW.Proof calldata"
                        }
                      ],
                      "id": 53688,
                      "name": "MerkleRootSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53618,
                      "src": "2682:13:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_struct$_Proof_$53609_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,struct ComposableCoW.Proof memory)"
                      }
                    },
                    "id": 53693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2682:38:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53694,
                  "nodeType": "EmitStatement",
                  "src": "2677:43:136"
                }
              ]
            },
            "documentation": {
              "id": 53673,
              "nodeType": "StructuredDocumentation",
              "src": "2316:252:136",
              "text": " Set the merkle root of the user's conditional orders\n @notice Set the merkle root of the user's conditional orders\n @param root The merkle root of the user's conditional orders\n @param proof Where to find the proofs"
            },
            "functionSelector": "1ab0dd9d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRoot",
            "nameLocation": "2582:7:136",
            "parameters": {
              "id": 53679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53675,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "2598:4:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53696,
                  "src": "2590:12:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 53674,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2590:7:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53678,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "2619:5:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53696,
                  "src": "2604:20:136",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$53609_calldata_ptr",
                    "typeString": "struct ComposableCoW.Proof"
                  },
                  "typeName": {
                    "id": 53677,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53676,
                      "name": "Proof",
                      "nameLocations": [
                        "2604:5:136"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 53609,
                      "src": "2604:5:136"
                    },
                    "referencedDeclaration": 53609,
                    "src": "2604:5:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$53609_storage_ptr",
                      "typeString": "struct ComposableCoW.Proof"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2589:36:136"
            },
            "returnParameters": {
              "id": 53680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2633:0:136"
            },
            "scope": 54247,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53731,
            "nodeType": "FunctionDefinition",
            "src": "3136:425:136",
            "nodes": [],
            "body": {
              "id": 53730,
              "nodeType": "Block",
              "src": "3265:296:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53711,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53699,
                        "src": "3283:4:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 53712,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53702,
                        "src": "3289:5:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proof_$53609_calldata_ptr",
                          "typeString": "struct ComposableCoW.Proof calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_struct$_Proof_$53609_calldata_ptr",
                          "typeString": "struct ComposableCoW.Proof calldata"
                        }
                      ],
                      "id": 53710,
                      "name": "setRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53696,
                      "src": "3275:7:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_struct$_Proof_$53609_calldata_ptr_$returns$__$",
                        "typeString": "function (bytes32,struct ComposableCoW.Proof calldata)"
                      }
                    },
                    "id": 53713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3275:20:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53714,
                  "nodeType": "ExpressionStatement",
                  "src": "3275:20:136"
                },
                {
                  "expression": {
                    "id": 53728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 53715,
                          "name": "cabinet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53657,
                          "src": "3498:7:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes32_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => bytes32))"
                          }
                        },
                        "id": 53722,
                        "indexExpression": {
                          "expression": {
                            "id": 53716,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3506:3:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 53717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3510:6:136",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3506:10:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3498:19:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                          "typeString": "mapping(bytes32 => bytes32)"
                        }
                      },
                      "id": 53723,
                      "indexExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 53720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3526:1:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 53719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3518:7:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 53718,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "3518:7:136",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3518:10:136",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3498:31:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 53726,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53707,
                          "src": "3549:4:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "expression": {
                          "id": 53724,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53705,
                          "src": "3532:7:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IValueFactory_$54578",
                            "typeString": "contract IValueFactory"
                          }
                        },
                        "id": 53725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3540:8:136",
                        "memberName": "getValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54577,
                        "src": "3532:16:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) view external returns (bytes32)"
                        }
                      },
                      "id": 53727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3532:22:136",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3498:56:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 53729,
                  "nodeType": "ExpressionStatement",
                  "src": "3498:56:136"
                }
              ]
            },
            "documentation": {
              "id": 53697,
              "nodeType": "StructuredDocumentation",
              "src": "2733:398:136",
              "text": " Set the merkle root of the user's conditional orders and store a value from on-chain in the cabinet\n @param root The merkle root of the user's conditional orders\n @param proof Where to find the proofs\n @param factory A factory from which to get a value to store in the cabinet related to the merkle root\n @param data Implementation specific off-chain data"
            },
            "functionSelector": "57f1d41a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRootWithContext",
            "nameLocation": "3145:18:136",
            "parameters": {
              "id": 53708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53699,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "3172:4:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53731,
                  "src": "3164:12:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 53698,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3164:7:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53702,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "3193:5:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53731,
                  "src": "3178:20:136",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$53609_calldata_ptr",
                    "typeString": "struct ComposableCoW.Proof"
                  },
                  "typeName": {
                    "id": 53701,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53700,
                      "name": "Proof",
                      "nameLocations": [
                        "3178:5:136"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 53609,
                      "src": "3178:5:136"
                    },
                    "referencedDeclaration": 53609,
                    "src": "3178:5:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$53609_storage_ptr",
                      "typeString": "struct ComposableCoW.Proof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53705,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "3214:7:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53731,
                  "src": "3200:21:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IValueFactory_$54578",
                    "typeString": "contract IValueFactory"
                  },
                  "typeName": {
                    "id": 53704,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53703,
                      "name": "IValueFactory",
                      "nameLocations": [
                        "3200:13:136"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54578,
                      "src": "3200:13:136"
                    },
                    "referencedDeclaration": 54578,
                    "src": "3200:13:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IValueFactory_$54578",
                      "typeString": "contract IValueFactory"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53707,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3238:4:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53731,
                  "src": "3223:19:136",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 53706,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3223:5:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3163:80:136"
            },
            "returnParameters": {
              "id": 53709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3265:0:136"
            },
            "scope": 54247,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53778,
            "nodeType": "FunctionDefinition",
            "src": "3767:358:136",
            "nodes": [],
            "body": {
              "id": 53777,
              "nodeType": "Block",
              "src": "3863:262:136",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 53751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3877:40:136",
                    "subExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 53749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 53742,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53735,
                                  "src": "3887:6:136",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_calldata_ptr",
                                    "typeString": "struct IConditionalOrder.ConditionalOrderParams calldata"
                                  }
                                },
                                "id": 53743,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3894:7:136",
                                "memberName": "handler",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 54480,
                                "src": "3887:14:136",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConditionalOrder_$54507",
                                  "typeString": "contract IConditionalOrder"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IConditionalOrder_$54507",
                                  "typeString": "contract IConditionalOrder"
                                }
                              ],
                              "id": 53741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3879:7:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53740,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3879:7:136",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3879:23:136",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 53747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3914:1:136",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 53746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3906:7:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53745,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3906:7:136",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3906:10:136",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3879:37:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 53750,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3878:39:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53756,
                  "nodeType": "IfStatement",
                  "src": "3873:94:136",
                  "trueBody": {
                    "id": 53755,
                    "nodeType": "Block",
                    "src": "3919:48:136",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53752,
                            "name": "InvalidHandler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53591,
                            "src": "3940:14:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 53753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3940:16:136",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 53754,
                        "nodeType": "RevertStatement",
                        "src": "3933:23:136"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 53766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 53757,
                          "name": "singleOrders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53646,
                          "src": "3977:12:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => bool))"
                          }
                        },
                        "id": 53763,
                        "indexExpression": {
                          "expression": {
                            "id": 53758,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3990:3:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 53759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3994:6:136",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3990:10:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3977:24:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 53764,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 53761,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53735,
                            "src": "4007:6:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_calldata_ptr",
                              "typeString": "struct IConditionalOrder.ConditionalOrderParams calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_calldata_ptr",
                              "typeString": "struct IConditionalOrder.ConditionalOrderParams calldata"
                            }
                          ],
                          "id": 53760,
                          "name": "hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54133,
                          "src": "4002:4:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ConditionalOrderParams_$54485_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (struct IConditionalOrder.ConditionalOrderParams memory) pure returns (bytes32)"
                          }
                        },
                        "id": 53762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4002:12:136",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3977:38:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 53765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4018:4:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3977:45:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53767,
                  "nodeType": "ExpressionStatement",
                  "src": "3977:45:136"
                },
                {
                  "condition": {
                    "id": 53768,
                    "name": "dispatch",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53737,
                    "src": "4036:8:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53776,
                  "nodeType": "IfStatement",
                  "src": "4032:87:136",
                  "trueBody": {
                    "id": 53775,
                    "nodeType": "Block",
                    "src": "4046:73:136",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 53770,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4089:3:136",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 53771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4093:6:136",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4089:10:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 53772,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53735,
                              "src": "4101:6:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_calldata_ptr",
                                "typeString": "struct IConditionalOrder.ConditionalOrderParams calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_calldata_ptr",
                                "typeString": "struct IConditionalOrder.ConditionalOrderParams calldata"
                              }
                            ],
                            "id": 53769,
                            "name": "ConditionalOrderCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53625,
                            "src": "4065:23:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_struct$_ConditionalOrderParams_$54485_memory_ptr_$returns$__$",
                              "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory)"
                            }
                          },
                          "id": 53773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4065:43:136",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 53774,
                        "nodeType": "EmitStatement",
                        "src": "4060:48:136"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 53732,
              "nodeType": "StructuredDocumentation",
              "src": "3567:195:136",
              "text": " Authorise a single conditional order\n @param params The parameters of the conditional order\n @param dispatch Whether to dispatch the `ConditionalOrderCreated` event"
            },
            "functionSelector": "6bfae1ca",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "create",
            "nameLocation": "3776:6:136",
            "parameters": {
              "id": 53738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53735,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "3833:6:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53778,
                  "src": "3783:56:136",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_calldata_ptr",
                    "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                  },
                  "typeName": {
                    "id": 53734,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53733,
                      "name": "IConditionalOrder.ConditionalOrderParams",
                      "nameLocations": [
                        "3783:17:136",
                        "3801:22:136"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54485,
                      "src": "3783:40:136"
                    },
                    "referencedDeclaration": 54485,
                    "src": "3783:40:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_storage_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53737,
                  "mutability": "mutable",
                  "name": "dispatch",
                  "nameLocation": "3846:8:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53778,
                  "src": "3841:13:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 53736,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3841:4:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3782:73:136"
            },
            "returnParameters": {
              "id": 53739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3863:0:136"
            },
            "scope": 54247,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53812,
            "nodeType": "FunctionDefinition",
            "src": "4518:524:136",
            "nodes": [],
            "body": {
              "id": 53811,
              "nodeType": "Block",
              "src": "4709:333:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53793,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53782,
                        "src": "4726:6:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_calldata_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams calldata"
                        }
                      },
                      {
                        "id": 53794,
                        "name": "dispatch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53789,
                        "src": "4734:8:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_calldata_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams calldata"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 53792,
                      "name": "create",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53778,
                      "src": "4719:6:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ConditionalOrderParams_$54485_calldata_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (struct IConditionalOrder.ConditionalOrderParams calldata,bool)"
                      }
                    },
                    "id": 53795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4719:24:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53796,
                  "nodeType": "ExpressionStatement",
                  "src": "4719:24:136"
                },
                {
                  "expression": {
                    "id": 53809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 53797,
                          "name": "cabinet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53657,
                          "src": "4977:7:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes32_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => bytes32))"
                          }
                        },
                        "id": 53803,
                        "indexExpression": {
                          "expression": {
                            "id": 53798,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4985:3:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 53799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4989:6:136",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4985:10:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4977:19:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                          "typeString": "mapping(bytes32 => bytes32)"
                        }
                      },
                      "id": 53804,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 53801,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53782,
                            "src": "5002:6:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_calldata_ptr",
                              "typeString": "struct IConditionalOrder.ConditionalOrderParams calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_calldata_ptr",
                              "typeString": "struct IConditionalOrder.ConditionalOrderParams calldata"
                            }
                          ],
                          "id": 53800,
                          "name": "hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54133,
                          "src": "4997:4:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ConditionalOrderParams_$54485_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (struct IConditionalOrder.ConditionalOrderParams memory) pure returns (bytes32)"
                          }
                        },
                        "id": 53802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4997:12:136",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4977:33:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 53807,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53787,
                          "src": "5030:4:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "expression": {
                          "id": 53805,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53785,
                          "src": "5013:7:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IValueFactory_$54578",
                            "typeString": "contract IValueFactory"
                          }
                        },
                        "id": 53806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5021:8:136",
                        "memberName": "getValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54577,
                        "src": "5013:16:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) view external returns (bytes32)"
                        }
                      },
                      "id": 53808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5013:22:136",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4977:58:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 53810,
                  "nodeType": "ExpressionStatement",
                  "src": "4977:58:136"
                }
              ]
            },
            "documentation": {
              "id": 53779,
              "nodeType": "StructuredDocumentation",
              "src": "4131:382:136",
              "text": " Authorise a single conditional order and store a value from on-chain in the cabinet\n @param params The parameters of the conditional order\n @param factory A factory from which to get a value to store in the cabinet\n @param data Implementation specific off-chain data\n @param dispatch Whether to dispatch the `ConditionalOrderCreated` event"
            },
            "functionSelector": "0d0d9800",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createWithContext",
            "nameLocation": "4527:17:136",
            "parameters": {
              "id": 53790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53782,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "4604:6:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53812,
                  "src": "4554:56:136",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_calldata_ptr",
                    "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                  },
                  "typeName": {
                    "id": 53781,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53780,
                      "name": "IConditionalOrder.ConditionalOrderParams",
                      "nameLocations": [
                        "4554:17:136",
                        "4572:22:136"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54485,
                      "src": "4554:40:136"
                    },
                    "referencedDeclaration": 54485,
                    "src": "4554:40:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_storage_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53785,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "4634:7:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53812,
                  "src": "4620:21:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IValueFactory_$54578",
                    "typeString": "contract IValueFactory"
                  },
                  "typeName": {
                    "id": 53784,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53783,
                      "name": "IValueFactory",
                      "nameLocations": [
                        "4620:13:136"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54578,
                      "src": "4620:13:136"
                    },
                    "referencedDeclaration": 54578,
                    "src": "4620:13:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IValueFactory_$54578",
                      "typeString": "contract IValueFactory"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53787,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4666:4:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53812,
                  "src": "4651:19:136",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 53786,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4651:5:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53789,
                  "mutability": "mutable",
                  "name": "dispatch",
                  "nameLocation": "4685:8:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53812,
                  "src": "4680:13:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 53788,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4680:4:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4544:155:136"
            },
            "returnParameters": {
              "id": 53791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4709:0:136"
            },
            "scope": 54247,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53840,
            "nodeType": "FunctionDefinition",
            "src": "5207:175:136",
            "nodes": [],
            "body": {
              "id": 53839,
              "nodeType": "Block",
              "src": "5257:125:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 53825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 53818,
                          "name": "singleOrders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53646,
                          "src": "5267:12:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => bool))"
                          }
                        },
                        "id": 53822,
                        "indexExpression": {
                          "expression": {
                            "id": 53819,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5280:3:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 53820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5284:6:136",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5280:10:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5267:24:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 53823,
                      "indexExpression": {
                        "id": 53821,
                        "name": "singleOrderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53815,
                        "src": "5292:15:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5267:41:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 53824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5311:5:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5267:49:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53826,
                  "nodeType": "ExpressionStatement",
                  "src": "5267:49:136"
                },
                {
                  "expression": {
                    "id": 53837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 53827,
                          "name": "cabinet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53657,
                          "src": "5326:7:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes32_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => bytes32))"
                          }
                        },
                        "id": 53831,
                        "indexExpression": {
                          "expression": {
                            "id": 53828,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5334:3:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 53829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5338:6:136",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5334:10:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5326:19:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                          "typeString": "mapping(bytes32 => bytes32)"
                        }
                      },
                      "id": 53832,
                      "indexExpression": {
                        "id": 53830,
                        "name": "singleOrderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53815,
                        "src": "5346:15:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5326:36:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 53835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5373:1:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 53834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5365:7:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 53833,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5365:7:136",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 53836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5365:10:136",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5326:49:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 53838,
                  "nodeType": "ExpressionStatement",
                  "src": "5326:49:136"
                }
              ]
            },
            "documentation": {
              "id": 53813,
              "nodeType": "StructuredDocumentation",
              "src": "5048:154:136",
              "text": " Remove the authorisation of a single conditional order\n @param singleOrderHash The hash of the single conditional order to remove"
            },
            "functionSelector": "95bc2673",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "remove",
            "nameLocation": "5216:6:136",
            "parameters": {
              "id": 53816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53815,
                  "mutability": "mutable",
                  "name": "singleOrderHash",
                  "nameLocation": "5231:15:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53840,
                  "src": "5223:23:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 53814,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5223:7:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5222:25:136"
            },
            "returnParameters": {
              "id": 53817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5257:0:136"
            },
            "scope": 54247,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53861,
            "nodeType": "FunctionDefinition",
            "src": "5517:154:136",
            "nodes": [],
            "body": {
              "id": 53860,
              "nodeType": "Block",
              "src": "5570:101:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 53852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 53847,
                        "name": "swapGuards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53651,
                        "src": "5580:10:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_ISwapGuard_$54566_$",
                          "typeString": "mapping(address => contract ISwapGuard)"
                        }
                      },
                      "id": 53850,
                      "indexExpression": {
                        "expression": {
                          "id": 53848,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5591:3:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 53849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5595:6:136",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5591:10:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5580:22:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                        "typeString": "contract ISwapGuard"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 53851,
                      "name": "swapGuard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53844,
                      "src": "5605:9:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                        "typeString": "contract ISwapGuard"
                      }
                    },
                    "src": "5580:34:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                      "typeString": "contract ISwapGuard"
                    }
                  },
                  "id": 53853,
                  "nodeType": "ExpressionStatement",
                  "src": "5580:34:136"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53855,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5642:3:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 53856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5646:6:136",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5642:10:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53857,
                        "name": "swapGuard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53844,
                        "src": "5654:9:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                          "typeString": "contract ISwapGuard"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                          "typeString": "contract ISwapGuard"
                        }
                      ],
                      "id": 53854,
                      "name": "SwapGuardSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53632,
                      "src": "5629:12:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_ISwapGuard_$54566_$returns$__$",
                        "typeString": "function (address,contract ISwapGuard)"
                      }
                    },
                    "id": 53858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5629:35:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53859,
                  "nodeType": "EmitStatement",
                  "src": "5624:40:136"
                }
              ]
            },
            "documentation": {
              "id": 53841,
              "nodeType": "StructuredDocumentation",
              "src": "5388:124:136",
              "text": " Set the swap guard of the user's conditional orders\n @param swapGuard The address of the swap guard"
            },
            "functionSelector": "8f7984ed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setSwapGuard",
            "nameLocation": "5526:12:136",
            "parameters": {
              "id": 53845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53844,
                  "mutability": "mutable",
                  "name": "swapGuard",
                  "nameLocation": "5550:9:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53861,
                  "src": "5539:20:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                    "typeString": "contract ISwapGuard"
                  },
                  "typeName": {
                    "id": 53843,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53842,
                      "name": "ISwapGuard",
                      "nameLocations": [
                        "5539:10:136"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54566,
                      "src": "5539:10:136"
                    },
                    "referencedDeclaration": 54566,
                    "src": "5539:10:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                      "typeString": "contract ISwapGuard"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5538:22:136"
            },
            "returnParameters": {
              "id": 53846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5570:0:136"
            },
            "scope": 54247,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53966,
            "nodeType": "FunctionDefinition",
            "src": "6022:1259:136",
            "nodes": [],
            "body": {
              "id": 53965,
              "nodeType": "Block",
              "src": "6300:981:136",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53885
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53885,
                      "mutability": "mutable",
                      "name": "_payload",
                      "nameLocation": "6367:8:136",
                      "nodeType": "VariableDeclaration",
                      "scope": 53965,
                      "src": "6346:29:136",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PayloadStruct_$53604_memory_ptr",
                        "typeString": "struct ComposableCoW.PayloadStruct"
                      },
                      "typeName": {
                        "id": 53884,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53883,
                          "name": "PayloadStruct",
                          "nameLocations": [
                            "6346:13:136"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 53604,
                          "src": "6346:13:136"
                        },
                        "referencedDeclaration": 53604,
                        "src": "6346:13:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PayloadStruct_$53604_storage_ptr",
                          "typeString": "struct ComposableCoW.PayloadStruct"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53892,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53888,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53877,
                        "src": "6389:7:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 53889,
                            "name": "PayloadStruct",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53604,
                            "src": "6399:13:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_PayloadStruct_$53604_storage_ptr_$",
                              "typeString": "type(struct ComposableCoW.PayloadStruct storage pointer)"
                            }
                          }
                        ],
                        "id": 53890,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6398:15:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_PayloadStruct_$53604_storage_ptr_$",
                          "typeString": "type(struct ComposableCoW.PayloadStruct storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_PayloadStruct_$53604_storage_ptr_$",
                          "typeString": "type(struct ComposableCoW.PayloadStruct storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 53886,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6378:3:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 53887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6382:6:136",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "6378:10:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 53891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6378:36:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PayloadStruct_$53604_memory_ptr",
                      "typeString": "struct ComposableCoW.PayloadStruct memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6346:68:136"
                },
                {
                  "assignments": [
                    53894
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53894,
                      "mutability": "mutable",
                      "name": "ctx",
                      "nameLocation": "6477:3:136",
                      "nodeType": "VariableDeclaration",
                      "scope": 53965,
                      "src": "6469:11:136",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 53893,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6469:7:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53905,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53898,
                            "name": "safe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53865,
                            "src": "6497:4:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          ],
                          "id": 53897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6489:7:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53896,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6489:7:136",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6489:13:136",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 53900,
                          "name": "_payload",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53885,
                          "src": "6504:8:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PayloadStruct_$53604_memory_ptr",
                            "typeString": "struct ComposableCoW.PayloadStruct memory"
                          }
                        },
                        "id": 53901,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6513:6:136",
                        "memberName": "params",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53601,
                        "src": "6504:15:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 53902,
                          "name": "_payload",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53885,
                          "src": "6521:8:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PayloadStruct_$53604_memory_ptr",
                            "typeString": "struct ComposableCoW.PayloadStruct memory"
                          }
                        },
                        "id": 53903,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6530:5:136",
                        "memberName": "proof",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53598,
                        "src": "6521:14:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "id": 53895,
                      "name": "_auth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54199,
                      "src": "6483:5:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_ConditionalOrderParams_$54485_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory,bytes32[] memory) view returns (bytes32)"
                      }
                    },
                    "id": 53904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6483:53:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6469:67:136"
                },
                {
                  "assignments": [
                    53910
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53910,
                      "mutability": "mutable",
                      "name": "order",
                      "nameLocation": "6619:5:136",
                      "nodeType": "VariableDeclaration",
                      "scope": 53965,
                      "src": "6597:27:136",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                        "typeString": "struct GPv2Order.Data"
                      },
                      "typeName": {
                        "id": 53909,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53908,
                          "name": "GPv2Order.Data",
                          "nameLocations": [
                            "6597:9:136",
                            "6607:4:136"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 17121,
                          "src": "6597:14:136"
                        },
                        "referencedDeclaration": 17121,
                        "src": "6597:14:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$17121_storage_ptr",
                          "typeString": "struct GPv2Order.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53918,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53913,
                        "name": "encodeData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53875,
                        "src": "6638:10:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "expression": {
                              "id": 53914,
                              "name": "GPv2Order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17246,
                              "src": "6651:9:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_GPv2Order_$17246_$",
                                "typeString": "type(library GPv2Order)"
                              }
                            },
                            "id": 53915,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6661:4:136",
                            "memberName": "Data",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17121,
                            "src": "6651:14:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Data_$17121_storage_ptr_$",
                              "typeString": "type(struct GPv2Order.Data storage pointer)"
                            }
                          }
                        ],
                        "id": 53916,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6650:16:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Data_$17121_storage_ptr_$",
                          "typeString": "type(struct GPv2Order.Data storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_Data_$17121_storage_ptr_$",
                          "typeString": "type(struct GPv2Order.Data storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 53911,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6627:3:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 53912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6631:6:136",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "6627:10:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 53917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6627:40:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                      "typeString": "struct GPv2Order.Data memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6597:70:136"
                },
                {
                  "condition": {
                    "id": 53932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6753:82:136",
                    "subExpression": {
                      "components": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 53922,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53865,
                                  "src": "6775:4:136",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Safe_$48851",
                                    "typeString": "contract Safe"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Safe_$48851",
                                    "typeString": "contract Safe"
                                  }
                                ],
                                "id": 53921,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6767:7:136",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 53920,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6767:7:136",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 53923,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6767:13:136",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 53924,
                              "name": "ctx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53894,
                              "src": "6782:3:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 53925,
                                "name": "_payload",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53885,
                                "src": "6787:8:136",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PayloadStruct_$53604_memory_ptr",
                                  "typeString": "struct ComposableCoW.PayloadStruct memory"
                                }
                              },
                              "id": 53926,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6796:6:136",
                              "memberName": "params",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 53601,
                              "src": "6787:15:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                                "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 53927,
                                "name": "_payload",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53885,
                                "src": "6804:8:136",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PayloadStruct_$53604_memory_ptr",
                                  "typeString": "struct ComposableCoW.PayloadStruct memory"
                                }
                              },
                              "id": 53928,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6813:13:136",
                              "memberName": "offchainInput",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 53603,
                              "src": "6804:22:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 53929,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53910,
                              "src": "6828:5:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                                "typeString": "struct GPv2Order.Data memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                                "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                                "typeString": "struct GPv2Order.Data memory"
                              }
                            ],
                            "id": 53919,
                            "name": "_guardCheck",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54246,
                            "src": "6755:11:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_struct$_ConditionalOrderParams_$54485_memory_ptr_$_t_bytes_memory_ptr_$_t_struct$_Data_$17121_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (address,bytes32,struct IConditionalOrder.ConditionalOrderParams memory,bytes memory,struct GPv2Order.Data memory) view returns (bool)"
                            }
                          },
                          "id": 53930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6755:79:136",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 53931,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6754:81:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53937,
                  "nodeType": "IfStatement",
                  "src": "6749:141:136",
                  "trueBody": {
                    "id": 53936,
                    "nodeType": "Block",
                    "src": "6837:53:136",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53933,
                            "name": "SwapGuardRestricted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53589,
                            "src": "6858:19:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 53934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6858:21:136",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 53935,
                        "nodeType": "RevertStatement",
                        "src": "6851:28:136"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53947,
                            "name": "safe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53865,
                            "src": "7026:4:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          ],
                          "id": 53946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7018:7:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53945,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7018:7:136",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7018:13:136",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53949,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53867,
                        "src": "7045:6:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53950,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53869,
                        "src": "7065:5:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 53951,
                        "name": "_domainSeparator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53871,
                        "src": "7084:16:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 53952,
                        "name": "ctx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53894,
                        "src": "7114:3:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 53953,
                            "name": "_payload",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53885,
                            "src": "7131:8:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PayloadStruct_$53604_memory_ptr",
                              "typeString": "struct ComposableCoW.PayloadStruct memory"
                            }
                          },
                          "id": 53954,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7140:6:136",
                          "memberName": "params",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53601,
                          "src": "7131:15:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                            "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                          }
                        },
                        "id": 53955,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7147:11:136",
                        "memberName": "staticInput",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54484,
                        "src": "7131:27:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 53956,
                          "name": "_payload",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53885,
                          "src": "7172:8:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PayloadStruct_$53604_memory_ptr",
                            "typeString": "struct ComposableCoW.PayloadStruct memory"
                          }
                        },
                        "id": 53957,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7181:13:136",
                        "memberName": "offchainInput",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53603,
                        "src": "7172:22:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 53958,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53910,
                        "src": "7208:5:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                          "typeString": "struct GPv2Order.Data memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                          "typeString": "struct GPv2Order.Data memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "expression": {
                            "id": 53938,
                            "name": "_payload",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53885,
                            "src": "6974:8:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PayloadStruct_$53604_memory_ptr",
                              "typeString": "struct ComposableCoW.PayloadStruct memory"
                            }
                          },
                          "id": 53942,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6983:6:136",
                          "memberName": "params",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53601,
                          "src": "6974:15:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                            "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                          }
                        },
                        "id": 53943,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6990:7:136",
                        "memberName": "handler",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54480,
                        "src": "6974:23:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConditionalOrder_$54507",
                          "typeString": "contract IConditionalOrder"
                        }
                      },
                      "id": 53944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6998:6:136",
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54506,
                      "src": "6974:30:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_struct$_Data_$17121_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,bytes32,bytes32,bytes32,bytes memory,bytes memory,struct GPv2Order.Data memory) view external"
                      }
                    },
                    "id": 53959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6974:249:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53960,
                  "nodeType": "ExpressionStatement",
                  "src": "6974:249:136"
                },
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 53961,
                        "name": "ERC1271",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51612,
                        "src": "7241:7:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC1271_$51612_$",
                          "typeString": "type(contract ERC1271)"
                        }
                      },
                      "id": 53962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "7249:16:136",
                      "memberName": "isValidSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51611,
                      "src": "7241:24:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                        "typeString": "function ERC1271.isValidSignature(bytes32,bytes calldata) view returns (bytes4)"
                      }
                    },
                    "id": 53963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "7266:8:136",
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "7241:33:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 53882,
                  "id": 53964,
                  "nodeType": "Return",
                  "src": "7234:40:136"
                }
              ]
            },
            "baseFunctions": [
              51634
            ],
            "documentation": {
              "id": 53862,
              "nodeType": "StructuredDocumentation",
              "src": "5712:305:136",
              "text": " @inheritdoc ISafeSignatureVerifier\n @dev This function does not make use of the `typeHash` parameter as CoW Protocol does not\n      have more than one type.\n @param encodeData Is the abi encoded `GPv2Order.Data`\n @param payload Is the abi encoded `PayloadStruct`"
            },
            "functionSelector": "53f00b14",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSafeSignature",
            "nameLocation": "6031:20:136",
            "overrides": {
              "id": 53879,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6268:8:136"
            },
            "parameters": {
              "id": 53878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53865,
                  "mutability": "mutable",
                  "name": "safe",
                  "nameLocation": "6066:4:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53966,
                  "src": "6061:9:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Safe_$48851",
                    "typeString": "contract Safe"
                  },
                  "typeName": {
                    "id": 53864,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53863,
                      "name": "Safe",
                      "nameLocations": [
                        "6061:4:136"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48851,
                      "src": "6061:4:136"
                    },
                    "referencedDeclaration": 48851,
                    "src": "6061:4:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Safe_$48851",
                      "typeString": "contract Safe"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53867,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "6088:6:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53966,
                  "src": "6080:14:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53866,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6080:7:136",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53869,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "6112:5:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53966,
                  "src": "6104:13:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 53868,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6104:7:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53871,
                  "mutability": "mutable",
                  "name": "_domainSeparator",
                  "nameLocation": "6135:16:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53966,
                  "src": "6127:24:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 53870,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6127:7:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53873,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53966,
                  "src": "6161:7:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 53872,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6161:7:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53875,
                  "mutability": "mutable",
                  "name": "encodeData",
                  "nameLocation": "6205:10:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53966,
                  "src": "6190:25:136",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 53874,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6190:5:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53877,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "6240:7:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53966,
                  "src": "6225:22:136",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 53876,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6225:5:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6051:202:136"
            },
            "returnParameters": {
              "id": 53882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53881,
                  "mutability": "mutable",
                  "name": "magic",
                  "nameLocation": "6293:5:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 53966,
                  "src": "6286:12:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 53880,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "6286:6:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6285:14:136"
            },
            "scope": 54247,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54116,
            "nodeType": "FunctionDefinition",
            "src": "7821:2111:136",
            "nodes": [],
            "body": {
              "id": 54115,
              "nodeType": "Block",
              "src": "8104:1828:136",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53986
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53986,
                      "mutability": "mutable",
                      "name": "ctx",
                      "nameLocation": "8199:3:136",
                      "nodeType": "VariableDeclaration",
                      "scope": 54115,
                      "src": "8191:11:136",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 53985,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8191:7:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53992,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53988,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53969,
                        "src": "8211:5:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53989,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53972,
                        "src": "8218:6:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_calldata_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams calldata"
                        }
                      },
                      {
                        "id": 53990,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53977,
                        "src": "8226:5:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_calldata_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      ],
                      "id": 53987,
                      "name": "_auth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54199,
                      "src": "8205:5:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_ConditionalOrderParams_$54485_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory,bytes32[] memory) view returns (bytes32)"
                      }
                    },
                    "id": 53991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8205:27:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8191:41:136"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 54016,
                        "nodeType": "Block",
                        "src": "8481:103:136",
                        "statements": [
                          {
                            "condition": {
                              "id": 54010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "8499:10:136",
                              "subExpression": {
                                "id": 54009,
                                "name": "supported",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54007,
                                "src": "8500:9:136",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 54015,
                            "nodeType": "IfStatement",
                            "src": "8495:79:136",
                            "trueBody": {
                              "id": 54014,
                              "nodeType": "Block",
                              "src": "8511:63:136",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 54011,
                                      "name": "InterfaceNotSupported",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 53595,
                                      "src": "8536:21:136",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 54012,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8536:23:136",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 54013,
                                  "nodeType": "RevertStatement",
                                  "src": "8529:30:136"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 54017,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 54008,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 54007,
                            "mutability": "mutable",
                            "name": "supported",
                            "nameLocation": "8470:9:136",
                            "nodeType": "VariableDeclaration",
                            "scope": 54017,
                            "src": "8465:14:136",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 54006,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "8465:4:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "8464:16:136"
                      },
                      "src": "8456:128:136"
                    },
                    {
                      "block": {
                        "id": 54021,
                        "nodeType": "Block",
                        "src": "8591:55:136",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 54018,
                                "name": "InterfaceNotSupported",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53595,
                                "src": "8612:21:136",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 54019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8612:23:136",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 54020,
                            "nodeType": "RevertStatement",
                            "src": "8605:30:136"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 54022,
                      "nodeType": "TryCatchClause",
                      "src": "8585:61:136"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 54002,
                              "name": "IConditionalOrderGenerator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54538,
                              "src": "8406:26:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IConditionalOrderGenerator_$54538_$",
                                "typeString": "type(contract IConditionalOrderGenerator)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IConditionalOrderGenerator_$54538_$",
                                "typeString": "type(contract IConditionalOrderGenerator)"
                              }
                            ],
                            "id": 54001,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "8401:4:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 54003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8401:32:136",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IConditionalOrderGenerator_$54538",
                            "typeString": "type(contract IConditionalOrderGenerator)"
                          }
                        },
                        "id": 54004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "8434:11:136",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "8401:44:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 53996,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53972,
                                  "src": "8353:6:136",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_calldata_ptr",
                                    "typeString": "struct IConditionalOrder.ConditionalOrderParams calldata"
                                  }
                                },
                                "id": 53997,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8360:7:136",
                                "memberName": "handler",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 54480,
                                "src": "8353:14:136",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConditionalOrder_$54507",
                                  "typeString": "contract IConditionalOrder"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IConditionalOrder_$54507",
                                  "typeString": "contract IConditionalOrder"
                                }
                              ],
                              "id": 53995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8345:7:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53994,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8345:7:136",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8345:23:136",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53993,
                          "name": "IConditionalOrderGenerator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54538,
                          "src": "8318:26:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IConditionalOrderGenerator_$54538_$",
                            "typeString": "type(contract IConditionalOrderGenerator)"
                          }
                        },
                        "id": 53999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8318:51:136",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConditionalOrderGenerator_$54538",
                          "typeString": "contract IConditionalOrderGenerator"
                        }
                      },
                      "id": 54000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8370:17:136",
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52196,
                      "src": "8318:69:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view external returns (bool)"
                      }
                    },
                    "id": 54005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8318:137:136",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54023,
                  "nodeType": "TryStatement",
                  "src": "8314:332:136"
                },
                {
                  "expression": {
                    "id": 54041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54024,
                      "name": "order",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53981,
                      "src": "8656:5:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                        "typeString": "struct GPv2Order.Data memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 54033,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53969,
                          "src": "8747:5:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 54034,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8754:3:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 54035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8758:6:136",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8754:10:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 54036,
                          "name": "ctx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53986,
                          "src": "8766:3:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 54037,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53972,
                            "src": "8771:6:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_calldata_ptr",
                              "typeString": "struct IConditionalOrder.ConditionalOrderParams calldata"
                            }
                          },
                          "id": 54038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8778:11:136",
                          "memberName": "staticInput",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54484,
                          "src": "8771:18:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        {
                          "id": 54039,
                          "name": "offchainInput",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53974,
                          "src": "8791:13:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 54028,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 53972,
                                    "src": "8699:6:136",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_calldata_ptr",
                                      "typeString": "struct IConditionalOrder.ConditionalOrderParams calldata"
                                    }
                                  },
                                  "id": 54029,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8706:7:136",
                                  "memberName": "handler",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 54480,
                                  "src": "8699:14:136",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IConditionalOrder_$54507",
                                    "typeString": "contract IConditionalOrder"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IConditionalOrder_$54507",
                                    "typeString": "contract IConditionalOrder"
                                  }
                                ],
                                "id": 54027,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8691:7:136",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 54026,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8691:7:136",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 54030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8691:23:136",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 54025,
                            "name": "IConditionalOrderGenerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54538,
                            "src": "8664:26:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IConditionalOrderGenerator_$54538_$",
                              "typeString": "type(contract IConditionalOrderGenerator)"
                            }
                          },
                          "id": 54031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8664:51:136",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IConditionalOrderGenerator_$54538",
                            "typeString": "contract IConditionalOrderGenerator"
                          }
                        },
                        "id": 54032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8716:17:136",
                        "memberName": "getTradeableOrder",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54537,
                        "src": "8664:69:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_Data_$17121_memory_ptr_$",
                          "typeString": "function (address,address,bytes32,bytes memory,bytes memory) view external returns (struct GPv2Order.Data memory)"
                        }
                      },
                      "id": 54040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8664:150:136",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                        "typeString": "struct GPv2Order.Data memory"
                      }
                    },
                    "src": "8656:158:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                      "typeString": "struct GPv2Order.Data memory"
                    }
                  },
                  "id": 54042,
                  "nodeType": "ExpressionStatement",
                  "src": "8656:158:136"
                },
                {
                  "condition": {
                    "id": 54051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "8900:56:136",
                    "subExpression": {
                      "components": [
                        {
                          "arguments": [
                            {
                              "id": 54044,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53969,
                              "src": "8914:5:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 54045,
                              "name": "ctx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53986,
                              "src": "8921:3:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 54046,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53972,
                              "src": "8926:6:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_calldata_ptr",
                                "typeString": "struct IConditionalOrder.ConditionalOrderParams calldata"
                              }
                            },
                            {
                              "id": 54047,
                              "name": "offchainInput",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53974,
                              "src": "8934:13:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "id": 54048,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53981,
                              "src": "8949:5:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                                "typeString": "struct GPv2Order.Data memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_calldata_ptr",
                                "typeString": "struct IConditionalOrder.ConditionalOrderParams calldata"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                                "typeString": "struct GPv2Order.Data memory"
                              }
                            ],
                            "id": 54043,
                            "name": "_guardCheck",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54246,
                            "src": "8902:11:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_struct$_ConditionalOrderParams_$54485_memory_ptr_$_t_bytes_memory_ptr_$_t_struct$_Data_$17121_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (address,bytes32,struct IConditionalOrder.ConditionalOrderParams memory,bytes memory,struct GPv2Order.Data memory) view returns (bool)"
                            }
                          },
                          "id": 54049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8902:53:136",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 54050,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8901:55:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54056,
                  "nodeType": "IfStatement",
                  "src": "8896:115:136",
                  "trueBody": {
                    "id": 54055,
                    "nodeType": "Block",
                    "src": "8958:53:136",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 54052,
                            "name": "SwapGuardRestricted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53589,
                            "src": "8979:19:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 54053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8979:21:136",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 54054,
                        "nodeType": "RevertStatement",
                        "src": "8972:28:136"
                      }
                    ]
                  }
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 54098,
                        "nodeType": "Block",
                        "src": "9166:439:136",
                        "statements": [
                          {
                            "condition": {
                              "id": 54070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "9184:10:136",
                              "subExpression": {
                                "id": 54069,
                                "name": "supported",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54067,
                                "src": "9185:9:136",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 54075,
                            "nodeType": "IfStatement",
                            "src": "9180:80:136",
                            "trueBody": {
                              "id": 54074,
                              "nodeType": "Block",
                              "src": "9196:64:136",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 54071,
                                      "name": "InvalidFallbackHandler",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 53593,
                                      "src": "9221:22:136",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 54072,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9221:24:136",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 54073,
                                  "nodeType": "RevertStatement",
                                  "src": "9214:31:136"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "id": 54096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 54076,
                                "name": "signature",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53983,
                                "src": "9273:9:136",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "hexValue": "736166655369676e617475726528627974657333322c627974657333322c62797465732c627974657329",
                                    "id": 54079,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9326:44:136",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_5fd7e97d23ef360c5d2e60fa1c324a4e6732bed1784f8dbd80419b885c65f5a0",
                                      "typeString": "literal_string \"safeSignature(bytes32,bytes32,bytes,bytes)\""
                                    },
                                    "value": "safeSignature(bytes32,bytes32,bytes,bytes)"
                                  },
                                  {
                                    "id": 54080,
                                    "name": "domainSeparator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 53634,
                                    "src": "9388:15:136",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 54081,
                                      "name": "GPv2Order",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 17246,
                                      "src": "9421:9:136",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_GPv2Order_$17246_$",
                                        "typeString": "type(library GPv2Order)"
                                      }
                                    },
                                    "id": 54082,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "9431:9:136",
                                    "memberName": "TYPE_HASH",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 17125,
                                    "src": "9421:19:136",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 54085,
                                        "name": "order",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 53981,
                                        "src": "9469:5:136",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                                          "typeString": "struct GPv2Order.Data memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                                          "typeString": "struct GPv2Order.Data memory"
                                        }
                                      ],
                                      "expression": {
                                        "id": 54083,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "9458:3:136",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 54084,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "9462:6:136",
                                      "memberName": "encode",
                                      "nodeType": "MemberAccess",
                                      "src": "9458:10:136",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 54086,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9458:17:136",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 54090,
                                            "name": "params",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 53972,
                                            "src": "9527:6:136",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_calldata_ptr",
                                              "typeString": "struct IConditionalOrder.ConditionalOrderParams calldata"
                                            }
                                          },
                                          {
                                            "id": 54091,
                                            "name": "offchainInput",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 53974,
                                            "src": "9550:13:136",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_calldata_ptr",
                                              "typeString": "bytes calldata"
                                            }
                                          },
                                          {
                                            "id": 54092,
                                            "name": "proof",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 53977,
                                            "src": "9572:5:136",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                              "typeString": "bytes32[] calldata"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_calldata_ptr",
                                              "typeString": "struct IConditionalOrder.ConditionalOrderParams calldata"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes_calldata_ptr",
                                              "typeString": "bytes calldata"
                                            },
                                            {
                                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                              "typeString": "bytes32[] calldata"
                                            }
                                          ],
                                          "id": 54089,
                                          "name": "PayloadStruct",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 53604,
                                          "src": "9504:13:136",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_struct$_PayloadStruct_$53604_storage_ptr_$",
                                            "typeString": "type(struct ComposableCoW.PayloadStruct storage pointer)"
                                          }
                                        },
                                        "id": 54093,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "structConstructorCall",
                                        "lValueRequested": false,
                                        "nameLocations": [
                                          "9519:6:136",
                                          "9535:13:136",
                                          "9565:5:136"
                                        ],
                                        "names": [
                                          "params",
                                          "offchainInput",
                                          "proof"
                                        ],
                                        "nodeType": "FunctionCall",
                                        "src": "9504:75:136",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_PayloadStruct_$53604_memory_ptr",
                                          "typeString": "struct ComposableCoW.PayloadStruct memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_struct$_PayloadStruct_$53604_memory_ptr",
                                          "typeString": "struct ComposableCoW.PayloadStruct memory"
                                        }
                                      ],
                                      "expression": {
                                        "id": 54087,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "9493:3:136",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 54088,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "9497:6:136",
                                      "memberName": "encode",
                                      "nodeType": "MemberAccess",
                                      "src": "9493:10:136",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 54094,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9493:87:136",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_5fd7e97d23ef360c5d2e60fa1c324a4e6732bed1784f8dbd80419b885c65f5a0",
                                      "typeString": "literal_string \"safeSignature(bytes32,bytes32,bytes,bytes)\""
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 54077,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "9285:3:136",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 54078,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "9289:19:136",
                                  "memberName": "encodeWithSignature",
                                  "nodeType": "MemberAccess",
                                  "src": "9285:23:136",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (string memory) pure returns (bytes memory)"
                                  }
                                },
                                "id": 54095,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9285:309:136",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "src": "9273:321:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 54097,
                            "nodeType": "ExpressionStatement",
                            "src": "9273:321:136"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 54099,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 54068,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 54067,
                            "mutability": "mutable",
                            "name": "supported",
                            "nameLocation": "9146:9:136",
                            "nodeType": "VariableDeclaration",
                            "scope": 54099,
                            "src": "9141:14:136",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 54066,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "9141:4:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "9127:38:136"
                      },
                      "src": "9119:486:136"
                    },
                    {
                      "block": {
                        "id": 54112,
                        "nodeType": "Block",
                        "src": "9612:314:136",
                        "statements": [
                          {
                            "expression": {
                              "id": 54110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 54100,
                                "name": "signature",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53983,
                                "src": "9809:9:136",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 54103,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 53981,
                                    "src": "9832:5:136",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                                      "typeString": "struct GPv2Order.Data memory"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 54105,
                                        "name": "params",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 53972,
                                        "src": "9862:6:136",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_calldata_ptr",
                                          "typeString": "struct IConditionalOrder.ConditionalOrderParams calldata"
                                        }
                                      },
                                      {
                                        "id": 54106,
                                        "name": "offchainInput",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 53974,
                                        "src": "9885:13:136",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_calldata_ptr",
                                          "typeString": "bytes calldata"
                                        }
                                      },
                                      {
                                        "id": 54107,
                                        "name": "proof",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 53977,
                                        "src": "9907:5:136",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                          "typeString": "bytes32[] calldata"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_calldata_ptr",
                                          "typeString": "struct IConditionalOrder.ConditionalOrderParams calldata"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes_calldata_ptr",
                                          "typeString": "bytes calldata"
                                        },
                                        {
                                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                          "typeString": "bytes32[] calldata"
                                        }
                                      ],
                                      "id": 54104,
                                      "name": "PayloadStruct",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 53604,
                                      "src": "9839:13:136",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_struct$_PayloadStruct_$53604_storage_ptr_$",
                                        "typeString": "type(struct ComposableCoW.PayloadStruct storage pointer)"
                                      }
                                    },
                                    "id": 54108,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "structConstructorCall",
                                    "lValueRequested": false,
                                    "nameLocations": [
                                      "9854:6:136",
                                      "9870:13:136",
                                      "9900:5:136"
                                    ],
                                    "names": [
                                      "params",
                                      "offchainInput",
                                      "proof"
                                    ],
                                    "nodeType": "FunctionCall",
                                    "src": "9839:75:136",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PayloadStruct_$53604_memory_ptr",
                                      "typeString": "struct ComposableCoW.PayloadStruct memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                                      "typeString": "struct GPv2Order.Data memory"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_PayloadStruct_$53604_memory_ptr",
                                      "typeString": "struct ComposableCoW.PayloadStruct memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 54101,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "9821:3:136",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 54102,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "9825:6:136",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "9821:10:136",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 54109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9821:94:136",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "src": "9809:106:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 54111,
                            "nodeType": "ExpressionStatement",
                            "src": "9809:106:136"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 54113,
                      "nodeType": "TryCatchClause",
                      "src": "9606:320:136"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 54062,
                              "name": "ISignatureVerifierMuxer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51655,
                              "src": "9081:23:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ISignatureVerifierMuxer_$51655_$",
                                "typeString": "type(contract ISignatureVerifierMuxer)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_ISignatureVerifierMuxer_$51655_$",
                                "typeString": "type(contract ISignatureVerifierMuxer)"
                              }
                            ],
                            "id": 54061,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "9076:4:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 54063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9076:29:136",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_ISignatureVerifierMuxer_$51655",
                            "typeString": "type(contract ISignatureVerifierMuxer)"
                          }
                        },
                        "id": 54064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "9106:11:136",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "9076:41:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 54058,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53969,
                            "src": "9051:5:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 54057,
                          "name": "ExtensibleFallbackHandler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50607,
                          "src": "9025:25:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExtensibleFallbackHandler_$50607_$",
                            "typeString": "type(contract ExtensibleFallbackHandler)"
                          }
                        },
                        "id": 54059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9025:32:136",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExtensibleFallbackHandler_$50607",
                          "typeString": "contract ExtensibleFallbackHandler"
                        }
                      },
                      "id": 54060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9058:17:136",
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51361,
                      "src": "9025:50:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view external returns (bool)"
                      }
                    },
                    "id": 54065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9025:93:136",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54114,
                  "nodeType": "TryStatement",
                  "src": "9021:905:136"
                }
              ]
            },
            "documentation": {
              "id": 53967,
              "nodeType": "StructuredDocumentation",
              "src": "7307:509:136",
              "text": " Get the `GPv2Order.Data` and signature for submitting to CoW Protocol API\n @param owner of the order\n @param params `ConditionalOrderParams` for the order\n @param offchainInput any dynamic off-chain input for generating the discrete order\n @param proof if using merkle-roots that H(handler || salt || staticInput) is in the merkle tree\n @return order discrete order for submitting to CoW Protocol API\n @return signature for submitting to CoW Protocol API"
            },
            "functionSelector": "26e0a196",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTradeableOrderWithSignature",
            "nameLocation": "7830:30:136",
            "parameters": {
              "id": 53978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53969,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "7878:5:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 54116,
                  "src": "7870:13:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53968,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7870:7:136",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53972,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "7943:6:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 54116,
                  "src": "7893:56:136",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_calldata_ptr",
                    "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                  },
                  "typeName": {
                    "id": 53971,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53970,
                      "name": "IConditionalOrder.ConditionalOrderParams",
                      "nameLocations": [
                        "7893:17:136",
                        "7911:22:136"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54485,
                      "src": "7893:40:136"
                    },
                    "referencedDeclaration": 54485,
                    "src": "7893:40:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_storage_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53974,
                  "mutability": "mutable",
                  "name": "offchainInput",
                  "nameLocation": "7974:13:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 54116,
                  "src": "7959:28:136",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 53973,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7959:5:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53977,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "8016:5:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 54116,
                  "src": "7997:24:136",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 53975,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "7997:7:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 53976,
                    "nodeType": "ArrayTypeName",
                    "src": "7997:9:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7860:167:136"
            },
            "returnParameters": {
              "id": 53984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53981,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "8073:5:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 54116,
                  "src": "8051:27:136",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                    "typeString": "struct GPv2Order.Data"
                  },
                  "typeName": {
                    "id": 53980,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53979,
                      "name": "GPv2Order.Data",
                      "nameLocations": [
                        "8051:9:136",
                        "8061:4:136"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17121,
                      "src": "8051:14:136"
                    },
                    "referencedDeclaration": 17121,
                    "src": "8051:14:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$17121_storage_ptr",
                      "typeString": "struct GPv2Order.Data"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53983,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "8093:9:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 54116,
                  "src": "8080:22:136",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 53982,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8080:5:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8050:53:136"
            },
            "scope": 54247,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54133,
            "nodeType": "FunctionDefinition",
            "src": "10165:153:136",
            "nodes": [],
            "body": {
              "id": 54132,
              "nodeType": "Block",
              "src": "10265:53:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54128,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54120,
                            "src": "10303:6:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                              "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                              "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                            }
                          ],
                          "expression": {
                            "id": 54126,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10292:3:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 54127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "10296:6:136",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "10292:10:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 54129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10292:18:136",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 54125,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "10282:9:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 54130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10282:29:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 54124,
                  "id": 54131,
                  "nodeType": "Return",
                  "src": "10275:36:136"
                }
              ]
            },
            "documentation": {
              "id": 54117,
              "nodeType": "StructuredDocumentation",
              "src": "9974:186:136",
              "text": " Return the hash of the conditional order parameters\n @param params `ConditionalOrderParams` for the order\n @return hash of the conditional order parameters"
            },
            "functionSelector": "5500079d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hash",
            "nameLocation": "10174:4:136",
            "parameters": {
              "id": 54121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54120,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "10227:6:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 54133,
                  "src": "10179:54:136",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                    "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                  },
                  "typeName": {
                    "id": 54119,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54118,
                      "name": "IConditionalOrder.ConditionalOrderParams",
                      "nameLocations": [
                        "10179:17:136",
                        "10197:22:136"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54485,
                      "src": "10179:40:136"
                    },
                    "referencedDeclaration": 54485,
                    "src": "10179:40:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_storage_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10178:56:136"
            },
            "returnParameters": {
              "id": 54124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54123,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54133,
                  "src": "10256:7:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 54122,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10256:7:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10255:9:136"
            },
            "scope": 54247,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54199,
            "nodeType": "FunctionDefinition",
            "src": "10702:721:136",
            "nodes": [],
            "body": {
              "id": 54198,
              "nodeType": "Block",
              "src": "10876:547:136",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 54150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 54147,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54142,
                        "src": "10890:5:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 54148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10896:6:136",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10890:12:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 54149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10906:1:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10890:17:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 54196,
                    "nodeType": "Block",
                    "src": "11220:197:136",
                    "statements": [
                      {
                        "expression": {
                          "id": 54183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 54179,
                            "name": "ctx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54145,
                            "src": "11282:3:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 54181,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54139,
                                "src": "11293:6:136",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                                  "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                                  "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                                }
                              ],
                              "id": 54180,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54133,
                              "src": "11288:4:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_ConditionalOrderParams_$54485_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (struct IConditionalOrder.ConditionalOrderParams memory) pure returns (bytes32)"
                              }
                            },
                            "id": 54182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11288:12:136",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "11282:18:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 54184,
                        "nodeType": "ExpressionStatement",
                        "src": "11282:18:136"
                      },
                      {
                        "condition": {
                          "id": 54190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "11318:25:136",
                          "subExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 54185,
                                "name": "singleOrders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53646,
                                "src": "11319:12:136",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(bytes32 => bool))"
                                }
                              },
                              "id": 54187,
                              "indexExpression": {
                                "id": 54186,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54136,
                                "src": "11332:5:136",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11319:19:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 54189,
                            "indexExpression": {
                              "id": 54188,
                              "name": "ctx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54145,
                              "src": "11339:3:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11319:24:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 54195,
                        "nodeType": "IfStatement",
                        "src": "11314:93:136",
                        "trueBody": {
                          "id": 54194,
                          "nodeType": "Block",
                          "src": "11345:62:136",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 54191,
                                  "name": "SingleOrderNotAuthed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53587,
                                  "src": "11370:20:136",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 54192,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11370:22:136",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 54193,
                              "nodeType": "RevertStatement",
                              "src": "11363:29:136"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 54197,
                  "nodeType": "IfStatement",
                  "src": "10886:531:136",
                  "trueBody": {
                    "id": 54178,
                    "nodeType": "Block",
                    "src": "10909:305:136",
                    "statements": [
                      {
                        "assignments": [
                          54153
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 54153,
                            "mutability": "mutable",
                            "name": "leaf",
                            "nameLocation": "10994:4:136",
                            "nodeType": "VariableDeclaration",
                            "scope": 54178,
                            "src": "10986:12:136",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 54152,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10986:7:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "documentation": "@dev Computing proof using leaf double hashing",
                        "id": 54163,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 54159,
                                      "name": "params",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 54139,
                                      "src": "11029:6:136",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                                        "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                                        "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                                      }
                                    ],
                                    "id": 54158,
                                    "name": "hash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54133,
                                    "src": "11024:4:136",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_struct$_ConditionalOrderParams_$54485_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (struct IConditionalOrder.ConditionalOrderParams memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 54160,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11024:12:136",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 54156,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11011:5:136",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 54155,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11011:5:136",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 54157,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11017:6:136",
                                "memberName": "concat",
                                "nodeType": "MemberAccess",
                                "src": "11011:12:136",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 54161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11011:26:136",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 54154,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "11001:9:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 54162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11001:37:136",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10986:52:136"
                      },
                      {
                        "condition": {
                          "id": 54172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "11100:46:136",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 54166,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54142,
                                "src": "11120:5:136",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 54167,
                                  "name": "roots",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53639,
                                  "src": "11127:5:136",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                                    "typeString": "mapping(address => bytes32)"
                                  }
                                },
                                "id": 54169,
                                "indexExpression": {
                                  "id": 54168,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54136,
                                  "src": "11133:5:136",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11127:12:136",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 54170,
                                "name": "leaf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54153,
                                "src": "11141:4:136",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 54164,
                                "name": "MerkleProof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1245,
                                "src": "11101:11:136",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_MerkleProof_$1245_$",
                                  "typeString": "type(library MerkleProof)"
                                }
                              },
                              "id": 54165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11113:6:136",
                              "memberName": "verify",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 741,
                              "src": "11101:18:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                                "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                              }
                            },
                            "id": 54171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11101:45:136",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 54177,
                        "nodeType": "IfStatement",
                        "src": "11096:108:136",
                        "trueBody": {
                          "id": 54176,
                          "nodeType": "Block",
                          "src": "11148:56:136",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 54173,
                                  "name": "ProofNotAuthed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53585,
                                  "src": "11173:14:136",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 54174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11173:16:136",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 54175,
                              "nodeType": "RevertStatement",
                              "src": "11166:23:136"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 54134,
              "nodeType": "StructuredDocumentation",
              "src": "10355:342:136",
              "text": " Check if the order has been authorised by the owner\n @dev If `proof.length == 0`, then we use the single order auth\n @param owner of the order whose authorisation is being checked\n @param params that uniquely identify the order\n @param proof to assert that H(params) is in the merkle tree (optional)"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_auth",
            "nameLocation": "10711:5:136",
            "parameters": {
              "id": 54143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54136,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "10725:5:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 54199,
                  "src": "10717:13:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10717:7:136",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54139,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "10780:6:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 54199,
                  "src": "10732:54:136",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                    "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                  },
                  "typeName": {
                    "id": 54138,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54137,
                      "name": "IConditionalOrder.ConditionalOrderParams",
                      "nameLocations": [
                        "10732:17:136",
                        "10750:22:136"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54485,
                      "src": "10732:40:136"
                    },
                    "referencedDeclaration": 54485,
                    "src": "10732:40:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_storage_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54142,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "10805:5:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 54199,
                  "src": "10788:22:136",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 54140,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "10788:7:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 54141,
                    "nodeType": "ArrayTypeName",
                    "src": "10788:9:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10716:95:136"
            },
            "returnParameters": {
              "id": 54146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54145,
                  "mutability": "mutable",
                  "name": "ctx",
                  "nameLocation": "10867:3:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 54199,
                  "src": "10859:11:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 54144,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10859:7:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10858:13:136"
            },
            "scope": 54247,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 54246,
            "nodeType": "FunctionDefinition",
            "src": "11830:433:136",
            "nodes": [],
            "body": {
              "id": 54245,
              "nodeType": "Block",
              "src": "12067:196:136",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54219
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54219,
                      "mutability": "mutable",
                      "name": "guard",
                      "nameLocation": "12088:5:136",
                      "nodeType": "VariableDeclaration",
                      "scope": 54245,
                      "src": "12077:16:136",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                        "typeString": "contract ISwapGuard"
                      },
                      "typeName": {
                        "id": 54218,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54217,
                          "name": "ISwapGuard",
                          "nameLocations": [
                            "12077:10:136"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54566,
                          "src": "12077:10:136"
                        },
                        "referencedDeclaration": 54566,
                        "src": "12077:10:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                          "typeString": "contract ISwapGuard"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54223,
                  "initialValue": {
                    "baseExpression": {
                      "id": 54220,
                      "name": "swapGuards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53651,
                      "src": "12096:10:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_ISwapGuard_$54566_$",
                        "typeString": "mapping(address => contract ISwapGuard)"
                      }
                    },
                    "id": 54222,
                    "indexExpression": {
                      "id": 54221,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54202,
                      "src": "12107:5:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12096:17:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                      "typeString": "contract ISwapGuard"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12077:36:136"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 54232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 54226,
                          "name": "guard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54219,
                          "src": "12135:5:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                            "typeString": "contract ISwapGuard"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                            "typeString": "contract ISwapGuard"
                          }
                        ],
                        "id": 54225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12127:7:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 54224,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12127:7:136",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 54227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12127:14:136",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 54230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12153:1:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 54229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12145:7:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 54228,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12145:7:136",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 54231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12145:10:136",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12127:28:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54242,
                  "nodeType": "IfStatement",
                  "src": "12123:113:136",
                  "trueBody": {
                    "id": 54241,
                    "nodeType": "Block",
                    "src": "12157:79:136",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 54235,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54212,
                              "src": "12191:5:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                                "typeString": "struct GPv2Order.Data memory"
                              }
                            },
                            {
                              "id": 54236,
                              "name": "ctx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54204,
                              "src": "12198:3:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 54237,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54207,
                              "src": "12203:6:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                                "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                              }
                            },
                            {
                              "id": 54238,
                              "name": "offchainInput",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54209,
                              "src": "12211:13:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                                "typeString": "struct GPv2Order.Data memory"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                                "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 54233,
                              "name": "guard",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54219,
                              "src": "12178:5:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISwapGuard_$54566",
                                "typeString": "contract ISwapGuard"
                              }
                            },
                            "id": 54234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12184:6:136",
                            "memberName": "verify",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54565,
                            "src": "12178:12:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_struct$_Data_$17121_memory_ptr_$_t_bytes32_$_t_struct$_ConditionalOrderParams_$54485_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (struct GPv2Order.Data memory,bytes32,struct IConditionalOrder.ConditionalOrderParams memory,bytes memory) view external returns (bool)"
                            }
                          },
                          "id": 54239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12178:47:136",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 54216,
                        "id": 54240,
                        "nodeType": "Return",
                        "src": "12171:54:136"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 54243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12252:4:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 54216,
                  "id": 54244,
                  "nodeType": "Return",
                  "src": "12245:11:136"
                }
              ]
            },
            "documentation": {
              "id": 54200,
              "nodeType": "StructuredDocumentation",
              "src": "11429:396:136",
              "text": " Check the swap guard if the order is restricted or not\n @param owner who's swap guard to check\n @param ctx of the order (bytes32(0) if a merkle tree is used, otherwise H(params))\n @param params that uniquely identify the order\n @param offchainInput that has been proposed by `sender`\n @param order GPv2Order.Data that has been proposed by `sender`"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_guardCheck",
            "nameLocation": "11839:11:136",
            "parameters": {
              "id": 54213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54202,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "11868:5:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 54246,
                  "src": "11860:13:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11860:7:136",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54204,
                  "mutability": "mutable",
                  "name": "ctx",
                  "nameLocation": "11891:3:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 54246,
                  "src": "11883:11:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 54203,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11883:7:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54207,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "11952:6:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 54246,
                  "src": "11904:54:136",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_memory_ptr",
                    "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                  },
                  "typeName": {
                    "id": 54206,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54205,
                      "name": "IConditionalOrder.ConditionalOrderParams",
                      "nameLocations": [
                        "11904:17:136",
                        "11922:22:136"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54485,
                      "src": "11904:40:136"
                    },
                    "referencedDeclaration": 54485,
                    "src": "11904:40:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54485_storage_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54209,
                  "mutability": "mutable",
                  "name": "offchainInput",
                  "nameLocation": "11981:13:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 54246,
                  "src": "11968:26:136",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54208,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11968:5:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54212,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "12026:5:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 54246,
                  "src": "12004:27:136",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                    "typeString": "struct GPv2Order.Data"
                  },
                  "typeName": {
                    "id": 54211,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54210,
                      "name": "GPv2Order.Data",
                      "nameLocations": [
                        "12004:9:136",
                        "12014:4:136"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17121,
                      "src": "12004:14:136"
                    },
                    "referencedDeclaration": 17121,
                    "src": "12004:14:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$17121_storage_ptr",
                      "typeString": "struct GPv2Order.Data"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11850:187:136"
            },
            "returnParameters": {
              "id": 54216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54215,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54246,
                  "src": "12061:4:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 54214,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12061:4:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12060:6:136"
            },
            "scope": 54247,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 53582,
              "name": "ISafeSignatureVerifier",
              "nameLocations": [
                "605:22:136"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 51635,
              "src": "605:22:136"
            },
            "id": 53583,
            "nodeType": "InheritanceSpecifier",
            "src": "605:22:136"
          }
        ],
        "canonicalName": "ComposableCoW",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 53581,
          "nodeType": "StructuredDocumentation",
          "src": "375:203:136",
          "text": " @title ComposableCoW - A contract that allows users to create multiple conditional orders\n @author mfw78 <mfw78@rndlabs.xyz>\n @dev Designed to be used with Safe + ExtensibleFallbackHandler"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          54247,
          51635
        ],
        "name": "ComposableCoW",
        "nameLocation": "588:13:136",
        "scope": 54248,
        "usedErrors": [
          53585,
          53587,
          53589,
          53591,
          53593,
          53595
        ]
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 136
}