{
  "abi": [],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Richard Meissner - @rmeissner\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SignatureDecoder - Decodes signatures encoded as bytes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/safe/contracts/common/SignatureDecoder.sol\":\"SignatureDecoder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/@openzeppelin/contracts/\",\":@openzeppelin/contracts/=lib/@openzeppelin/contracts/\",\":balancer/=lib/balancer/src/\",\":canonical-weth/=lib/canonical-weth/src/\",\":cowprotocol/=lib/cowprotocol/src/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":helpers/=lib/balancer/src/lib/helpers/\",\":math/=lib/balancer/src/lib/math/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/@openzeppelin/contracts/\",\":safe/=lib/safe/contracts/\"]},\"sources\":{\"lib/safe/contracts/common/SignatureDecoder.sol\":{\"keccak256\":\"0x2a3baf0efa1585ddf2276505c6d34fa16f01cafff1288e40110d5e67fb459c7c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://00cdded3068b9051ee0a966f40926fbc57dbe7ef8bf4285db3740f9d50468c80\",\"dweb:/ipfs/QmcP5hKmaRqBe7TpgoXtncZqsNKKdCCKxZgXoxEL4Nj5F4\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/@openzeppelin/contracts/",
        "@openzeppelin/contracts/=lib/@openzeppelin/contracts/",
        "balancer/=lib/balancer/src/",
        "canonical-weth/=lib/canonical-weth/src/",
        "cowprotocol/=lib/cowprotocol/src/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "helpers/=lib/balancer/src/lib/helpers/",
        "math/=lib/balancer/src/lib/math/",
        "murky/=lib/murky/src/",
        "openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/",
        "openzeppelin/=lib/@openzeppelin/contracts/",
        "safe/=lib/safe/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/safe/contracts/common/SignatureDecoder.sol": "SignatureDecoder"
      },
      "libraries": {}
    },
    "sources": {
      "lib/safe/contracts/common/SignatureDecoder.sol": {
        "keccak256": "0x2a3baf0efa1585ddf2276505c6d34fa16f01cafff1288e40110d5e67fb459c7c",
        "urls": [
          "bzz-raw://00cdded3068b9051ee0a966f40926fbc57dbe7ef8bf4285db3740f9d50468c80",
          "dweb:/ipfs/QmcP5hKmaRqBe7TpgoXtncZqsNKKdCCKxZgXoxEL4Nj5F4"
        ],
        "license": "LGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/safe/contracts/common/SignatureDecoder.sol",
    "id": 50117,
    "exportedSymbols": {
      "SignatureDecoder": [
        50116
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:1652:103",
    "nodes": [
      {
        "id": 50098,
        "nodeType": "PragmaDirective",
        "src": "42:31:103",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 50116,
        "nodeType": "ContractDefinition",
        "src": "189:1504:103",
        "nodes": [
          {
            "id": 50115,
            "nodeType": "FunctionDefinition",
            "src": "947:744:103",
            "nodes": [],
            "body": {
              "id": 50114,
              "nodeType": "Block",
              "src": "1063:628:103",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1138:547:103",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1152:34:103",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1176:4:103",
                              "type": "",
                              "value": "0x41"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1182:3:103"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "1172:3:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1172:14:103"
                        },
                        "variables": [
                          {
                            "name": "signaturePos",
                            "nodeType": "YulTypedName",
                            "src": "1156:12:103",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1199:52:103",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "signatures",
                                  "nodeType": "YulIdentifier",
                                  "src": "1214:10:103"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "signaturePos",
                                      "nodeType": "YulIdentifier",
                                      "src": "1230:12:103"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1244:4:103",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1226:3:103"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1226:23:103"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1210:3:103"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1210:40:103"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1204:5:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1204:47:103"
                        },
                        "variableNames": [
                          {
                            "name": "r",
                            "nodeType": "YulIdentifier",
                            "src": "1199:1:103"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1264:52:103",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "signatures",
                                  "nodeType": "YulIdentifier",
                                  "src": "1279:10:103"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "signaturePos",
                                      "nodeType": "YulIdentifier",
                                      "src": "1295:12:103"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1309:4:103",
                                      "type": "",
                                      "value": "0x40"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1291:3:103"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1291:23:103"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1275:3:103"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1275:40:103"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1269:5:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1269:47:103"
                        },
                        "variableNames": [
                          {
                            "name": "s",
                            "nodeType": "YulIdentifier",
                            "src": "1264:1:103"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1612:63:103",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "signatures",
                                      "nodeType": "YulIdentifier",
                                      "src": "1631:10:103"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "signaturePos",
                                          "nodeType": "YulIdentifier",
                                          "src": "1647:12:103"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1661:4:103",
                                          "type": "",
                                          "value": "0x41"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1643:3:103"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1643:23:103"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1627:3:103"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1627:40:103"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1621:5:103"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1621:47:103"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1670:4:103",
                              "type": "",
                              "value": "0xff"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1617:3:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1617:58:103"
                        },
                        "variableNames": [
                          {
                            "name": "v",
                            "nodeType": "YulIdentifier",
                            "src": "1612:1:103"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 50104,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1182:3:103",
                      "valueSize": 1
                    },
                    {
                      "declaration": 50109,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1199:1:103",
                      "valueSize": 1
                    },
                    {
                      "declaration": 50111,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1264:1:103",
                      "valueSize": 1
                    },
                    {
                      "declaration": 50102,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1214:10:103",
                      "valueSize": 1
                    },
                    {
                      "declaration": 50102,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1279:10:103",
                      "valueSize": 1
                    },
                    {
                      "declaration": 50102,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1631:10:103",
                      "valueSize": 1
                    },
                    {
                      "declaration": 50107,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1612:1:103",
                      "valueSize": 1
                    }
                  ],
                  "id": 50113,
                  "nodeType": "InlineAssembly",
                  "src": "1129:556:103"
                }
              ]
            },
            "documentation": {
              "id": 50100,
              "nodeType": "StructuredDocumentation",
              "src": "230:712:103",
              "text": " @notice Splits signature bytes into `uint8 v, bytes32 r, bytes32 s`.\n @dev Make sure to perform a bounds check for @param pos, to avoid out of bounds access on @param signatures\n      The signature format is a compact form of {bytes32 r}{bytes32 s}{uint8 v}\n      Compact means uint8 is not padded to 32 bytes.\n @param pos Which signature to read.\n            A prior bounds check of this parameter should be performed, to avoid out of bounds access.\n @param signatures Concatenated {r, s, v} signatures.\n @return v Recovery ID or Safe signature type.\n @return r Output value r of the signature.\n @return s Output value s of the signature."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "signatureSplit",
            "nameLocation": "956:14:103",
            "parameters": {
              "id": 50105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50102,
                  "mutability": "mutable",
                  "name": "signatures",
                  "nameLocation": "984:10:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 50115,
                  "src": "971:23:103",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50101,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "971:5:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50104,
                  "mutability": "mutable",
                  "name": "pos",
                  "nameLocation": "1004:3:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 50115,
                  "src": "996:11:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "996:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "970:38:103"
            },
            "returnParameters": {
              "id": 50112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50107,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "1038:1:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 50115,
                  "src": "1032:7:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 50106,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:5:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50109,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "1049:1:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 50115,
                  "src": "1041:9:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50108,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1041:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50111,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "1060:1:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 50115,
                  "src": "1052:9:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50110,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1052:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1031:31:103"
            },
            "scope": 50116,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "SignatureDecoder",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 50099,
          "nodeType": "StructuredDocumentation",
          "src": "75:113:103",
          "text": " @title SignatureDecoder - Decodes signatures encoded as bytes\n @author Richard Meissner - @rmeissner"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          50116
        ],
        "name": "SignatureDecoder",
        "nameLocation": "207:16:103",
        "scope": 50117,
        "usedErrors": []
      }
    ],
    "license": "LGPL-3.0-only"
  },
  "id": 103
}