{
  "abi": [],
  "bytecode": {
    "object": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208340371c83778e3c049c88db4b2c6c24424ad4eecd749116234ff8069ad1758c64736f6c63430008130033",
    "sourceMap": "1091:741:67:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1091:741:67;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208340371c83778e3c049c88db4b2c6c24424ad4eecd749116234ff8069ad1758c64736f6c63430008130033",
    "sourceMap": "1091:741:67:-:0;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/cowprotocol/src/contracts/libraries/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/@openzeppelin/contracts/\",\":@openzeppelin/contracts/=lib/@openzeppelin/contracts/\",\":balancer/=lib/balancer/src/\",\":canonical-weth/=lib/canonical-weth/src/\",\":cowprotocol/=lib/cowprotocol/src/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":helpers/=lib/balancer/src/lib/helpers/\",\":math/=lib/balancer/src/lib/math/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/@openzeppelin/contracts/\",\":safe/=lib/safe/contracts/\"]},\"sources\":{\"lib/cowprotocol/src/contracts/libraries/SafeCast.sol\":{\"keccak256\":\"0x5804f013c055fefd71f82a86e51070e43bc17ec47fef18a501ad5fbccb20c9fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39d85416d210ab05604c4d65aa61b69b220d6b3ae0e0077586104914e129c693\",\"dweb:/ipfs/QmdNpvn2jtCJLJ8jTDgQFGCAkKVAxg4FJWaLUhWxFZphPP\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/@openzeppelin/contracts/",
        "@openzeppelin/contracts/=lib/@openzeppelin/contracts/",
        "balancer/=lib/balancer/src/",
        "canonical-weth/=lib/canonical-weth/src/",
        "cowprotocol/=lib/cowprotocol/src/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "helpers/=lib/balancer/src/lib/helpers/",
        "math/=lib/balancer/src/lib/math/",
        "murky/=lib/murky/src/",
        "openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/",
        "openzeppelin/=lib/@openzeppelin/contracts/",
        "safe/=lib/safe/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/cowprotocol/src/contracts/libraries/SafeCast.sol": "SafeCast"
      },
      "libraries": {}
    },
    "sources": {
      "lib/cowprotocol/src/contracts/libraries/SafeCast.sol": {
        "keccak256": "0x5804f013c055fefd71f82a86e51070e43bc17ec47fef18a501ad5fbccb20c9fd",
        "urls": [
          "bzz-raw://39d85416d210ab05604c4d65aa61b69b220d6b3ae0e0077586104914e129c693",
          "dweb:/ipfs/QmdNpvn2jtCJLJ8jTDgQFGCAkKVAxg4FJWaLUhWxFZphPP"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/cowprotocol/src/contracts/libraries/SafeCast.sol",
    "id": 18080,
    "exportedSymbols": {
      "SafeCast": [
        18079
      ]
    },
    "nodeType": "SourceUnit",
    "src": "348:1485:67",
    "nodes": [
      {
        "id": 18028,
        "nodeType": "PragmaDirective",
        "src": "348:31:67",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 18079,
        "nodeType": "ContractDefinition",
        "src": "1091:741:67",
        "nodes": [
          {
            "id": 18050,
            "nodeType": "FunctionDefinition",
            "src": "1279:158:67",
            "nodes": [],
            "body": {
              "id": 18049,
              "nodeType": "Block",
              "src": "1344:93:67",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 18040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18038,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18032,
                          "src": "1362:5:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 18039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1371:1:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1362:10:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53616665436173743a206e6f7420706f736974697665",
                        "id": 18041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1374:24:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_adc77ccea927851d16e8ca6f2c34af5d2b2f361bd52233c43aa0aeae2ab27b40",
                          "typeString": "literal_string \"SafeCast: not positive\""
                        },
                        "value": "SafeCast: not positive"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_adc77ccea927851d16e8ca6f2c34af5d2b2f361bd52233c43aa0aeae2ab27b40",
                          "typeString": "literal_string \"SafeCast: not positive\""
                        }
                      ],
                      "id": 18037,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1354:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1354:45:67",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18043,
                  "nodeType": "ExpressionStatement",
                  "src": "1354:45:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18046,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18032,
                        "src": "1424:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 18045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1416:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 18044,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1416:7:67",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 18047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1416:14:67",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 18036,
                  "id": 18048,
                  "nodeType": "Return",
                  "src": "1409:21:67"
                }
              ]
            },
            "documentation": {
              "id": 18030,
              "nodeType": "StructuredDocumentation",
              "src": "1114:160:67",
              "text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toUint256",
            "nameLocation": "1288:9:67",
            "parameters": {
              "id": 18033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18032,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1305:5:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 18050,
                  "src": "1298:12:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 18031,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1298:6:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1297:14:67"
            },
            "returnParameters": {
              "id": 18036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18035,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18050,
                  "src": "1335:7:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1334:9:67"
            },
            "scope": 18079,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 18078,
            "nodeType": "FunctionDefinition",
            "src": "1613:217:67",
            "nodes": [],
            "body": {
              "id": 18077,
              "nodeType": "Block",
              "src": "1677:153:67",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 18068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18059,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18053,
                          "src": "1708:5:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 18064,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1730:6:67",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_int256_$",
                                      "typeString": "type(int256)"
                                    },
                                    "typeName": {
                                      "id": 18063,
                                      "name": "int256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1730:6:67",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_int256_$",
                                      "typeString": "type(int256)"
                                    }
                                  ],
                                  "id": 18062,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "1725:4:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 18065,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1725:12:67",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_int256",
                                  "typeString": "type(int256)"
                                }
                              },
                              "id": 18066,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1738:3:67",
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "1725:16:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 18061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1717:7:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 18060,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1717:7:67",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1717:25:67",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1708:34:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53616665436173743a20696e74323536206f766572666c6f77",
                        "id": 18069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1756:27:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c774b6bd7577175976494191132bb1977fd33570055fd4bdf687cbec839fa6f4",
                          "typeString": "literal_string \"SafeCast: int256 overflow\""
                        },
                        "value": "SafeCast: int256 overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c774b6bd7577175976494191132bb1977fd33570055fd4bdf687cbec839fa6f4",
                          "typeString": "literal_string \"SafeCast: int256 overflow\""
                        }
                      ],
                      "id": 18058,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1687:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1687:106:67",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18071,
                  "nodeType": "ExpressionStatement",
                  "src": "1687:106:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18074,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18053,
                        "src": "1817:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1810:6:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int256_$",
                        "typeString": "type(int256)"
                      },
                      "typeName": {
                        "id": 18072,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1810:6:67",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 18075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1810:13:67",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 18057,
                  "id": 18076,
                  "nodeType": "Return",
                  "src": "1803:20:67"
                }
              ]
            },
            "documentation": {
              "id": 18051,
              "nodeType": "StructuredDocumentation",
              "src": "1443:165:67",
              "text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toInt256",
            "nameLocation": "1622:8:67",
            "parameters": {
              "id": 18054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18053,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1639:5:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 18078,
                  "src": "1631:13:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18052,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1630:15:67"
            },
            "returnParameters": {
              "id": 18057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18056,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18078,
                  "src": "1669:6:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 18055,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1669:6:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1668:8:67"
            },
            "scope": 18079,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SafeCast",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 18029,
          "nodeType": "StructuredDocumentation",
          "src": "381:709:67",
          "text": " @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          18079
        ],
        "name": "SafeCast",
        "nameLocation": "1099:8:67",
        "scope": 18080,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 67
}